fullname: C++
description: The C++ assistant will help you create a basic C++ project and install its dependencies.

dependencies:
- rpm: ['gcc-c++', 'glibc-devel', 'automake', 'autoconf', 'valgrind', 'gdb', 'strace']

dependencies_build:
- rpm: ['rpm-build','mock','rpmdevtools']

dependencies_eclipse:
- use: eclipse.dependencies_c

dependencies_vim:
- use: vim.dependencies

args:
  name:
    use: common_args

  build:
    flags:
    - -b
    - --build
    help:
      'This will create SRPM and RPM packages.'
    action:
      'store_true'
  vim:
    use: vim

  eclipse:
    use: eclipse

  github:
    use: common_args

files:
  cppsources: &cppsources
    source: .

run:
- $dirname~: $(dirname "$name")
- $basename~: $(basename "$name" | tr '[A-Z]' '[a-z]')
- log_i: "Project name will be converted to lowercase letters ($basename)"
- $lowername: $dirname/$basename
- if not $(ls "$lowername"):
  - log_i: 'Copying c++ source tree to project destination'
  - cl_i: cp -r *cppsources "$lowername"
  - dda_c: "$lowername"
  - cl: cd "$lowername"
  - cl: sed -i "s|CDevelopmentTool|$basename|" configure.ac
  - cl: mv cdevelopmenttool.spec "$basename.spec"
  - cl: sed -i "s|cdevelopmenttool|$basename|" "$basename.spec"
  - use: git_init_add_commit.run
- else:
  - cl: cd "$lowername"
  - log_i: 'Project already exists'  
- log_i: 'Run autoreconf'
- cl_i: autoreconf --install
- log_i: 'Run configure script'
- cl_i: ./configure
- cl_i: make clean
- log_i: 'Compiling sources'
- cl_i: make
- log_i: 'Run make distcheck to create a tar ball'
- cl_i: make dist
- log_i: 'The $name/README file describes how to add and build a new C++'
- log_i: 'source file using autotools'
- log_i: 'More information about autotools can be found here:'
- log_i: 'automake: http://www.gnu.org/software/automake/manual/automake.html'
- log_i: 'autoconf: http://www.gnu.org/software/autoconf/manual/autoconf.html' 
- if defined $vim:
  - use: vim.run
- if defined $build:
  - log_i: 'Creating spec file'
  - $dirname~: $(pwd)
  - cl: rpmdev-setuptree
  - cl: rm -f "~/rpmbuild/SPECS/$basename.spec"
  - cl: cp "$basename-0.0.tar.gz" ~/rpmbuild/SOURCES
  - cl: cp "$basename.spec" ~/rpmbuild/SPECS
  - cl: cd ~/rpmbuild/SPECS
  - $builddeps~: $(rpmspec -q --buildrequires "~/rpmbuild/SPECS/$basename.spec")
  - $missingdeps:
  - for $d word_in $builddeps:
    - if not $(rpm -q $d):
      - $missingdeps: $missingdeps $d
  - if $missingdeps:
    - cl_ir: yum-builddep "~/rpmbuild/SPECS/$basename.spec" -y
  - log_i: 'Creating RPM from tarball'
  - cl_i: rpmbuild -ba "$basename.spec"
  - cl: cd "$dirname"
- if $eclipse:
  - use: eclipse.run_cpp
- if defined $github:
  - log_i: "Pushing to GitHub repository"
  - github: create_and_push
