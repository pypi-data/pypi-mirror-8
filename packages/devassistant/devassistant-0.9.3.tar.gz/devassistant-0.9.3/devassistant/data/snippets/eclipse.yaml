dependencies:
- rpm: ['eclipse', 'eclipse-cdt']

dependencies_c:
- rpm: ['eclipse-mylyn-context-cdt','eclipse-egit','eclipse-cdt-parsers','eclipse-cdt-sdk']

dependencies_java:
- rpm: ['eclipse-jdt','eclipse-m2e-core','eclipse-egit']

dependencies_python:
- rpm: ['eclipse-pydev']

dependencies_php:
- rpm: ['eclipse-phpeclipse']

args:
  eclipse:
    flags:
    - -e
    - --eclipse
    help:
      'Configure as Eclipse project (uses ~/workspace or specified directory)'
    action:
      [default_iff_used, ~/workspace]
    nargs:
      '?'
    gui_hints:
      type: path
      default: ~/workspace
    preserved:
      'global.eclipse_workspace_dir'

files:
  dot_eclipseproject_c: &dot_eclipseproject_c
    source: c/.eclipseproject
  dot_cproject_c: &dot_cproject_c
    source: c/.cproject
  dot_autotools_c: &dot_autotools_c
    source: c/.autotools
  dot_eclipseproject_cpp: &dot_eclipseproject_cpp
    source: c/.eclipseproject
  dot_cproject_cpp: &dot_cproject_cpp
    source: c/.cproject
  dot_autotools_cpp: &dot_autotools_cpp
    source: c/.autotools
  dot_project_python: &dot_project_python
    source: python/.project
  dot_pydevproject_python: &dot_pydevproject_python
    source: python/.pydevproject
  dot_project_django: &dot_project_django
    source: python/django/.project
  dot_pydevproject_django: &dot_pydevproject_django
    source: python/django/.pydevproject
  dot_eclipseproject_jsf: &dot_eclipseproject_jsf
    source: java/jsf/.eclipseproject
  dot_eclipseproject_maven: &dot_eclipseproject_maven
    source: java/maven/.eclipseproject
  dot_eclipseproject_php: &dot_eclipseproject_php
    source: php/.eclipseproject

run_c:
- $basename~: $(basename "$name")
- log_i: 'Creating eclipse project from command line'
- cl: mkdir -p "$eclipse/$basename"
- if not $(ls "$eclipse/$basename/.project"):
  - log_i: 'Project was not imported to eclipse environment yet'
  - cl: cp *dot_eclipseproject_c .
  - cl: cp *dot_cproject_c .
  - cl: cp *dot_autotools_c .
  - cl: sed -i "s|<name>cdevelassistant<|<name>$basename<|" .eclipseproject
  - cl: mv .eclipseproject .project
  - cl: cp .project "$eclipse/$basename/.project"
  - cl: cp .cproject "$eclipse/$basename/.cproject"
  - cl: cp .autotools "$eclipse/$basename/.autotools"
  - log_i: 'Copying neccessary files was done'
- else:
  - log_i: 'Project was already imported into eclipse environment'
- cl: cd ../
- use: eclipse.run_register_project
- cl: cd "$basename"

run_cpp:
- $basename~: $(basename "$name")
- log_i: 'Creating eclipse project from command line'
- cl: mkdir -p "$eclipse/$basename"
- if not $(ls "$eclipse/$basename/.project"):
  - log_i: 'Project was not imported to eclipse environment yet'
  - cl: cp *dot_eclipseproject_cpp .
  - cl: cp *dot_cproject_cpp .
  - cl: cp *dot_autotools_cpp .
  - cl: sed -i "s|<name>cdevelassistant<|<name>$basename<|" .eclipseproject
  - cl: mv .eclipseproject .project
  - cl: cp .project "$eclipse/$basename/.project"
  - cl: cp .cproject "$eclipse/$basename/.cproject"
  - cl: cp .autotools "$eclipse/$basename/.autotools"
  - log_i: 'Copying neccessary files was done'
- else:
  - log_i: 'Project was already imported into eclipse environment'
- cl: cd ../
- use: eclipse.run_register_project
- cl: cd "$basename"

run_python:
- $basename~: $(basename "$name")
- log_i: 'Registering as Eclipse project ...'
- if $(grep django manage.py):
  - cl: cp *dot_project_django .
  - cl: cp *dot_pydevproject_django .
- else:
  - cl: cp *dot_project_python .
  - cl: cp *dot_pydevproject_python .
- cl: sed -i "s|NAME|$basename|" .project
- cl: sed -i "s|NAME|$basename|" .pydevproject
- cl: cd ../
- use: eclipse.run_register_project
- cl: cd "$basename"

run_java:
- log_i: 'Creating eclipse project from command line'
- cl: mkdir -p "$eclipse/$name"
- if $(grep jsf pom.xml):
  - cl: cp *dot_eclipseproject_jsf .project
- else:
  - cl: cp *dot_eclipseproject_maven .project
- cl: cp .project "$eclipse/$name/.project"
- cl: cp .classpath "$eclipse/$name/.classpath"
- if $(test -e .settings/):
  - cl: cp -r .settings/ "$eclipse/$name/"
# TODO this is for CDT and it looks like JDT doesn't have similar functionality (?)
#- cl: eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import ./
- log_i: 'You can now import this project into your Eclipse workspace'

run_php:
- $basename~: $(basename "$name")
- log_i: 'Registering as Eclipse project ...'
- cl: mkdir -p "$eclipse/$name"
- if not $(ls ".project"):
  - log_i: 'Project was not imported to eclipse environment yet'
  - cl: cp -v *dot_eclipseproject_php .
  - cl: sed -i "s|<name>phpassistant<|<name>$name<|" .eclipseproject
  - cl: mv .eclipseproject .project
  - cl: cp -v .project "$eclipse/$name/.project"
  - log_i: 'Copying neccessary files was done'
- else:
  - log_i: 'Project was already imported into eclipse environment'
- cl: cd ../
- use: eclipse.run_register_project
- cl: cd "$basename"

run_register_project:
- if not $(pgrep -x eclipse): # Detection of workspace lock can't be implemented right now due to Ecl. bug 80734
  - cl: eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import "$basename" -data "$eclipse"
  - log_i: 'Registered as Eclipse project ...'
- else:
  - log_w: 'Workspace in use, project will not be imported to Eclipse.'
  - log_w: 'To import manually, exit Eclipse and run DevAssistant -> Modify -> Eclipse import.'
