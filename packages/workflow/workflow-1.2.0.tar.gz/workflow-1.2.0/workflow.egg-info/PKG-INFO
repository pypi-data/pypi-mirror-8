Metadata-Version: 1.1
Name: workflow
Version: 1.2.0
Summary: Simple workflows for Python
Home-page: https://github.com/inveniosoftware/workflow
Author: Invenio Collaboration
Author-email: info@invenio-software.org
License: UNKNOWN
Description: ==========
         workflow
        ==========
        
        .. image:: https://travis-ci.org/inveniosoftware/workflow.png?branch=master
            :target: https://travis-ci.org/inveniosoftware/workflow
        .. image:: https://coveralls.io/repos/inveniosoftware/workflow/badge.png?branch=master
            :target: https://coveralls.io/r/inveniosoftware/workflow
        .. image:: https://pypip.in/v/workflow/badge.png
           :target: https://pypi.python.org/pypi/workflow/
        .. image:: https://pypip.in/d/workflow/badge.png
           :target: https://pypi.python.org/pypi/workflow/
        
        About
        =====
        
        Workflow is a Finite State Machine with memory.  It is used to execute
        set of methods in a specified order.
        
        Here is a simple example of a workflow configuration:
        
        .. code-block:: text
        
            [
              check_token_is_wanted, # (run always)
              [                      # (run conditionally)
                 check_token_numeric,
                 translate_numeric,
                 next_token          # (stop processing, continue with next token)
                 ],
              [                      # (run conditionally)
                 check_token_proper_name,
                 translate_proper_name,
                 next_token          # (stop processing, continue with next token)
                 ],
              normalize_token,       # (only for "normal" tokens)
              translate_token,
            ]
        
        Documentation
        =============
        
        Documentation is readable at http://workflow.readthedocs.org or can be built using Sphinx: ::
        
            pip install Sphinx
            python setup.py build_sphinx
        
        Installation
        ============
        
        Workflow is on PyPI so all you need is: ::
        
            pip install workflow
        
        Testing
        =======
        
        Running the test suite is as simple as: ::
        
            python setup.py test
        
        or, to also show code coverage: ::
        
            ./run-tests.sh
        
Keywords: workflows,finite state machine,task execution
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Other Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Utilities
