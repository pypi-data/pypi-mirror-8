
# Edited by PyNag on Wed Jul 27 11:34:31 2011
define service {
	use			generic-service
	name                          okc-cisco-service
	_SNMP_COMMUNITY		public
	register		0
}


# Edited by PyNag on Wed May 30 10:36:48 2012
define service {
        use                     generic-service
	name                          okc-cisco-check_snmp_connectivity
        service_description     SNMP Connectivity

	check_command                 okc-check_snmp_connectivity
        _SNMP_COMMUNITY         public
        register                0
}


# Edited by PyNag on Wed May 30 14:06:14 2012
define service {
	use                           okc-cisco-service
	name                          okc-cisco-check_cpu

	_WARNING		80,70,50
	_CRITICAL		90,80,80
	#_CISCO_TYPE		use cisco for regulars switches / routers
	#			use casa for cisco ASA				
	_CISCO_TYPE		cisco 

	check_command                 okc-check_cisco_cpu
        service_description     CPU Usage
        register                0
}


# Edited by PyNag on Wed May 30 14:06:14 2012
define service {
	use                           okc-cisco-service
	name                          okc-cisco-check_mem

	_WARNING		90%
	_CRITICAL		98%

	check_command                 okc-check_cisco_mem
        service_description     Memory Usage
        register                0
}

# Edited by PyNag on Wed May 30 14:06:15 2012
define service {
	use                           okc-cisco-service
	name                          okc-cisco-check_env

	check_command                 okc-check_cisco_env
        service_description     Hardware Status
        register                0
}


# Edited by PyNag on Wed May 30 14:06:15 2012
define service {
	use                           okc-cisco-service
	name                          okc-cisco-check_int
	__REGEX1		".*outside.*"
	__REGEX2		
	check_command                 okc-check_cisco_int!$_SERVICESNMP_COMMUNITY$!$_SERVICE_REGEX1$!$_SERVICE_REGEX2$
	service_description	Interface Status
	register		0
}

# Edited by PyNag on Wed May 30 14:06:15 2012
define service {
	use                           okc-cisco-service
	name                          okc-cisco-check_all_interfaces
	# __OPTIONS Extra options
	#			-l = Long serviceoutput
	#			-E 'interface' to exclude interface
	__OPTIONS		
	check_command                 okc-cisco-check_snmp_interfaces!$_SERVICESNMP_COMMUNITY$!$_SERVICE_OPTIONS$
	service_description	Interface Status
	register		0
}

# Edited by PyNag on Wed May 30 14:06:16 2012
define service {
	use                           okc-cisco-service
	name                          okc-cisco-check_asa_patchlevel
	check_command                 okc-cisco-check_snmp_patchlevel!asa
        service_description     Firmware Version
        register                0
}


# Edited by PyNag on Wed May 30 14:06:16 2012
define service {
	use                           okc-cisco-service
	name                          okc-cisco-check_switch_patchlevel
	check_command                 okc-cisco-check_snmp_patchlevel!ios
        service_description     Firmware Version
        register                0
}



# Edited by PyNag on Wed May 30 14:06:16 2012
define service {
	use                           okc-cisco-service
	name                          okc-cisco-check_vpn_sessions
	check_command                 okc-cisco-check_vpn_sessions!$_SERVICESNMP_COMMUNITY$!$_SERVICE_WARNING$!$_SERVICE_CRITICAL$
	__WARNING		:10
	__CRITICAL		:20
	service_description	Active VPN Sessions
	register		0
}
