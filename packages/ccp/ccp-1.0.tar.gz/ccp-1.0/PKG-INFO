Metadata-Version: 1.1
Name: ccp
Version: 1.0
Summary: A Python client for the Changelog API
Home-page: http://github.com/woohgit/changelog-client-python
Author: Adam Papai
Author-email: wooh@wooh.hu
License: Copyright (c) 2014 Adam Papai.

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Description: CCP: Changelog Client Python
        ============================
        
        Send an event to a Changelog_ server.
        
        .. _Changelog: https://github.com/prezi/changelog
        
        Installation
        ------------
        
        To install ccp, simply: ::
        
            $ pip install ccp
            
        
        Supported severities
        --------------------
        
        1. INFO
        2. NOTIFICATION
        3. WARNING
        4. ERROR
        5. CRITICAL
        
        Example
        -------
        
        It is pretty easy to use: ::
        
            from ccp.client import Client
            
            client = Client("localhost", 80)
            client.send("This is a simple message", "INFO", "category")
        
        You can pass a in a dict to specify additional HTTP headers, for example to do authentication::
        
            client.send("Message", "INFO", "category", {"Authorization": "Basic base64encoded"})
        
        Logging
        -------
        Logging happens into the logger called ``changelog_client`` by default. You can override it by setting the ``logger``
        property of a client instance to a ``Logger`` object.
        
        
        Version 1.0
            + 0.6b becomes stable 1.0 version
        
        Version 0.6b
        	+ Fixed Basic Authorization example in README
        
        Version 0.5b
        	+ Added SSL support
        
        Version 0.4b
            + Added better logging thanks to abesto (https://github.com/abesto)
            + Added support for passing severity directly as an int thanks to abesto (https://github.com/abesto)
            + Add support for passing extra headers thanks to abesto (https://github.com/abesto)
        
        Version 0.3b
            + Initial release
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: MIT License
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.0
