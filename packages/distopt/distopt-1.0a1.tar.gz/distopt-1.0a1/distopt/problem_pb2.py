# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: distopt/problem.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import distopt.data_pb2
import distopt.expression_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='distopt/problem.proto',
  package='',
  serialized_pb=_b('\n\x15\x64istopt/problem.proto\x1a\x12\x64istopt/data.proto\x1a\x18\x64istopt/expression.proto\"J\n\x07Problem\x12\x1e\n\tobjective\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x1f\n\nconstraint\x18\x02 \x03(\x0b\x32\x0b.Constraint\"\xb6\x01\n\x08Solution\x12 \n\x06status\x18\x01 \x01(\x0e\x32\x10.Solution.Status\x12\x17\n\x0fobjective_value\x18\x02 \x01(\x01\x12\x1b\n\x08variable\x18\x03 \x03(\x0b\x32\t.Variable\x12\x1f\n\nconstraint\x18\x04 \x03(\x0b\x32\x0b.Constraint\"1\n\x06Status\x12\x0b\n\x07OPTIMAL\x10\x00\x12\x1a\n\x16MAX_ITERATIONS_REACHED\x10\x01\"o\n\nConstraint\x12\x15\n\rconstraint_id\x18\x01 \x01(\t\x12\x13\n\x04\x63one\x18\x02 \x01(\x0e\x32\x05.Cone\x12\x18\n\x03\x61rg\x18\x03 \x03(\x0b\x32\x0b.Expression\x12\x1b\n\ndual_value\x18\x04 \x01(\x0b\x32\x07.Vector')
  ,
  dependencies=[distopt.data_pb2.DESCRIPTOR,distopt.expression_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_SOLUTION_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='Solution.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OPTIMAL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAX_ITERATIONS_REACHED', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=281,
  serialized_end=330,
)
_sym_db.RegisterEnumDescriptor(_SOLUTION_STATUS)


_PROBLEM = _descriptor.Descriptor(
  name='Problem',
  full_name='Problem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='objective', full_name='Problem.objective', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='constraint', full_name='Problem.constraint', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=145,
)


_SOLUTION = _descriptor.Descriptor(
  name='Solution',
  full_name='Solution',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Solution.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='objective_value', full_name='Solution.objective_value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='variable', full_name='Solution.variable', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='constraint', full_name='Solution.constraint', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SOLUTION_STATUS,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=148,
  serialized_end=330,
)


_CONSTRAINT = _descriptor.Descriptor(
  name='Constraint',
  full_name='Constraint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='constraint_id', full_name='Constraint.constraint_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cone', full_name='Constraint.cone', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='arg', full_name='Constraint.arg', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dual_value', full_name='Constraint.dual_value', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=332,
  serialized_end=443,
)

_PROBLEM.fields_by_name['objective'].message_type = distopt.expression_pb2._EXPRESSION
_PROBLEM.fields_by_name['constraint'].message_type = _CONSTRAINT
_SOLUTION.fields_by_name['status'].enum_type = _SOLUTION_STATUS
_SOLUTION.fields_by_name['variable'].message_type = distopt.expression_pb2._VARIABLE
_SOLUTION.fields_by_name['constraint'].message_type = _CONSTRAINT
_SOLUTION_STATUS.containing_type = _SOLUTION
_CONSTRAINT.fields_by_name['cone'].enum_type = distopt.expression_pb2._CONE
_CONSTRAINT.fields_by_name['arg'].message_type = distopt.expression_pb2._EXPRESSION
_CONSTRAINT.fields_by_name['dual_value'].message_type = distopt.data_pb2._VECTOR
DESCRIPTOR.message_types_by_name['Problem'] = _PROBLEM
DESCRIPTOR.message_types_by_name['Solution'] = _SOLUTION
DESCRIPTOR.message_types_by_name['Constraint'] = _CONSTRAINT

Problem = _reflection.GeneratedProtocolMessageType('Problem', (_message.Message,), dict(
  DESCRIPTOR = _PROBLEM,
  __module__ = 'distopt.problem_pb2'
  # @@protoc_insertion_point(class_scope:Problem)
  ))
_sym_db.RegisterMessage(Problem)

Solution = _reflection.GeneratedProtocolMessageType('Solution', (_message.Message,), dict(
  DESCRIPTOR = _SOLUTION,
  __module__ = 'distopt.problem_pb2'
  # @@protoc_insertion_point(class_scope:Solution)
  ))
_sym_db.RegisterMessage(Solution)

Constraint = _reflection.GeneratedProtocolMessageType('Constraint', (_message.Message,), dict(
  DESCRIPTOR = _CONSTRAINT,
  __module__ = 'distopt.problem_pb2'
  # @@protoc_insertion_point(class_scope:Constraint)
  ))
_sym_db.RegisterMessage(Constraint)


# @@protoc_insertion_point(module_scope)
