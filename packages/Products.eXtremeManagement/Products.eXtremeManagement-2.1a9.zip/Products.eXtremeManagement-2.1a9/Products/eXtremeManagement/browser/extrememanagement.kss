/* Add a Task. */
#submit-task:click {
    evt-click-preventdefault: true;
    evt-click-allowbubbling: true;
    action-server: xm_add_task;
    xm_add_task-kssSubmitForm: currentForm();
    }

/* Expand/shrink the details of a story. */
.toggle-story:click {
    evt-click-preventdefault: false;
    evt-click-allowbubbling: true;
    action-server: xm_toggle_story;
    xm_toggle_story-uid: kssAttr('uid');
    }

/* Workflow changes of tasks inside the story view (or anywhere else they are shown) */
table.tasklist_table dd.actionMenuContent a:click {
    evt-click-preventdefault: True;
    evt-click-allowbubbling: True;
    action-server: xmChangeWorkflowState;
    xmChangeWorkflowState-uid: kssAttr('uid');
    xmChangeWorkflowState-url: nodeAttr(href);
}

/* Rebind all menus after an actionMenu is loaded */
dl.actionMenu:load {
    action-client: bindActionMenus;
}

/* releasplan.pt */
.story-draggable:yuidnd-dragstart {
    evt-yuidnd-dragstart-action: 'ghost';
}

.droppable:yuidnd-drop {
    evt-yuidnd-drop-action: 'order';
}

.story-draggable:yuidnd-dragsuccess {
    action-server: move_story;
    move_story-source_id: kssAttr(source_id, true);
    move_story-target_id: pass(dropContainerId);
    move_story-story_id: kssAttr(story_id, true);
    move_story-index: pass(dropIndex);
    move_story-error: alert;
    alert-message: 'Error trying to move story. Please reload page and try again.';
}

#task-form-button:click {
    evt-click-preventdefault: true;
    evt-click-allowbubbling: true;
    action-server: xm.kss_task_form;
    action-client: setStyle;
    setStyle-name: display;
    setStyle-value: none;
}

#task-form-expanded legend:click {
    evt-click-preventdefault: true;
    evt-click-allowbubbling: true;
    action-client: replaceHTML;
    replaceHTML-kssSelector: htmlid('task-form-expanded');
    replaceHTML-html: '<div id="task-form"/>';
    action-client: setStyle;
    setStyle-kssSelector: htmlid('task-form-button');
    setStyle-name: display;
    setStyle-value: block;
}

#iteration-form-button:click {
    evt-click-preventdefault: true;
    evt-click-allowbubbling: true;
    action-server: xm.kss_iteration_form;
    action-client: setStyle;
    setStyle-name: display;
    setStyle-value: none;
}

#iteration-form-expanded legend:click {
    evt-click-preventdefault: true;
    evt-click-allowbubbling: true;
    action-client: replaceHTML;
    replaceHTML-kssSelector: htmlid('iteration-form-expanded');
    replaceHTML-html: '<div id="iteration-form"/>';
    action-client: setStyle;
    setStyle-kssSelector: htmlid('iteration-form-button');
    setStyle-name: display;
    setStyle-value: block;
}

#submit-iteration:click {
    evt-click-preventdefault: true;
    evt-click-allowbubbling: true;
    action-server: xm_add_iteration;
    xm_add_iteration-kssSubmitForm: currentForm();
}
