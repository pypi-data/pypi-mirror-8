test_isbn.doctest - more detailed doctests for stdnum.isbn module

Copyright (C) 2010, 2011, 2013 Arthur de Jong

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
02110-1301 USA


This file contains more detailed doctests for the stdnum.isbn module. It
tries to test more corner cases and detailed functionality that is not
really useful as module documentation.

>>> from stdnum import isbn


Tests for mangling and incorect check digits.

>>> isbn.validate('08515x-629-2')  # added X in the middle
Traceback (most recent call last):
    ...
InvalidFormat: ...
>>> isbn.validate('85152-629-1')  # incorrect check digit
Traceback (most recent call last):
    ...
InvalidChecksum: ...
>>> isbn.validate('978-902453827X')  # ISBN13 with X check digit
Traceback (most recent call last):
    ...
InvalidFormat: ...
>>> isbn.validate('978-902453827')  # invalid length
Traceback (most recent call last):
    ...
InvalidLength: ...


See if ISBN10 to 13 conversion works.

>>> isbn.to_isbn13('978-9024538270')  # ISBN13 should stay ISBN13
'978-9024538270'
>>> isbn.to_isbn13('1 85798218 5')
'978 1 85798218 3'
>>> isbn.to_isbn13('1857982185')
'9781857982183'
>>> isbn.to_isbn13('1-85798-218-5')
'978-1-85798-218-3'
>>> isbn.validate(isbn.to_isbn13('1 85798218 5'))
'9781857982183'
>>> isbn.compact('1 85798218 5', convert=True)
'9781857982183'
>>> isbn.validate('1 85798218 5', convert=True)
'9781857982183'


See if ISBN13 to 10 conversion works.

>>> isbn.to_isbn10('1-85798-218-5')  # ISBN10 should stay ISBN10
'1-85798-218-5'
>>> isbn.to_isbn10('978 1 85798218 3')
'1 85798218 5'
>>> isbn.to_isbn10('9781857982183')
'1857982185'
>>> isbn.to_isbn10('978-1-85798-218-3')
'1-85798-218-5'
>>> isbn.to_isbn10('979-20-1234567-8')  # incorrect check digit
Traceback (most recent call last):
    ...
InvalidFormat: ...
>>> isbn.to_isbn10('9791843123391')
Traceback (most recent call last):
    ...
InvalidFormat: ...


Regrouping tests.

>>> isbn.split('9024538270')  # normal ISBN10
('', '90', '245', '3827', '0')
>>> isbn.split('9999678270')  # ISBN10, unknown publisher in group
('', '99996', '', '7827', '0')
>>> isbn.split('979-20-1234567-8')
('979', '', '', '201234567', '8')
>>> isbn.split('5413170121522')  # valid checkdigit, unknown prefix
('', '', '', '541317012152', '2')
