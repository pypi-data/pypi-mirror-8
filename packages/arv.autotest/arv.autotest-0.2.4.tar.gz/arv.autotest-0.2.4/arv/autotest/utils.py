# -*- coding: utf-8 -*-

# $Id$


import functools

# for the sake of autogenerated documentation
def make_unique_named_symbol(name):
    class Tmp(object):
        def __repr__(self):
            return name
    return Tmp()


NoDefault = make_unique_named_symbol("NoDefault")


class Bunch(object):
    def __init__(self, attrs):
        self.__dict__.update(attrs)


def memoize(f):
    f.__memoize_cache__ = {}
    functools.wraps(f)
    def wrapper(*args):
        if args not in f.__memoize_cache__:
            f.__memoize_cache__[args] = f(*args)
        return f.__memoize_cache__[args]
    return wrapper
