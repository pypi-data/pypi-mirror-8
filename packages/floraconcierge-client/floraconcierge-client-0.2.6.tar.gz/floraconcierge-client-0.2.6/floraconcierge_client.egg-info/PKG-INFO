Metadata-Version: 1.1
Name: floraconcierge-client
Version: 0.2.6
Summary: FloraExpress API python client library. www.floraexpress.ru
Home-page: http://www.floraexpress.ru/
Author: Alexandr Shurigin
Author-email: alexandr.shurigin@gmail.com
License: BSD
Description: Version 0.2.6
        
        FloraConcierge is worldwide flowers delivery service. We provide api services for
        building your own flowers delivery e-commerce and submit users orders into our system.
        
        All information at http://www.floraexpress.ru/
        
        You can simple install floraconcierge api client into your django environment by adding middleware
        `floraconcierge.middleware.ApiClientMiddleware` to your `MIDDLEWARE_CLASSES`.
        
        Also you can add `floraconcierge.middleware.ApiObjectNotFound404` to your middlewares for automatic 404 pages when
        api result raises ResultObjectNotFoundError.
        
        Available settings
        ------------------
        
        All settings used in middleware only, if you want manual initiation of api client object, you can do it yourself.
        
        * `FLORACONCIERGE_API_ID` Required. Your application ID.
        
        * `FLORACONCIERGE_API_SECRET` Required. Your application secret.
        
        * `FLORACONCIERGE_API_INIT_ENV` Optional. You can setup custom init function for env setup. Function takes params
        `client, request, restored` where client is ApiClient instance, request is django request object and restored is flag
        variable indicating client env was restored from request session.
        
        * `FLORACONCIERGE_API_INIT_CLIENT` Optional. Custom api client initiation function. By default middleware initiate
        client with function `floraconcierge.middleware.initialize_apiclient`. You can se your own function. Function take
        only one param `request`.
        
        Django debug toolbar panel
        --------------------------
        
        Also available debug panel for django. You can add `floraconcierge.panels.FloraConciergeRequests` to django debug
        panels settings `DEBUG_TOOLBAR_PANELS`.
        
        Collection methods
        ------------------
        
        Now you can search throught your result collections with find/findall methods.
        
        Request cache middleware
        ------------------------
        
        FloraConcierge api provides simple request lifetime cache object for caching offen queried data on page. This cache
        cleares automatically every next request.
        
        You can add `floraconcierge.middleware.RequestCacheMiddleware` to your `MIDDLEWARE_CLASSES` and get request cache
        instance with function `floraconcierge.cache.get_request_cache()`.
        
        You must inherit your cache object from `floraconcierge.cache.RequestCache` and setup it via `FLORACONCIERGE_CACHE_CLASS`.
Keywords: floraconcierge floraexpress ecommerce api adapter client
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Customer Service
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Legal Industry
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Natural Language :: Russian
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: PHP
Classifier: Topic :: Database :: Front-Ends
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Embedded Systems
