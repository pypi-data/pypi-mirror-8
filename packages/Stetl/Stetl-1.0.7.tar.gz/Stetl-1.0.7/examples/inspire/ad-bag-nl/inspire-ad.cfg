# EXAMPLE ETL CONFIGURATION (Local Dutch Address Data (BAG) to INSPIRE Addresses)
# See also the INSPIRE FOSS project:
# http://code.google.com/p/inspire-foss/source/browse/#svn%2Ftrunk%2Fetl%2FNL.Kadaster%2FAddresses

# DEFINE THE ETL AS A ONE OR MORE CHAINS (PIPELINE) OF COMPONENTS
[etl]
chains = input_pg_woonplaats|gml_splitter|transformer_xslt|output_deegree_blobstore,
	     input_pg_postcode|gml_splitter|transformer_xslt|output_deegree_blobstore,
	     input_pg_openbareruimte|gml_splitter|transformer_xslt|output_deegree_blobstore,
	     input_pg_ligplaats|gml_splitter|transformer_xslt|output_deegree_blobstore,
		 input_pg_standplaats|gml_splitter|transformer_xslt|output_deegree_blobstore,
		 input_pg_verblijfsobject|gml_splitter|transformer_xslt|output_deegree_blobstore

[input_pg_woonplaats]
class = inputs.ogrinput.OgrPostgisInput
in_srs = EPSG:28992
in_pg_db = bag
in_pg_schema = bagaveen
in_pg_host     = localhost
in_pg_user     = postgres
in_pg_password = postgres
in_pg_port = 5432
in_pg_sql = SELECT
wp.identificatie,
wp.woonplaatsnaam,
translate(to_char(wp.begindatumtijdvakgeldigheid, 'YYYY-MM-DD HH24:MI:SS'),' ', 'T') as begindatumtijdvakgeldigheid,
translate(to_char(wp.einddatumtijdvakgeldigheid, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T') as einddatumtijdvakgeldigheid
FROM woonplaatsactueelbestaand as wp
out_srs = EPSG:4258
out_layer_name = woonplaats
out_geotype =
out_gml_format = GML3
out_dimension = 2

[input_pg_postcode]
class = inputs.ogrinput.OgrPostgisInput
in_srs = EPSG:28992
in_pg_db = bag
in_pg_schema = bagaveen
in_pg_host     = localhost
in_pg_user     = postgres
in_pg_password = postgres
in_pg_port = 5432
in_pg_sql = SELECT DISTINCT
na.postcode
FROM nummeraanduidingactueelbestaand as na
out_srs = EPSG:4258
out_layer_name = postcode
out_geotype =
out_gml_format = GML3
out_dimension = 2

[input_pg_openbareruimte]
class = inputs.ogrinput.OgrPostgisInput
in_srs = EPSG:28992
in_pg_db = bag
in_pg_schema = bagaveen
in_pg_host     = localhost
in_pg_user     = postgres
in_pg_password = postgres
in_pg_port = 5432
in_pg_sql = SELECT
orn.identificatie,
orn.openbareruimtenaam,
translate(to_char(orn.begindatumtijdvakgeldigheid, 'YYYY-MM-DD HH24:MI:SS'),' ', 'T') as begindatumtijdvakgeldigheid,
translate(to_char(orn.einddatumtijdvakgeldigheid, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T') as einddatumtijdvakgeldigheid
FROM openbareruimteactueelbestaand as orn
out_srs = EPSG:4258
out_layer_name = openbareruimte
out_geotype =
out_gml_format = GML3
out_dimension = 2

[input_pg_verblijfsobject]
class = inputs.ogrinput.OgrPostgisInput
in_srs = EPSG:28992
in_pg_db = bag
in_pg_schema = public
in_pg_host     = localhost
in_pg_user     = postgres
in_pg_password = postgres
in_pg_port = 5432
in_pg_sql = SELECT
  na.identificatie,
  na.huisnummer,
  na.huisletter,
  na.huisnummertoevoeging,
  na.gerelateerdeopenbareruimte,
  na.postcode,
  (CASE
	WHEN wp2.woonplaatsnaam IS NULL THEN
		w.identificatie ELSE
		wp2.identificatie END)
		as woonplaats,
translate(to_char(na.begindatumtijdvakgeldigheid, 'YYYY-MM-DD HH24:MI:SS'),' ', 'T') as begindatumtijdvakgeldigheid,
translate(to_char(na.einddatumtijdvakgeldigheid, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T') as einddatumtijdvakgeldigheid,
ST_Force_2D(ao.geopunt)
 FROM verblijfsobjectactueelbestaand ao
  JOIN nummeraanduidingactueelbestaand na ON (na.identificatie = ao.hoofdadres)
  JOIN openbareruimteactueelbestaand o ON (na.gerelateerdeopenbareruimte = o.identificatie)
  JOIN woonplaatsactueelbestaand w ON (o.gerelateerdewoonplaats = w.identificatie)
  LEFT OUTER JOIN woonplaatsactueelbestaand wp2 ON (na.gerelateerdewoonplaats = wp2.identificatie)
out_srs = EPSG:4258
out_layer_name = adres
out_geotype = POINT
out_gml_format = GML3
out_dimension = 2

[input_pg_ligplaats]
class = inputs.ogrinput.OgrPostgisInput
in_srs = EPSG:28992
in_pg_db = bag
in_pg_schema = bagaveen
in_pg_host     = localhost
in_pg_user     = postgres
in_pg_password = postgres
in_pg_port = 5432
in_pg_sql = SELECT
  na.identificatie,
  na.huisnummer,
  na.huisletter,
  na.huisnummertoevoeging,
  na.gerelateerdeopenbareruimte,
  na.postcode,
  (CASE
	WHEN wp2.woonplaatsnaam IS NULL THEN
		w.identificatie ELSE
		wp2.identificatie END)
		as woonplaats,
translate(to_char(na.begindatumtijdvakgeldigheid, 'YYYY-MM-DD HH24:MI:SS'),' ', 'T') as begindatumtijdvakgeldigheid,
translate(to_char(na.einddatumtijdvakgeldigheid, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T') as einddatumtijdvakgeldigheid,
ST_Centroid(ST_Force_2D(ao.geovlak))
 FROM ligplaatsactueelbestaand ao
  JOIN nummeraanduidingactueelbestaand na ON (na.identificatie = ao.hoofdadres)
  JOIN openbareruimteactueelbestaand o ON (na.gerelateerdeopenbareruimte = o.identificatie)
  JOIN woonplaatsactueelbestaand w ON (o.gerelateerdewoonplaats = w.identificatie)
  LEFT OUTER JOIN woonplaatsactueelbestaand wp2 ON (na.gerelateerdewoonplaats = wp2.identificatie)
out_srs = EPSG:4258
out_layer_name = adres
out_geotype = POINT
out_gml_format = GML3
out_dimension = 2

[input_pg_standplaats]
class = inputs.ogrinput.OgrPostgisInput
in_srs = EPSG:28992
in_pg_db = bag
in_pg_schema = bagaveen
in_pg_host     = localhost
in_pg_user     = postgres
in_pg_password = postgres
in_pg_port = 5432
in_pg_sql = SELECT
  na.identificatie,
  na.huisnummer,
  na.huisletter,
  na.huisnummertoevoeging,
  na.gerelateerdeopenbareruimte,
  na.postcode,
  (CASE
	WHEN wp2.woonplaatsnaam IS NULL THEN
		w.identificatie ELSE
		wp2.identificatie END)
		as woonplaats,
translate(to_char(na.begindatumtijdvakgeldigheid, 'YYYY-MM-DD HH24:MI:SS'),' ', 'T') as begindatumtijdvakgeldigheid,
translate(to_char(na.einddatumtijdvakgeldigheid, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T') as einddatumtijdvakgeldigheid,
ST_Centroid(ST_Force_2D(ao.geovlak))
 FROM standplaatsactueelbestaand ao
  JOIN nummeraanduidingactueelbestaand na ON (na.identificatie = ao.hoofdadres)
  JOIN openbareruimteactueelbestaand o ON (na.gerelateerdeopenbareruimte = o.identificatie)
  JOIN woonplaatsactueelbestaand w ON (o.gerelateerdewoonplaats = w.identificatie)
  LEFT OUTER JOIN woonplaatsactueelbestaand wp2 ON (na.gerelateerdewoonplaats = wp2.identificatie)
out_srs = EPSG:4258
out_layer_name = adres
out_geotype = POINT
out_gml_format = GML3
out_dimension = 2

[output_std]
class = output.Output

[output_file]
class = outputs.fileoutput.FileOutput
file_path = test/output.gml

[output_deegree_blobstore]
class = outputs.deegreeoutput.DeegreeBlobstoreOutput
overwrite = False
feature_member_tag = member
srid = -1
database = pdok
schema = inspire_ad
host     = localhost
user     = pdok_owner
password = pdok_owner
port = 5432

[gml_splitter]
class = filters.gmlsplitter.GmlSplitter
max_features = 15000
start_container = <?xml version="1.0" encoding="UTF-8"?>
  <ogr:FeatureCollection
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://ogr.maptools.org/ my.xsd"
   xmlns:ogr="http://ogr.maptools.org/"
   xmlns:gml="http://www.opengis.net/gml">
end_container = </ogr:FeatureCollection>
container_tag = ogr:FeatureCollection
start_feature_markers = <ogr:featureMember
end_feature_markers = </ogr:featureMember>

[transformer_xslt]
class = filters.xsltfilter.XsltFilter
script = local-to-inspire-ad-sd.xsl



