# Transform all records of input sqlite table to json file

[etl]
chains = input_sqlite_all|convert_records_to_json|output_cities_file,
         input_sqlite_single|convert_record_to_json|output_city_file

#
# CHAIN 1 - Multi Record case
#

# Read all records from SQLite DB into record array
[input_sqlite_all]
class = inputs.dbinput.SqliteDbInput
output_format = record_array
database_name = input/cities.sdb
table = cities
read_once = True
query = select * from cities

# Use the standard converter to convert record array to struct (dict)
[convert_records_to_json]
class = filters.formatconverter.FormatConverter
input_format = record_array
output_format = struct
converter_args = {
    'top_name': 'cities'
    }

[output_cities_file]
class = outputs.fileoutput.FileOutput
file_path = output/cities.json

#
# CHAIN 2 - Single Record case
#

# Read single record from SQLite DB into record
[input_sqlite_single]
class = inputs.dbinput.SqliteDbInput
output_format = record
database_name = input/cities.sdb
table = cities
read_once = True
query = select * from cities where name = 'Rome'

# Use the standard converter to convert record to struct (dict)
[convert_record_to_json]
class = filters.formatconverter.FormatConverter
input_format = record
output_format = struct
converter_args = {
    'top_name': 'city'
    }

[output_city_file]
class = outputs.fileoutput.FileOutput
file_path = output/city.json


