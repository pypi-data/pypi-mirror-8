# BGT Basisregistratie Grootschalige Topografie is based
# on CityGML. This ETL flattens this structure into Simple feature GML

[etl]
# chains = input_big_gml_files|xml_assembler|transformer_xslt|output_std
# GML: chains = input_big_gml_files|xml_assembler|transformer_xslt|output_file
# shp: chains = input_big_gml_files|xml_assembler|transformer_xslt|output_ogr2ogr
# KML: chains = input_big_gml_files|xml_assembler|transformer_xslt|output_ogr2ogr_kml
# JSON
chains = input_big_gml_files|xml_assembler|transformer_xslt|output_ogr2ogr_json

# The source input file(s) from dir and produce gml:featureMember elements
[input_big_gml_files]
class = inputs.fileinput.XmlElementStreamerFileInput
file_path = {gml_input}
element_tags = cityObjectMember

# Assembles etree docs gml:featureMember elements, each with "max_elements" elements
[xml_assembler]
class = filters.xmlassembler.XmlAssembler
max_elements = {max_in_memory_features}
container_doc = <?xml version="1.0" encoding="UTF-8"?>
    <cit:CityModel xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:bri="http://www.opengis.net/citygml/bridge/2.0"
    xmlns:bui="http://www.opengis.net/citygml/building/2.0"
    xmlns:cif="http://www.opengis.net/citygml/cityfurniture/2.0"
    xmlns:cit="http://www.opengis.net/citygml/2.0"
    xmlns:gml="http://www.opengis.net/gml"
    xmlns:imgeo="http://www.geostandaarden.nl/imgeo/2.1"
    xmlns:lu="http://www.opengis.net/citygml/landuse/2.0"
    xmlns:tra="http://www.opengis.net/citygml/transportation/2.0"
    xmlns:tun="http://www.opengis.net/citygml/tunnel/2.0"
    xmlns:veg="http://www.opengis.net/citygml/vegetation/2.0"
    xmlns:wat="http://www.opengis.net/citygml/waterbody/2.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    gml:id="BgtExample"
    xsi:schemaLocation="http://www.geostandaarden.nl/imgeo/2.1 schema/imgeo-2.1.1.xsd http://www.opengis.net/citygml/2.0 http://schemas.opengis.net/citygml/2.0/cityGMLBase.xsd">
    </cit:CityModel>
element_container_tag = CityModel

[transformer_xslt]
class = filters.xsltfilter.XsltFilter
script = bgt-to-gmlfc.xsl

[output_std]
class = outputs.standardoutput.StandardXmlOutput

[output_file]
class = outputs.fileoutput.FileOutput
file_path = {shp_output}

# Output multiple files ala Top10 file chunks GML
# Use numbering as in file expression.
[output_multifile]
class = outputs.fileoutput.MultiFileOutput
file_path = {shp_output}

[output_ogr2ogr]
class = outputs.ogroutput.Ogr2OgrOutput
temp_file = output/temp.gml
ogr2ogr_cmd = ogr2ogr -f "ESRI Shapefile" -a_srs epsg:28992 output/bgt-sample-ogr.shp output/temp.gml

[output_ogr2ogr_kml]
class = outputs.ogroutput.Ogr2OgrOutput
temp_file = output/temp.gml
ogr2ogr_cmd = ogr2ogr -f "KML" -s_srs epsg:28992 -t_srs epsg:4326 output/bgt-sample-ogr.kml output/temp.gml

[output_ogr2ogr_json]
class = outputs.ogroutput.Ogr2OgrOutput
temp_file = output/temp-json.gml
ogr2ogr_cmd = ogr2ogr -f "GeoJSON" -overwrite -s_srs epsg:28992 -t_srs epsg:4326 output/bgt-sample-ogr.json output/temp-json.gml

