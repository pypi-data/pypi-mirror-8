Metadata-Version: 1.0
Name: ronkyuu
Version: 0.2.11
Summary: Webmention Manager
Home-page: https://github.com/bear/ronkyuu
Author: Mike Taylor and Kartik Prabhu
Author-email: bear@bear.im
License: The MIT License (MIT)

Copyright (c) 2013 Mike Taylor

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Description: ronkyuu
        =======
        論及 ronkyuu - mention, reference to, touching upon
        
        Python package to help with parsing, handling and other manipulations
        of the IndieWeb Toolkit items, such as:
        * [Webmention](http://indiewebcamp.com/webmention)
         * Discovery of mentions in a publisher's post, the handling of finding what
           the Webmention callback is for the reference and also handling of incoming
           Webmention requests are handled.
        * [RelMe](http://microformats.org/wiki/rel-me)
         * Take a source URL and a resource URL that is supposed to be a rel=me for
           the source and verify that it is.
        
        Roadmap
        =======
        Working
        * Mention discovery in a post
        * Discovery of Webmention callback for a link
        * POST of Webmention to discovered callback
        * Receipt of a Webmention POST
        * support for RelMe verification
        
        Pending
        * MicroPub support
        
        See the examples/ directory for sample command line tools.
        
        Contributors
        ============
        * bear (Mike Taylor)
        * kartikprabhu (Kartik Prabhu)
        
        WebMentions
        ===========
        findMentions()
        --------------
        Find all <a /> elements in the html returned for a post.
        If any have an href attribute that is not from the one of the items in
        domains, append it to our lists.
        
        findEndpoint()
        --------------
        Search the given html content for all <link /> elements and return any
        discovered WebMention URL.
        
        discoverEndpoint()
        ------------------
        Discover any WebMention endpoint for a given URL.
        
        sendWebmention(sourceURL, targetURL, webmention=None)
        -----------------------------------------------------
        Send to the targetURL a WebMention for the sourceURL.
        The WebMention will be discovered if not given in the optional
        webmention parameter.
        
        RelMe
        =====
        findRelMe()
        -----------
        Find all <a /> elements in the given html for a post.
        If any have an href attribute that is rel="me" then include it in the result.
        
        confirmRelMe()
        --------------
        Determine if a given resourceURL is authoritative for the profileURL.
        The list of rel="me" links will be discovered if not provided in the optional
        profileRelMes parameter or the resourceRelMes paramter.
        
        Validators
        ==========
        URLValidator class
        
        TODO: fill in details of how to use
        
        Requires
        ========
        Python v2.6+ but see requirements.txt for a full list
        
        For testing we use [httmock](https://pypi.python.org/pypi/httmock/) to mock
        the web calls.
        
Platform: UNKNOWN
