env:
  PATH: "${ROCK_PATH}/bin:${ROCK_PATH}/node_modules/.bin:${PATH}"
  NPM_CONFIG_CACHE: "${HOME}/.npm_${ROCK_RUNTIME}"
  ROCK_NPM_INSTALL: "install"
  ROCK_NPM_INSTALL_DEPLOYMENT: "--no-color install"

init: |
  if [[ "${ROCK_ARGS_HELP}" == "true" ]]; then
    echo 'Usage: rock --runtime=RUNTIME init [--force] [directory]'
    echo
    echo '  --help             show help message'
    echo '  --force            run init and overwrite existing files'
    exit
  fi

  export ROCK_PATH="${ROCK_ARG1:-${ROCK_PATH}}"

  if [[ ! -d "${ROCK_PATH}" ]]; then
    if [[ -e "${ROCK_PATH}" ]]; then
      die "${ROCK_PATH} exists and is not a directory"
    fi

    mkdir -p "${ROCK_PATH}"
  fi

  cd "${ROCK_PATH}"

  if [[ -n "$( ls -A )" && "${ROCK_ARGS_FORCE}" != "true" ]]; then
    die "${ROCK_PATH} is not empty (--force to run anyway)"
  fi

  cat << EOF > ./.rock.yml
  runtime: ${ROCK_RUNTIME}
  EOF

  cat << EOF > ./package.json
  {
    "name": "${ROCK_ARGS_HELP:-sample}",
    "version": "${ROCK_ARGS_VERSION:-0.0.1}",
    "description": "${ROCK_ARGS_DESCRIPTION}",
    "main": "${ROCK_ARGS_MAIN:-app.js}",
    "private": true,
    "dependencies": {
      "express": "*"
    },
    "devDependencies": {
      "mocha": "*"
    },
    "scripts": {
      "test": "mocha"
    },
    "repository": "${ROCK_ARGS_REPOSITORY}",
    "author": "${ROCK_ARGS_AUTHOR}",
    "license": "MIT"
  }
  EOF

  mkdir -p ./test

build: |

  if [[ "${ROCK_ARGS_HELP}" == "true" ]]; then
    echo 'Usage: rock build [--deployment]'
    echo
    echo '  --help             show help message'
    echo '  --deployment       run build in deployment mode'
    exit
  fi

  if [[ "${ROCK_ARGS_DEPLOYMENT}" != "true" ]]; then
    if [[ -f ./package.json ]]; then
      npm ${ROCK_NPM_INSTALL}
    else
      warn 'no "package.json" file found'
    fi
  else
    if [[ ! -f ./npm-shrinkwrap.json ]]; then
      die 'no "npm-shrinkwrap.json" file found'
    fi
    npm ${ROCK_NPM_INSTALL_DEPLOYMENT}
  fi

test: |

  if [[ "${ROCK_ARGS_HELP}" == "true" ]]; then
    echo 'Usage: rock test'
    echo
    echo '  --help             show help message'
    exit
  fi

  npm test

clean: |

  if [[ "${ROCK_ARGS_HELP}" == "true" ]]; then
    echo 'Usage: rock clean'
    echo
    echo '  --help             show help message'
    exit
  fi

  if [[ -d ./node_modules ]]; then
    rm -fr ./node_modules
  fi
