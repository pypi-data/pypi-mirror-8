#
#
# --------------------------------------------------------------
# Nasty Packets:
#     Block any packets which are too short to be real.
block in log quick all with short
#    Block any packets with source routing set
block in log quick all with opt lsrr
block in log quick all with opt ssrr
#
# --------------------------------------------------------------
# Localhost:
#    Allow traffic lo0 to pass unimpeded
pass in quick on lo0 all
pass out quick on lo0 all

#
# --------------------------------------------------------------
# Public Network:
#    {{ ipf.external_interface }} is public ip, {{ ipf.internal_interface }} internal, but since anyone with a
#    joyent account in the same data center can have an internal
#    address we need to treat it as untrusted.
#    Since local is handled above all these rules are for both interfaces
#    unless specified otherwise

#
#    Invalid Internet packets
#        Deny reserved addresses
{% block internal_only_ips %}
block in log quick on {{ ipf.external_interface }} from 192.168.0.0/16 to any
block in log quick on {{ ipf.external_interface }} from 172.16.0.0/12 to any
block in log quick on {{ ipf.external_interface }} from 10.0.0.0/8 to any
{% endblock %}

#
#    TCP/UDP Protocols
#    inbound TCP
#    only allows port 22
block in quick proto tcp all head 200
pass in quick proto tcp from any to any port = 22 keep state group 200
{% block allowed_tcp %}
{% for config in ipf.tcp_lines %}
pass in quick {% if config.interface %}on {{ config.interface }} {% endif %}proto {{ config.proto }} from {{ config.from_ip }} to any port = {{ config.port }} keep state group {{ config.group }}
{% endfor %}
{% endblock %}

#    inbound UDP
block in quick proto udp all head 300
{% block allowed_udp %}
{% for config in ipf.udp_lines %}
pass in quick {% if config.interface %}on {{ config.interface }} {% endif %}proto {{ config.proto }} from {{ config.from_ip }} to any port = {{ config.port }} keep state group {{ config.group }}
{% endfor %}
{% endblock %}

#        Outbound TCP/UDP
#        Allow requests to go out and keep the results flowing back in.
pass out proto tcp/udp from any to any keep state

#
#    ICMP Protocols
#        Allow pings out
{% block icmp %}
pass out proto icmp all keep state
{% endblock %}

#    Reset/Error for TCP/UDP services, send back TCP-Reset or
#    Network unreachable to attempts to initiate connections.
block return-rst in log proto tcp from any to any flags S/SA
block return-icmp(net-unr) in log proto udp from any to any


