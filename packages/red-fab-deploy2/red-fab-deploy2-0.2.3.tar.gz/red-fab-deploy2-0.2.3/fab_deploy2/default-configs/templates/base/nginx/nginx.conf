{% block globals %}
worker_processes {{ nginx.worker_processes }};
{% if nginx.worker_rlimit %}
worker_rlimit_nofile {{ nginx.worker_rlimit }};
{% endif %}

{% if nginx.user %}
user {{ nginx.user}}{% if nginx.group %} {{ nginx.group }}{% endif %};
{% endif %}

events {
    worker_connections  {{ nginx.worker_connections }};
}
{% endblock %}


http {

    {% block http %}
    # Basic Settings
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout {{ nginx.keepalive_timeout }};
    types_hash_max_size {{ nginx.hash_max_size }};

    {% block tokens %}
    server_tokens off;
    {% endblock %}

    {% if nginx.client_max_body_size %}
        client_max_body_size {{ nginx.client_max_body_size }};
    {% endif %}

    {% if nginx.mime_types_file %}
        include {{ nginx.mime_types_file }};
        default_type application/octet-stream;
    {% endif %}
    {% endblock %}

    {% block logs %}
        # Logging Settings
        access_log {{ nginx.access_log }};
        error_log {{ nginx.error_log }};
    {% endblock %}

    {% block gzip %}
    # Gzip Settings
    gzip on;
    gzip_min_length 1100;
    gzip_types
        text/plain
        text/xml
        text/css
        text/javascript
        application/javascript
        application/json
        application/x-javascript
        image/svg+xml
        application/vnd.ms-fontobject
        font/truetype
        font/opentype;
    gzip_proxied expired no-cache no-store private auth;
    gzip_vary on;
    gzip_disable "msie6";
    {% endblock %}

    {% block allowed_ips %}
    {% if nginx.lbs %}
        ## Start Allowed IPs ##
        {% for lb in nginx.lbs %}
        set_real_ip_from  {{ lb }};
        {% endfor %}
        real_ip_header    {{ nginx.forward_header }};
        ## End Allowed IPs ##
    {% endif %}
    {% endblock %}

    {% block caches %}
    {% if nginx.do_cache %}
        proxy_cache_path {{ nginx.cache_location }} levels=1:2 keys_zone=app-cache:{{ nginx.cache_size }} inactive={{ nginx.cache_inactive }};
        proxy_temp_path {{ nginx.cache_tmp_location }};
    {% endif %}
    {% endblock %}

    {% block upstreams %}
        #Add application servers
        upstream app_servers {
        {% for upstream_address in nginx.upstream_addresses %}
           server   {{ upstream_address }}:{{ nginx.upstream_port }} max_fails={{ nginx.upstream_max_fails }}  fail_timeout={{ nginx.upstream_timeout }};
        {% endfor %}
        }
    {% endblock %}

    {% block servers %}
    server {
        {% block listen %}
        listen {{ nginx.listen }};
        {% if nginx.hosts %}
            server_name {% for host in nginx.hosts %} {{ host }}{% endfor %};
        {% endif %}
        {% endblock %}


        {% block nginx_status %}
        {% if nginx.status %}
        location /nginx_status {
            stub_status on;
            access_log   off;
            allow 127.0.0.1;
            deny all;
        }
        {% endif %}
        {% endblock %}

        {% block error_pages %}
        error_page   502 503 504  /static/50x.html;
        error_page   403  /static/maintenance.html;
        {% endblock %}

        {% block start_locations %}
        {% endblock %}

        {% block static_location %}
        location /static/ {
            alias {{ nginx.static_location }}/;
            add_header Access-Control-Allow-Origin *;
            expires {{ nginx.static_expiry }};
        }
        {% endblock %}

        {% block uploads_location %}
            location /uploads/ {
                alias {{ nginx.uploads_location }}/;
                expires {{ nginx.uploads_expiry }};
            }
        {% endblock %}

        {% block local_files %}
            location /favicon.ico {
                alias {{ nginx.static_location }}/local/favicon.ico;
                expires {{ nginx.static_expiry }};
            }

            location /crossdomain.xml {
                alias {{ nginx.static_location }}/local/crossdomain.xml;
                expires {{ nginx.static_expiry }};
            }

            location /robots.txt {
                alias {{ nginx.static_location }}/local/robots.txt;
                expires {{ nginx.static_expiry }};
            }
        {% endblock %}

        {% block upstream_location %}
            location / {
                allow all;
                proxy_pass http://app_servers;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-Cluster-Client-Ip $remote_addr;
                proxy_set_header X-Forwarded-Protocol $scheme;

                {% if nginx.do_cache %}
                proxy_cache app-cache;
                proxy_cache_key {{ nginx.cache_key }};
                proxy_cache_valid  200 302 301 {{ nginx.cache_time }};
                proxy_cache_use_stale updating timeout http_503;
                proxy_cache_lock on;
                proxy_cache_lock_timeout 5s;
                {% endif %}

                {% if nginx.auth_file %}
                auth_basic "Restricted";
                auth_basic_user_file {{ nginx.auth_file }};
                {% endif %}
            }
        {% endblock %}
    }

    {% block redirect_server %}
    {% if nginx.hosts %}
    server {
        listen {{ nginx.listen }} default_server;
        server_name _;

        {% if nginx.status %}
        location /nginx_status {
            stub_status on;
            access_log   off;
            allow 127.0.0.1;
            deny all;
        }
        {% endif %}

        location / {
            allow all;
            return 301 $scheme://{{ nginx.hosts[0] }}$request_uri;
        }
    }
    {% endif %}
    {% endblock %}

    {% endblock %}
}
