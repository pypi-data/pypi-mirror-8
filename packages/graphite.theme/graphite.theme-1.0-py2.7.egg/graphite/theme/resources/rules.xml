<?xml version="1.0" encoding="UTF-8"?>
<rules
    xmlns="http://namespaces.plone.org/diazo"
    xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <!-- Theme enabled for this user -->
    <rules if="$graphite_disabled = '0'">
        <!-- Rules applying to standard Plone pages -->
        <rules css:if-content="#visual-portal-wrapper">

            <!-- indent and strip space for pretty output -->
            <xsl:output indent="yes"/>
            <xsl:strip-space elements="*"/>

            <theme href="index.html" />

            <!--
            Copy standard header tags, including base (very important for
            Plone default pages to work correctly), meta, title and
            style sheets/scripts, in the order they appear in the content.
             -->
            <drop theme="/html/head/meta" />
            <drop theme="/html/head/title" />
            <drop theme="/html/head/base" />
            <drop theme="/html/head/style" />
            <!--drop theme="/html/head/script" /-->
            <!--drop theme="/html/head/link" /-->
            <drop theme="/html/head/comment()" />

            <after theme-children="/html/head" content="/html/head/title"  />
            <after theme-children="/html/head" content="/html/head/base" />
            <after theme-children="/html/head" content="/html/head/meta" />
            <!--after theme-children="/html/head" content="/html/head/link" /-->
            <after theme-children="/html/head" content="/html/head/comment()" />
            <after theme-children="/html/head" content="/html/head/style" />
            <after theme-children="/html/head" content="/html/head/script" />

            <!-- include favicon -->
            <after
                content="/html/head/link[@type='image/x-icon']"
                theme-children="/html/head"
            />

            <after theme-children="/html/head">
                <xsl:for-each select="html/head/link">

                    <!-- include hide_editable_border.css -->
                    <xsl:if test="substring(@href, (string-length(@href) - string-length('hide_editable_border.css')) + 1) = 'hide_editable_border.css'">
                        <link href="{@href}" type="text/css" rel="stylesheet" media="screen"/>
                    </xsl:if>

                    <!-- include hide_content_menu.css -->
                    <xsl:if test="substring(@href, (string-length(@href) - string-length('hide_editable_border.css')) + 1) = 'hide_contentmenu.css'">
                        <link href="{@href}" type="text/css" rel="stylesheet" media="screen"/>
                    </xsl:if>

                    <!-- include collective.js.jqueryui.custom.min.css -->
                    <xsl:if test="substring(@href, (string-length(@href) - string-length('collective.js.jqueryui.custom.min.css')) + 1) = 'collective.js.jqueryui.custom.min.css'">
                        <link href="{@href}" type="text/css" rel="stylesheet" media="screen"/>
                    </xsl:if>

                    <!-- include tinymce.css -->
                    <xsl:if test="substring(@href, (string-length(@href) - string-length('tinymce.css')) + 1) = 'tinymce.css'">
                        <link href="{@href}" type="text/css" rel="stylesheet" media="screen"/>
                    </xsl:if>

                    <!-- include jquery.ui.combogrid.css -->
                    <xsl:if test="substring(@href, (string-length(@href) - string-length('jquery.ui.combogrid.css')) + 1) = 'jquery.ui.combogrid.css'">
                        <link href="{@href}" type="text/css" rel="stylesheet" media="screen"/>
                    </xsl:if>

                    <!-- include jqueryui.css -->
                    <xsl:if test="substring(@href, (string-length(@href) - string-length('jqueryui.css')) + 1) = 'jqueryui.css'">
                        <link href="{@href}" type="text/css" rel="stylesheet" media="screen"/>
                    </xsl:if>

                    <!-- include bika.lims.graphics.css -->
                    <xsl:if test="substring(@href, (string-length(@href) - string-length('bika.lims.graphics.css')) + 1) = 'bika.lims.graphics.css'">
                        <link href="{@href}" type="text/css" rel="stylesheet" media="screen"/>
                    </xsl:if>

                    <!-- include graphite.theme css theming -->
                    <xsl:if test="contains(@href, '++theme++graphite.theme')">
                        <link href="{@href}" type="text/css" rel="stylesheet" media="screen"/>
                    </xsl:if>

                </xsl:for-each>
            </after>

            <!-- set the html's css -->
            <before theme-children="/html" method="raw">
              <xsl:attribute name="class">
                  <xsl:value-of select="/html/@class" />
                  </xsl:attribute>
            </before>

            <!-- set the body's css -->
            <before theme-children="/html/body" method="raw">
              <xsl:attribute name="class">
                  <xsl:value-of select="/html/body/@class" />
                  </xsl:attribute>
            </before>


            <!-- logo -->
            <replace css:content="#portal-logo" css:theme-children="#logo" />
            <!--drop css:theme="#logo" css:if-not-content="body.section-front-page"/-->

            <!-- Breadcrumbs -->
            <replace css:content-children='#portal-breadcrumbs' css:theme-children='#breadcrumbs' />

            <!-- Portal global nav -->
            <replace css:content-children='#portal-globalnav' css:theme-children='#portal-globalnav' />

            <!-- Portal Search box -->
            <replace css:content-children='#portal-searchbox' css:theme-children='#portal-searchbox' />

            <!-- Portal Personal Tools Wrapper -->
            <replace css:content-children='#portal-personaltools-wrapper' css:theme-children='#portal-personaltools-wrapper' />

            <!-- Navigation menu
                 We add the content navmenu into a hidden div.
                 The themed menu is built using javascript. This way we can
                 overcome the Admin->Site setup for Bika Setup contentypes
                 menu items being rendered. The menu items will only be rendered
                 if the user has enough privileges.
            -->
            <after css:theme-children='#portal-nav-1'>
                <xsl:for-each css:select="ul.navTreeLevel0 > li.navTreeItem">
                    <xsl:if test="count(a/span/text()) &lt; 1">
                        <li class="{@class} level1">
                            <a href="{div/a/@href}"><xsl:value-of css:select="div > a"/></a>
                        </li>
                    </xsl:if>
                    <xsl:if test="count(a/span/text()) &gt; 0">
                        <li class="{@class} level1">
                            <a href="{a/@href}"><xsl:value-of css:select="a > span"/></a>
                            <xsl:if test="count(ul/text()) &gt; 0">
                                <ul>
                                    <xsl:for-each css:select="ul.navTreeLevel1 > li.navTreeItem">
                                        <li class='level2'>
                                            <xsl:if test="count(a/span/text()) &gt; 0">
                                                <a href="{a/@href}"><xsl:value-of css:select="a > span"/></a>
                                            </xsl:if>
                                            <xsl:if test="count(a/span/text()) &lt; 1">
                                                <a href="{a/@href}"><xsl:value-of css:select="a"/></a>
                                            </xsl:if>
                                        </li>
                                    </xsl:for-each>
                               </ul>
                            </xsl:if>
                        </li>
                    </xsl:if>
                </xsl:for-each>
                <xsl:for-each css:select="#portal-globalnav li">
                    <li class='level1'>
                        <a href="{a/@href}"><xsl:value-of css:select="a"/></a>
                    </li>
                </xsl:for-each>
            </after>
            <after css:theme-children='#portal-nav-2'>
                <xsl:for-each css:select="ul.navTreeLevel0 > li.navTreeItemInPath > ul > li">
                    <xsl:if test="count(a/span/text()) &lt; 1">
                        <li class="{@class} level1">
                            <a href="{div/a/@href}"><xsl:value-of css:select="div > a"/></a>
                        </li>
                    </xsl:if>
                    <xsl:if test="count(a/span/text()) &gt; 0">
                        <li class="{@class} level1">
                            <a href="{a/@href}"><xsl:value-of css:select="a > span"/></a>
                            <xsl:if test="count(ul/text()) &gt; 0">
                                <ul>
                                    <xsl:for-each css:select="ul.navTreeLevel1 > li.navTreeItem">
                                        <li class='level2'>
                                            <xsl:if test="count(a/span/text()) &gt; 0">
                                                <a href="{a/@href}"><xsl:value-of css:select="a > span"/></a>
                                            </xsl:if>
                                            <xsl:if test="count(a/span/text()) &lt; 1">
                                                <a href="{a/@href}"><xsl:value-of css:select="a"/></a>
                                            </xsl:if>
                                        </li>
                                    </xsl:for-each>
                               </ul>
                           </xsl:if>
                       </li>
                    </xsl:if>
                </xsl:for-each>
            </after>

            <replace css:theme-children='#portletNavigationTree' css:content='.portletNavigationTree'/>

            <!-- Document Edit bar -->
            <replace css:content="#edit-bar" css:theme="#edit-bar" />

            <!-- Document Portal Message -->
            <after css:content=".portalMessage" css:theme-children="#portal-message-container" />

            <!-- Document Content -->
            <replace css:content="#content" css:theme="#content" />

            <!-- Footer -->
            <replace css:content-children="#portal-footer-wrapper" css:theme-children="#footer"/>
            <after css:theme-children='#footer'>
                <div class='themedby'>
                    <a href='http://github.com/naralabs/graphite.theme'>Graphite Theme</a> by <a href='http://naralabs.com' class='logo-naralabs'><span>Naralabs</span></a>
                </div>
            </after>
        </rules>
    </rules>

    <!-- User has disabled the theme -->
    <rules if="$graphite_disabled = '1'">
        <!-- Rules applying to standard Plone pages -->
        <rules css:if-content="#visual-portal-wrapper">
            <notheme/>
        </rules>
    </rules>
</rules>
