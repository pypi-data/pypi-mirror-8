__pkginfo__ variables description
=================================


Base information
----------------

modname (required)
  main package name.

numversion (required)
  version number as a tuple or list (usually a 3-uple).

version (required)
  version number, as a string.

copyright (required)
  copyright notice.

long_desc (required)
  a long description.

short_desc (required)
  a one line description.

author (required)
  package author name.

author_email (required)
  package author contact email.

web (required)
  package home page.

ftp
  package download page or ftp site.

mailinglist
  package mailing list address.


Packaging
---------

subpackage_of
  if the package is a subpackage, this variable handles the primary level
  package name. For instance, "logilab" subpackage should set this variable to
  "logilab".

include_dirs
  list of data directories to install _with_ the library. This usually contains
  test data.

scripts
  list of executable scripts (look at the distutils setup arguments
  documentation for more information).

data_files
  list of data files (look at the distutils setup arguments documentation for
  more information).

ext_modules
  list of distutils Extension instances for Python C/C++ extensions (look at the
  distutils setup arguments documentation for more information.

license
  distribution license (GPL, LGPL, ZPL...).

license_text
  distribution license terms. You should not set it if you have specified a
  known license with the "license" attribute. Otherwise, you must set this
  variable.

pyversions
  list of supported Python versions


Debian packaging
----------------

debian_name
  name of the debian package, if different from the package's name.

debian_handler
  Name of the debian package handler (python-library, python-standalone, zope).

debian_maintainer
  debian maintainer, if different from the upstream author.

debian_maintainer_email
  debian maintainer email address, if different from the upstream author email.

architecture_dependent
  flag indicating if the package is architecture dependent. If not specified,
  this value will be guessed according to the value of the "ext_modules"
  variable.

elisp
  list of Emacs Lisp files. If not specified, this value will be guessed
  according to the content of the optional "elisp" directory.

elisp_startup
  elisp startup file. If not specified, this value will be set to
  "elisp/startup" if it exists.

dtds
  list of DTD files. If not specified, this value will be guessed according to
  the content of the optional "dtd" directory.

catalog
  SGML catalog path. If not specified, this value will be set to "dtd/catalog"
  if it exists.

xslts
  list of XSLT files. If not specified, this value will be guessed according to
  the content of the optional "xsl" directory.

examples
  path of the directory containing examples files. If not specified, this value
  will be set to "examples" if it exists

doc
  path of the directory containing documentation files. If not specified, this
  value will be set to "doc" if it exists

manpages
  list of man page files. If not specified, this value will be guessed according
  to the content of the optional "man" directory.

depends
  packages dependencies. If not specified, this value will be guessed according
  to the content of the optional "DEPENDS" file.

recommends
  recommended additional packages. If not specified, this value will be guessed
  according to the content of the optional "RECOMMENDS" file.

suggests
  suggested additional packages. If not specified, this value will be guessed
  according to the content of the optional "SUGGESTS" file.


