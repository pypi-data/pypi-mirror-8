Metadata-Version: 1.1
Name: pynaut
Version: 0.2.5
Summary: A tool for recursively exploring arbitrary python objects.
Home-page: https://github.com/stnbu/pynaut
Author: Mike Burr
Author-email: mburr@unintuitive.org
License: MIT
Download-URL: https://github.com/stnbu/pynaut/archive/master.zip
Description: ``pynaunt`` allows you to deeply explore and introspect arbitrary python objects.
        
        As an example, we explore the ``os`` module just a bit:
        
            >>> from pynaut import Container
            >>> import os
            >>> obj = Container(os)
            >>> len(obj.children)
            220
            >>> pairs = obj.grep_attr_names('wait')
            >>> len(pairs)
            12
            >>> pairs
            [('wait', <Container(<built-in function wait>) >), ('wait4', <Container(<built-in function wait4>) >), ('wait3',
            <Container(<built-in function wait3>) >), ('wait', <Container(<built-in function wait>) >), ('wait4', <Container(<built-in
            function wait4>) >), ('wait3', <Container(<built-in function wait3>) >), ('waitpid', <Container(<built-in function
            waitpid>) >), ('wait', <Container(<built-in function wait>) >), ('wait4', <Container(<built-in function wait4>) >),
            ('wait3', <Container(<built-in function wait3>) >), ('waitpid', <Container(<built-in function waitpid>) >),
            ('waitpid', <Container(<built-in function waitpid>)>)]
            >>> obj = obj.children['path']
            >>> obj = obj.children['os']
            >>> list(obj.ancestry)
            [<Container(<module 'posixpath' from '/Users/miburr/virtualenv/current/lib/python2.7/posixpath.pyc'>) >,
             <Container(<module 'os' from '/Users/miburr/virtualenv/current/lib/python2.7/os.pyc'>) >]
            >>>
        
        Additionally, there is support for searching an entire object tree for a (name, attribute) pair that meets an arbitrary
        condition.
Keywords: introspection,debugging
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2
Classifier: Topic :: Software Development :: Debuggers
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: Software Development
Classifier: Topic :: Utilities
Provides: pynaut
