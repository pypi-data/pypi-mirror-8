define("ui/adapters/volumes",["ember","ic-ajax","ui/models/brick","ui/models/volume","ui/config/environment","exports"],function(t,e,s,a,u,r){"use strict";var n=t["default"],h=e["default"],i=s["default"],o=a["default"],l=u["default"];r["default"]=n.Object.extend({find:function(){return h(l.apiUrl).then(function(t){return t.map(function(t){var e=t.bricks.map(function(t){return i.create(t)});return t.bricks=e,o.create(t)})})}})}),define("ui/models/brick",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Object.extend({brick_status_class:function(){return"up"===this.get("status").toLowerCase()?"up":"down"}.property("status"),brick_up:function(){return"up"===this.get("status").toLowerCase()}.property("status"),usedPercentage:function(){var t=100*(this.get("sizeTotal")-this.get("sizeFree"))/this.get("sizeTotal");return parseInt(t,10)}.property("sizeFree","sizeTotal"),usedPercentageWidth:function(){var t=100*(this.get("sizeTotal")-this.get("sizeFree"))/this.get("sizeTotal");return"width: %@%".fmt(t)}.property("sizeFree","sizeTotal"),barColor:function(){var t=100*(this.get("sizeTotal")-this.get("sizeFree"))/this.get("sizeTotal");return t>90?"red":"green"}.property("sizeFree","sizeTotal")})}),define("ui/models/volume",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Object.extend({volume_status_class:function(){return"started"===this.get("status").toLowerCase()?"status-circle-up":"status-circle-down"}.property("status"),volume_up:function(){return"started"===this.get("status").toLowerCase()}.property("status"),down_bricks:function(){return this.get("num_bricks")-this.get("up_bricks")}.property("up_bricks","num_bricks")})}),define("ui/app",["ember","ember/resolver","ember/load-initializers","ui/config/environment","exports"],function(t,e,s,a,u){"use strict";var r=t["default"],n=e["default"],h=s["default"],i=a["default"];r.MODEL_FACTORY_INJECTIONS=!0;var o=r.Application.extend({modulePrefix:i.modulePrefix,podModulePrefix:i.podModulePrefix,Resolver:n});h(o,i.modulePrefix),u["default"]=o}),define("ui/controllers/application",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Controller.extend({value:"",last_updated_str:"",last_updated:function(){return this.get("last_updated_str")}.property("last_updated_str"),init:function(){this.tick(),this._super()},load_time:function(){this.value=(new Date).getTime(),this.update()},update:function(){return""!==this.get("value")&&this.set("last_updated_str",moment(this.get("value"),"x").fromNow()),""},tick:function(){var t=s.run.later(this,function(){this.update(),this.notifyPropertyChange("last_updated"),this.tick()},1e3);this.set("nextTick",t)},actions:{reload:function(){this.store.clear_cache(),this.load_time(),this.get("target.router").refresh()}}})}),define("ui/initializers/export-application-global",["ember","ui/config/environment","exports"],function(t,e,s){"use strict";function a(t,e){var s=u.String.classify(r.modulePrefix);r.exportApplicationGlobal&&(window[s]=e)}var u=t["default"],r=e["default"];s.initialize=a,s["default"]={name:"export-application-global",initialize:a}}),define("ui/initializers/inject-store",["ui/models/store","exports"],function(t,e){"use strict";function s(t,e){e.register("store:main",a),e.inject("route","store","store:main"),e.inject("controller","store","store:main")}var a=t["default"];e.initialize=s,e["default"]={name:"inject-store",initialize:s}}),define("ui/models/store",["ember","exports"],function(t,e){"use strict";var s=t["default"],a={},u=!0;e["default"]=s.Object.extend({clear_cache:function(){a={}},find:function(t,e){if(u&&a[t]&&a[t][e])return a[t][e];var s=this.container.lookup("adapter:"+t);return s.find(t,e).then(function(s){return u&&(a[t]=a[t]||{},a[t][e]=s),s})}})}),define("ui/models/summary",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Object.extend({clusters:function(){var t={};this.get("vols").forEach(function(e){var s="started"===e.status.toLowerCase()?1:0;t[e.cluster]?(t[e.cluster].up_volumes+=s,t[e.cluster].num_volumes+=1,t[e.cluster].down_volumes=t[e.cluster].num_volumes-t[e.cluster].up_volumes):t[e.cluster]={up_volumes:s,num_volumes:1,down_volumes:1-s,name:e.cluster}});var e=[];for(var s in t)e.push(t[s]);return e}.property("vols"),num_volumes:function(){return this.get("vols").length}.property("vols"),num_volumes_txt:function(){return 1===this.get("vols").length?"volume":"volumes"}.property("vols"),up_volumes:function(){var t=0;return this.get("vols").forEach(function(e){"started"===e.status.toLowerCase()&&(t+=1)}),t}.property("vols"),down_volumes:function(){return this.get("num_volumes")-this.get("up_volumes")}.property("num_volumes","up_volumes"),num_clusters:function(){return this.get("clusters").length}.property("clusters"),num_clusters_txt:function(){return 1===this.get("clusters").length?"cluster":"clusters"}.property("clusters")})}),define("ui/router",["ember","ui/config/environment","exports"],function(t,e,s){"use strict";var a=t["default"],u=e["default"],r=a.Router.extend({location:u.locationType});r.map(function(){this.resource("volumes",function(){this.route("volume",{path:":volume_id"})})}),s["default"]=r}),define("ui/routes/application",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Route.extend({setupController:function(t,e){t.load_time(),this._super(t,e)}})}),define("ui/routes/index",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Route.extend({beforeModel:function(){this.transitionTo("volumes")}})}),define("ui/routes/volumes",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Route.extend({model:function(){return this.store.find("volumes")}})}),define("ui/routes/volumes/index",["ember","ui/models/summary","exports"],function(t,e,s){"use strict";var a=t["default"],u=e["default"];s["default"]=a.Route.extend({model:function(){return u.create({vols:this.modelFor("volumes")})}})}),define("ui/routes/volumes/volume",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Route.extend({model:function(t){return this.modelFor("volumes").findBy("id",t.volume_id)},afterModel:function(t){t||this.transitionTo("volumes")}})}),define("ui/templates/application",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Handlebars.template(function(t,e,a,u,r){this.compilerInfo=[4,">= 1.0.0"],a=this.merge(a,s.Handlebars.helpers),r=r||{};var n,h="",i=this.escapeExpression;return r.buffer.push('<div class="last-updated">\n  Last updated <strong>'),n=a._triageMustache.call(e,"last_updated",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(n||0===n)&&r.buffer.push(n),r.buffer.push("</strong> <button "),r.buffer.push(i(a.action.call(e,"reload",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:r}))),r.buffer.push(' class="pure-button pure-button-primary">reload</button>\n</div>\n<div id="layout" class="content pure-g">\n  '),n=a._triageMustache.call(e,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(n||0===n)&&r.buffer.push(n),r.buffer.push("\n</div>\n"),h})}),define("ui/templates/loading",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Handlebars.template(function(t,e,a,u,r){this.compilerInfo=[4,">= 1.0.0"],a=this.merge(a,s.Handlebars.helpers),r=r||{},r.buffer.push('<div class="loading"><img src="/assets/images/loading-dbc893d87921e687fd87151b2532604c.gif"/> Loading....</div>\n')})}),define("ui/templates/volumes",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Handlebars.template(function(t,e,a,u,r){function n(t,e){var s,u,r,n="";return e.buffer.push("\n      "),u=a["link-to"]||t&&t["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(2,h,e),contexts:[t,t],types:["STRING","ID"],data:e},s=u?u.call(t,"volumes.volume","",r):f.call(t,"link-to","volumes.volume","",r),(s||0===s)&&e.buffer.push(s),e.buffer.push("\n      "),n}function h(t,e){var s,u="";return e.buffer.push("\n        <div "),e.buffer.push(c(a["bind-attr"].call(t,{hash:{"class":"volume_status_class"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[],types:[],data:e}))),e.buffer.push('></div>\n        <strong class="list-vol-name">'),s=a._triageMustache.call(t,"name",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("</strong>\n        <div>"),s=a._triageMustache.call(t,"type",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push('</div>\n        <div class="brick-quick-status">\n            Bricks: <span class="up"></span> '),s=a._triageMustache.call(t,"up_bricks",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push(' <span class="down"></span> '),s=a._triageMustache.call(t,"down_bricks",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push('\n          <span class="cluster-tag">'),s=a._triageMustache.call(t,"cluster",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push('</span>\n        </div>\n        <div class="volume-id-small">'),s=a._triageMustache.call(t,"id",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("</div>\n      "),u}function i(t,e){e.buffer.push("\n        No Volumes available.\n    ")}this.compilerInfo=[4,">= 1.0.0"],a=this.merge(a,s.Handlebars.helpers),r=r||{};var o,l="",c=this.escapeExpression,p=this,f=a.helperMissing;return r.buffer.push('<div id="list" class="pure-u-1">\n  <div class="list-content">\n    '),o=a.each.call(e,"model",{hash:{},hashTypes:{},hashContexts:{},inverse:p.program(4,i,r),fn:p.program(1,n,r),contexts:[e],types:["ID"],data:r}),(o||0===o)&&r.buffer.push(o),r.buffer.push('\n  </div>\n</div>\n<div id="main" class="pure-u-1">\n  <div class="main-content">\n    '),o=a._triageMustache.call(e,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(o||0===o)&&r.buffer.push(o),r.buffer.push("\n  </div>\n</div>\n"),l})}),define("ui/templates/volumes/index",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Handlebars.template(function(t,e,a,u,r){function n(t,e){var s,u="";return e.buffer.push('\n  <div class="volumes-circle">\n    <div class="center-align">\n      <div class="volumes-circle-num">'),s=a._triageMustache.call(t,"num_volumes",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push('</div>\n      <div class="volumes-circle-txt">'),s=a._triageMustache.call(t,"num_volumes_txt",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push('</div>\n    </div>\n  </div>\n  <div class="clusters-circle">\n    <div class="center-align">\n      <div class="clusters-circle-num">'),s=a._triageMustache.call(t,"num_clusters",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push('</div>\n      <div class="clusters-circle-txt">'),s=a._triageMustache.call(t,"num_clusters_txt",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push('</div>\n    </div>\n  </div>  \n  <div class="spacer"></div>\n  <div class="spacer"></div>\n  <table class="pure-table pure-table-horizontal pure-table-striped">\n    <thead>\n      <tr>\n        <th>Cluster Name</th>\n        <th>Volumes</th>\n      </tr>\n    </thead>\n    <tbody>\n      '),s=a.each.call(t,"clusters",{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(2,h,e),contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("\n    </tbody>\n  </table>\n"),u}function h(t,e){var s,u="";return e.buffer.push("\n        <tr>\n          <td>\n            "),s=a._triageMustache.call(t,"name",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push('\n          </td>\n          <td>\n            <span class="up"></span> '),s=a._triageMustache.call(t,"up_volumes",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push(' <span class="down"></span> '),s=a._triageMustache.call(t,"down_volumes",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("\n          </td>\n        </tr>\n      "),u}this.compilerInfo=[4,">= 1.0.0"],a=this.merge(a,s.Handlebars.helpers),r=r||{};var i,o="",l=this;return r.buffer.push('<div class="spacer"></div>\n'),i=a["if"].call(e,"num_volumes",{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(1,n,r),contexts:[e],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n"),o})}),define("ui/templates/volumes/volume",["ember","exports"],function(t,e){"use strict";var s=t["default"];e["default"]=s.Handlebars.template(function(t,e,a,u,r){function n(t,e){var s,u="";return e.buffer.push('\n  <table class="pure-table pure-table-horizontal pure-table-striped">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>FS</th>\n        <th>Disk usage</th>\n        <th>Pid</th>\n        <th>Port</th>\n      </tr>\n    </thead>\n    <tbody>\n      '),s=a.each.call(t,"bricks",{hash:{},hashTypes:{},hashContexts:{},inverse:v.noop,fn:v.program(2,h,e),contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("\n    </tbody>\n  </table>\n  "),u}function h(t,e){var s,u="";return e.buffer.push("\n        <tr>\n          <td>\n            <span "),e.buffer.push(m(a["bind-attr"].call(t,{hash:{"class":"brick_status_class"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[],types:[],data:e}))),e.buffer.push("></span>\n            "),s=a._triageMustache.call(t,"name",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push('\n            <div class="brick-additional-details">'),s=a._triageMustache.call(t,"hostUuid",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("</div>\n          </td>\n          "),s=a["if"].call(t,"brick_up",{hash:{},hashTypes:{},hashContexts:{},inverse:v.program(5,o,e),fn:v.program(3,i,e),contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("\n        </tr>\n      "),u}function i(t,e){var s,u,r,n="";return e.buffer.push("\n            <td>"),s=a._triageMustache.call(t,"fs",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push('</td>\n            <td>\n              <div class="disk-usage-column">\n                '),s=a._triageMustache.call(t,"usedPercentage",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push('%\n                <div class="small-bar-outer">\n                  <div '),e.buffer.push(m((u=a.bindAttr||t&&t.bindAttr,r={hash:{"class":":small-bar-inner barColor"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[],types:[],data:e},u?u.call(t,r):b.call(t,"bindAttr",r)))),e.buffer.push(" "),e.buffer.push(m((u=a.bindAttr||t&&t.bindAttr,r={hash:{style:"usedPercentageWidth"},hashTypes:{style:"STRING"},hashContexts:{style:t},contexts:[],types:[],data:e},u?u.call(t,r):b.call(t,"bindAttr",r)))),e.buffer.push("></div>\n                </div>\n                "),s=a._triageMustache.call(t,"sizeUsedStr",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("/"),s=a._triageMustache.call(t,"sizeTotalStr",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("\n              </div>\n            </td>\n            <td>"),s=a._triageMustache.call(t,"pid",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("</td>\n            <td>"),s=a._triageMustache.call(t,"port",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("</td>\n            "),n}function o(t,e){e.buffer.push("\n            <td>N/A</td>\n            <td>N/A</td>\n            <td>N/A</td>\n            <td>N/A</td>\n          ")}function l(t,e){e.buffer.push("\n      N/A\n")}function c(t,e){var s,u="";return e.buffer.push('\n  <table class="pure-table pure-table-horizontal pure-table-striped">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      '),s=a.each.call(t,"options",{hash:{},hashTypes:{},hashContexts:{},inverse:v.noop,fn:v.program(10,p,e),contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("\n    </tbody>\n  </table>\n  "),u}function p(t,e){var s,u="";return e.buffer.push("\n        <tr>\n          <td>"),s=a._triageMustache.call(t,"name",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("</td>\n          <td>"),s=a._triageMustache.call(t,"value",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:e}),(s||0===s)&&e.buffer.push(s),e.buffer.push("</td>\n        </tr>\n      "),u}this.compilerInfo=[4,">= 1.0.0"],a=this.merge(a,s.Handlebars.helpers),r=r||{};var f,d="",b=a.helperMissing,m=this.escapeExpression,v=this;return r.buffer.push('<h2 class="page-title">\n  <div '),r.buffer.push(m(a["bind-attr"].call(e,{hash:{"class":"volume_status_class"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:r}))),r.buffer.push("></div>\n  "),f=a._triageMustache.call(e,"name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push('\n</h2>\n<div class="page-sub-title">\n  <table class="pure-table pure-table-horizontal">\n    <tr><td class="strong">Id:</td><td>'),f=a._triageMustache.call(e,"id",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push('</td></tr>\n    <tr><td class="strong">Status:</td><td>'),f=a._triageMustache.call(e,"status",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push('</td></tr>\n    <tr><td class="strong">Cluster:</td><td>'),f=a._triageMustache.call(e,"cluster",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push('</td></tr>\n    <tr><td class="strong">Type:</td><td>'),f=a._triageMustache.call(e,"type",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push('</td></tr>\n    <tr><td class="strong">Transport Type:</td><td>'),f=a._triageMustache.call(e,"transport",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push('</td></tr>\n    <tr><td class="strong">Replica Count:</td><td>'),f=a._triageMustache.call(e,"replica",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push('</td></tr>\n    <tr><td class="strong">Distribute Count:</td><td>'),f=a._triageMustache.call(e,"distribute",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push('</td></tr>\n    <tr><td class="strong">Stripe Count:</td><td>'),f=a._triageMustache.call(e,"stripe",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push('</td></tr>\n    <tr><td class="strong">Number of Bricks:</td><td class="numcol">'),f=a._triageMustache.call(e,"num_bricks",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push(" ("),f=a._triageMustache.call(e,"up_bricks",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push(" up, "),f=a._triageMustache.call(e,"down_bricks",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push(" down)</td></tr>\n  </table>\n</div>\n\n<h3>Brick details</h3>\n"),f=a["if"].call(e,"bricks",{hash:{},hashTypes:{},hashContexts:{},inverse:v.program(7,l,r),fn:v.program(1,n,r),contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push("\n\n<h3>Volume Options</h3>\n"),f=a["if"].call(e,"options",{hash:{},hashTypes:{},hashContexts:{},inverse:v.program(7,l,r),fn:v.program(9,c,r),contexts:[e],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push("\n"),d})}),define("ui/config/environment",["ember"],function(t){var e="ui";try{var s=e+"/config/environment",a=t["default"].$('meta[name="'+s+'"]').attr("content"),u=JSON.parse(unescape(a));return{"default":u}}catch(r){throw new Error('Could not read config from meta tag with name "'+s+'".')}}),runningTests?require("ui/tests/test-helper"):require("ui/app")["default"].create({});