# version 1.2.2

include::html5.conf[]

[miscellaneous]
outfilesuffix=.html

[attributes]
basebackend=html
basebackend-html=
basebackend-html=None

[macros]
(?u)^(?P<name>video)::(?P<target>\S*?)(\[(?P<attrlist>.*?)\])$=#
(?u)^(?P<name>iframe)::(?P<target>\S*?)(\[(?P<attrlist>.*?)\])$=#

[preamble]
<!--preamble: Added this to open the first, empty slide section-->
<section class="preamble">

[sect1]
</section>

<!--slide-->
<section class="slide slide0">
<h2 class="section-slide">{title}</h2>
|

[sect2]
</section>

<!--subslide-->
<section class="slide slide1">
<h2>{title}</h2>
|

# ----- Add :sect3slide: to your markup to enable slides for h3 level
ifdef::deckjs_sect3_enable[]
[sect3]
</section>

<!--subslide-->
<section class="slide slide2">
<h2>{title}</h2>
|
endif::deckjs_sect3_enable[]

[paragraph]
<p>
|
</p>


#------------------------
#for literal block incremental

[literalblock]
<div class="literalblock{role? {role}}{incremental-option? slide}"{id? id="{id}"}>
<div class="title">{title}</div>
<div class="content">
<pre><tt>
|
</tt></pre>
</div></div>


#------------------------
# for quote block

[blockdef-quote]
delimiter=^_{4,}$
quote-style=template="quote_block",options=("a",)

[quote_block]
<blockquote{incremental-option? class="slide"}>
  <p>|</p>
  <p><cite>-- {attribution} {citetitle?, {citetitle}}</cite></p>
</blockquote>


#------------------------
# for images, fixes the bug with encoding SVG using data-uri

[image-inlinemacro]
<span class="image{role? {role}}">
<a class="image" href="{link}">
{data-uri%}<img src="{imagesdir=}{imagesdir?/}{target}" alt="{alt={target}}"{width? width="{width}"}{height? height="{height}"}{align? align="{align}"}{title? title="{title}"} />
{data-uri#}<img alt="{alt={target}}"{width? width="{width}"}{height? height="{height}"}{align? align="{align}"}{title? title="{title}"}
{data-uri#}{sys:"{python}" -u -c "import mimetypes,base64,sys; print 'src=\"data:'+mimetypes.guess_type(r'{target}')[0]+';base64,'; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{target}")}"}" />
{link#}</a>
</span>

[image-blockmacro]
<div class="imageblock{style? {style}}{role? {role}}{unbreakable-option? unbreakable}"{id? id="{id}"}{align? style="text-align:{align};"}{float? style="float:{float};"}>
<div class="content">
<a class="image" href="{link}">
{data-uri%}<img src="{imagesdir=}{imagesdir?/}{target}" alt="{alt={target}}"{width? width="{width}"}{height? height="{height}"}{align? align="{align}"} />
{data-uri#}<img alt="{alt={target}}"{width? width="{width}"}{height? height="{height}{align? align="{align}"}"}
{data-uri#}{sys:"{python}" -u -c "import mimetypes,base64,sys; print 'src=\"data:'+mimetypes.guess_type(r'{target}')[0]+';base64,'; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{target}")}"}" />
{link#}</a>
</div>
<div class="title">{title}</div>
</div>


#------------------------
# for hyperlinks
# Needed to have the links open in a separate window, by default.
[http-inlinemacro]
<a href="{name}:{target}" target="_blank">{0={name}:{target}}</a>
[https-inlinemacro]
<a href="{name}:{target}" target="_blank">{0={name}:{target}}</a>


#------------------------
# for video

[video-blockmacro]
<div{incremental-option? class="slide"}>
<iframe width="{width}" height="{height}" src="{target}" frameborder="0" allowfullscreen></iframe>
</div>

[iframe-blockmacro]
<iframe width="{width}" height="{height}" src="{target}"></iframe>



#------------------------
# for lists

[listtags-bulleted]
list=<ul>|</ul>
item=<li{incremental-option? class="slide"}>|</li>
text=

[listtags-numbered]
list=<ol>|</ol>
item=<li{incremental-option? class="slide"}>|</li>
text=<p>|</p>


#------------------------
#for source code block incremental
[listingblock]
<div class="listingblock{role? {role}}{incremental-option? slide}"{id? id="{id}"}>
<div class="title">{caption=}{title}</div>
<div class="content">
<pre><tt>
|
</tt></pre>
</div></div>

[source-highlight-block]
<div class="listingblock{incremental-option? slide}">
<a id="{id}"></a>
<div class="title">{caption=}{title}</div>
<div class="content">
|
</div></div>



[header]
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<title>{doctitle=}</title>
	<meta name="description" content="{description}" />
	<meta name="viewport" content="width=1024, user-scalable=no">
	<meta name="author" content="{author}" />
	<meta name="generator" content="cdk" />
	<meta name="presdate" content="{revdate}" />
	{corpname?<meta name="company" content="{corpname}" />}
	<!-- Core and extension CSS files -->

ifndef::linkcss[]
<style type="text/css">
include1::{stylesdir=../data/deck.js/core}/deck.core.css[]
</style>
<style type="text/css">
include1::{stylesdir=../data/deck.js/extensions/goto}/deck.goto.css[]
</style>
<style type="text/css">
include1::{stylesdir=../data/deck.js/extensions/menu}/deck.menu.css[]
</style>
<style type="text/css">
include1::{stylesdir=../data/deck.js/extensions/navigation}/deck.navigation.css[]
</style>
<style type="text/css">
include1::{stylesdir=../data/deck.js/extensions/status}/deck.status.css[]
</style>
<style type="text/css">
include1::{stylesdir=../data/deck.js/extensions/hash}/deck.hash.css[]
</style>
<style type="text/css">
include1::{stylesdir=./icons}/icons.css[]
</style>

<style type="text/css">
include1::{stylesdir=../custom/deck.js/extensions/toc}/deck.toc.css[]
</style>

<style type="text/css">
include1::{stylesdir=../custom/deck.js/extensions/help}/deck.help.css[]
</style>
<style type="text/css">
include1::{stylesdir=../custom/deck.js/extensions/breadcrumb}/deck.breadcrumb.css[]
</style>
<style type="text/css">
include1::{stylesdir=../custom/deck.js/extensions/slidetheme}/deck.slidetheme.css[]
</style>

ifndef::notransition[]
<style type="text/css">
include1::{stylesdir=../custom/deck.js/stylesheets/transition}/horizontal-slide.css[]
</style>
endif::notransition[]

<style type="text/css">
include1::../custom/deck.js/stylesheets/pygments.css[]
</style>


<!-- Theme CSS files -->
<style type="text/css">
include1::{stylesdir=../custom/deck.js/themes/}/{deckjs_theme}/{deckjs_theme}.css[]
ifdef::logo[]
/* logo here */
.deck-container {
  background-image: url({sys:"b64" "{logo}"}) !important;
  background-size: auto;
}
endif::logo[]
</style>


<!-- Replace path with correct path to Modernizr file. -->
<script type="text/javascript">
# Escape as CDATA to pass validators.
/*<![CDATA[*/
include1::{scriptsdir=../data/deck.js}/modernizr.custom.js[]
include1::{scriptsdir=../data/deck.js}/jquery-1.7.2.min.js[]
// Deck Core and extensions 
include1::{scriptsdir=../data/deck.js/core}/deck.core.js[]
include1::{scriptsdir=../data/deck.js/extensions/hash}/deck.hash.js[]
include1::{scriptsdir=../data/deck.js/extensions/menu}/deck.menu.js[]
include1::{scriptsdir=../data/deck.js/extensions/goto}/deck.goto.js[]
include1::{scriptsdir=../data/deck.js/extensions/status}/deck.status.js[]
include1::{scriptsdir=../data/deck.js/extensions/navigation}/deck.navigation.js[]
include1::{scriptsdir=../custom/deck.js/extensions/toc}/deck.toc.js[]
include1::{scriptsdir=../data/deck.split.js}/deck.split.js[]
include1::{scriptsdir=../custom/deck.js/extensions/help}/deck.help.js[]
include1::{scriptsdir=../custom/deck.js/extensions/breadcrumb}/deck.breadcrumb.js[]
include1::{scriptsdir=../custom/deck.js/extensions/scrolltop}/deck.scrolltop.js[]
include1::{scriptsdir=../custom/deck.js/extensions/anchor}/deck.anchor.js[]
include1::{scriptsdir=../custom/deck.js/extensions/slidetheme}/deck.slidetheme.js[]
/*]]>*/
</script>

endif::linkcss[]
</head>
<body class="deck-container">
<section class="slide" id="title-slide">
	<h1>{doctitle}</h1>
	<h3>{author}{corpname? â€” {corpname}}</h3>
	<h4>{revdate}</h4>
ifdef::deckjs_title_help[]
  <p class="help">{deckjs_title_help}<p>
endif::deckjs_title_help[]
</section>

[footer]
<!--footer: Added this to close the final slide section-->
</section>

<!--
<a href="#" class="deck-prev-link" title="Previous">&#8592;</a>
<a href="#" class="deck-next-link" title="Next">&#8594;</a>
-->
<p class="deck-status">
	<span class="deck-status-current"></span>
	/
	<span class="deck-status-total"></span>
</p>
# toc pannel
<div class="deck-toc"></div>
# toc status panel 
#<table class="deck-toc-status">
#	 <tr>
#		 <td class="right deck-toc-h2">&nbsp;</td>
#		 <td class="left deck-toc-h3">&nbsp;</td>
#	 </tr>
#</table>
<form action="." method="get" class="goto-form">
	<label for="goto-slide">Go to slide:</label>
	<input type="text" name="slidenum" id="goto-slide" list="goto-datalist">
	<datalist id="goto-datalist"></datalist>
	<input type="submit" value="Go">
</form>
<a href="." title="Permalink to this slide" class="deck-permalink">#</a>
<script>
	$(function() {
ifdef::scrollable[]
$.deck.defaults.keys["previous"] = [8, 33, 37, 39];
$.deck.defaults.keys["next"] = [13, 32, 34, 39];
endif::scrollable[]
		$.deck('.slide');
	});
</script>

</body>
</html>
