### run

for x in {{ sfffile }}; do
	bn=`basename $x .sff`;					\
	sffinfo -a $x | sed "s/$/ $bn/";		\
	done > reads.index

awk '/>/ {print $1"\tgsMapper\tPolymorphism\t"$2"\t"$3"\t.\t.\t.\tName SNP_{{ name }}_"$5" ; Reference "$4" ; variant "$5}' $< |  tail -n +3  | cut -c 2- > out.gff
awk '/>/ {print $1"\tgsMapper\tSNP_{{ name }}\t"$2"\t"$3"\t.\t.\t.\tName SNP_{{ name }}_"$5" ; Reference "$4" ; variant "$5}' $< |  tail -n +3  | cut -c 2- > out2.gff

cat << ENDOFSCRIPT | python
index = dict([x.split() for x in open('reads.index').readlines()])
libs = set(index.values())
mll = max([len(x) for x in libs])
mllr = '%%-%ds %%s' % mll
mlls = ' ' * (mll+1)
F = open('improved.HCDiffs', 'w')
i = 0

for line in open('out/454HCDiffs.txt', 'r').readlines():
	i += 1
	if i % 1000 == 0: print '%s lines processed' % i
	if not line.strip(): 
		F.write("\n")
		continue
	if line[0] in ['>', '_', '-']: 
		F.write(line)
		continue
	ls = line.split()
	if ls[0] in ["Reads", "Other"]:
		F.write(line)
		continue
	if ls and ls[0] in index.keys():
		F.write(mllr % (index[ls[0]], line))
	else:
		F.write(line.replace(ls[0], ls[0] + mlls))
F.close()
ENDOFSCRIPT

out/454HCDiffs.txt: $(gsmap_reference_fasta) {{ sfffile }}
	$e runMapping \
		-o out -ace -fd $(annotCL) \
		-mi $(gsmap_min_overlap_ident) \
		-ml $(gsmap_min_overlap_len) \
		$(gsmap_reference_fasta) \
		{{ sfffile }}

### clean

-rm -rf out
	$e -rm -f reads.index
	$e -rm -f improved.HCDiffs
	$e -rm -f out.gff

#      #   mid = "MID1", "ACGAGTGCGT", 2;
#         mid = "MID2", "ACGCTCGACA", 2;
#         mid = "MID3", "AGACGCACTC", 2;
#         mid = "MID4", "AGCACTGTAG", 2;
#         mid = "MID5", "ATCAGACACG", 2;
#         mid = "MID6", "ATATCGCGAG", 2;
#         mid = "MID7", "CGTGTCTCTA", 2;
#         mid = "MID8", "CTCGCGTGTC", 2;
#         mid = "MID9", "TAGTATCAGC", 2;
#         mid = "MID10", "TCTCTATGCG", 2;
#         mid = "MID11", "TGATACGTCT", 2;
#         mid = "MID12", "TACTGAGCTA", 2;
#         mid = "MID13", "CATAGTAGTG", 2;
#         mid = "MID14", "CGAGAGATAC", 2;
