### run

DEBUG=yes

echo " {{ input }} {{ reference }}	"

if [[ ! -f "{{base}}.delta" ]] 
then
	nucmer {% if matchmode %} --mum {% else %} --maxmatch {% endif %}  \
		-b {{ breaklen }} --prefix={{base}} \
		{{ input }} {{ reference }}
fi

if [[ ! -f "{{base}}.coords" ]]
then
	show-coords -rcl {{base}}.delta > {{base}}.coords
fi

if [[ ! -f "{{base}}.png" ]]
then
	echo mummerplot -R {{input}}  -Q {{ reference }} --layout --large \
		--color -t png -p {{base}} {{base}}.delta
	mummerplot -R {{input}}  -Q {{ reference }} --layout --large \
		--color -t png -p {{base}} {{base}}.delta
fi


cut -d'|' -f7 {{ base }}.coords | cut -f 1 | sed 1,5d | sort  | uniq > {{base}}.mapped

sed -e '/set ytics/,$ d' {{base}}.gp | sed -e 's/^ \"\([^\"]*\)\" [0-9]*\, \\$/QQQ\1/' | grep "^QQQ" | sed "s/^QQQ//" \
	> {{base}}.scaffold.list

fastaExtract -l {{base}}.scaffold.list -f {{ input }} -o > {{base}}.raw.scaffold.fasta

echo fastaExtractMerge -l {{base}}.scaffold.list -f {{ input }}    \
    -s {{ gff_source }} -L {{ linker }} -b {{base}}           \
    {% if organism %} -o {{ organism }} {% endif %}           \
    {% if genomecenter %}-c {{ genomecenter }}{%endif%}       \
    {% if taxid %}-t {{ taxid }} {% endif %}                  \
    -g -m {{base}}.mapped


fastaExtractMerge -l {{base}}.scaffold.list -f {{ input }}    \
    -s {{ gff_source }} -L {{ linker }} -b {{base}}           \
    {% if organism %} -o {{ organism }} {% endif %}           \
    {% if genomecenter %}-c {{ genomecenter }}{%endif%}       \
    {% if taxid %}-t {{ taxid }} {% endif %}                  \
    -g -m {{base}}.mapped
