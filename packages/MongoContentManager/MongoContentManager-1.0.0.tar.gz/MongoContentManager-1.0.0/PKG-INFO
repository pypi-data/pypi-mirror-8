Metadata-Version: 1.1
Name: MongoContentManager
Version: 1.0.0
Summary: A content manager for IPython with MongoDB as the backend.
Home-page: https://github.com/laurenceputra/mongo_notebook_manager
Author: Laurence Putra
Author-email: laurenceputra@gmail.com
License: GPL v3
Description: MongoNotebookManager
        ====================
        
        IPython Notebook Manager in MongoDB
        
        Setting up
        ----------
        
        First, run
        
        ::
        
            pip install MongoNotebookManager
        
        Then, when you start ipython notebook, make sure you have the following
        config settings in place. This module will save your notebooks and
        checkpoints to mongodb, and supports an unlimited number of checkpoints.
        
        required
        ~~~~~~~~
        
        ::
        
            c.NotebookApp.contents_manager_class='mongo_notebook_manager.MongoContentsManager'
        
        optional
        ~~~~~~~~
        
        Below are the arguments, with their default values
        
        mongo\_uri
        ^^^^^^^^^^
        
        ::
        
            c.NotebookApp.MongoContentsManager.mongo_uri='mongodb://localhost:27017/'
        
        replica\_set
        ^^^^^^^^^^^^
        
        ::
        
            c.NotebookApp.replica_set=''
        
        database\_name
        ^^^^^^^^^^^^^^
        
        ::
        
            c.NotebookApp.database_name='ipython'
        
        Database username
        ~~~~~~~~~~~~~~~~~
        
        ::
        
            c.NotebookApp.MongoContentsManager.mongo_username = 'my_container'
        
        Database password
        ~~~~~~~~~~~~~~~~~
        
        ::
        
            c.NotebookApp.MongoContentsManager.mongo_password = '12345'
        
        notebook\_collection
        ^^^^^^^^^^^^^^^^^^^^
        
        ::
        
            c.NotebookApp.notebook_collection='notebooks'
        
        checkpoint\_collection
        ^^^^^^^^^^^^^^^^^^^^^^
        
        ::
        
            c.NotebookApp.checkpoint_collection='checkpoints'
        
        checkpoints\_history
        ^^^^^^^^^^^^^^^^^^^^
        
        ::
        
            c.NotebookApp.checkpoints_history=False
        
        Why did I build this?
        ---------------------
        
        I was setting up IPython Notebook on heroku, and ran into the problem
        where heroku will remove the extra files after a while. Having used
        mongodb quite thoroughly before, and knowing the existence of the free
        mongodb host (up to 500mb, which I believe is more than enough for most
        users of IPython Notebook), mongolab, I decided to write a module that
        will enable persistence of the notebooks on heroku, hence this plugin.
        
        Bugs?
        -----
        
        This is still in Alpha stage, although most of the basic features are
        working. If you do find any bugs, please report issues to the `repo on
        Github <https://github.com/laurenceputra/mongo_notebook_manager/issues>`__.
        
        Features?
        ---------
        
        If there are additional features that you are looking for, please create
        an issue over at our `repo on
        Github <https://github.com/laurenceputra/mongo_notebook_manager/issues>`__,
        and we'll prioritize and get working on it.
        
        Pull requests?
        --------------
        
        If you wish to make things better, or fix one of the
        issues(bug/feature), please submit a pull request. However, please
        follow the `AngularJS commit message
        guideline <https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit>`__
        for your commit messages.
        
Keywords: mongo notebook manager ipython database storage
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Topic :: Database :: Front-Ends
Classifier: Framework :: IPython
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
