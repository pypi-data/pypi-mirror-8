Metadata-Version: 1.1
Name: pyditz
Version: 0.7
Summary: Python implementation of Ditz (http://ditz.rubyforge.org).
Home-page: http://pypi.python.org/pypi/pyditz
Author: Glenn Hutchings
Author-email: zondo42@gmail.com
License: GPL v2 or later
Description: ==============
         About PyDitz
        ==============
        
        Introduction
        ============
        
        This package is intended to be a drop-in replacement for the Ditz_
        distributed issue tracker.  It provides a ``pyditz`` command-line program,
        which acts (mostly) the same way as ``ditz``, and it adds several other
        nice things too:
        
        * Whereas ``ditz``, when typed on its own, runs the ``todo`` command,
          ``pyditz`` drops you into a command shell where you can run Ditz commands
          and get completion on command names, issue names and release names
          according to context.
        
        * With ``pyditz``, you don't have to run it from the same directory where
          the issue database is; it will look in parent directories for it.
        
        * It keeps an intelligent cache of issues, so parsing of all the YAML files
          isn't necessary for each command.  This greatly improves speed when you
          have lots of issues.
        
        * You can use the database engine of PyDitz in Python programs to migrate
          bug databases to and from Ditz format, or create summary reports in your
          own favourite format.  Me, I prefer reStructuredText_ and rst2pdf_.
        
        Requirements
        ============
        
        To install and run it:
            PyYAML_ and Jinja2_
        
        To have nice terminal highlighting output:
            Pygments_ (and colorama_ if you're on Windows)
        
        To run the test suite:
            Nose_, Mock_ and Coverage_
        
        To build source distributions from the checked-out Mercurial_ repo:
            hgtools_ and flake8_
        
        To build the documentation:
            Sphinx_ and the napoleon_ extension
        
        Installation
        ============
        
        The usual incantation will install things::
        
            python setup.py install
        
        This will install the ``ditz`` module and a console command called
        ``pyditz`` to invoke in a similar manner to the original ``ditz``.
        
        If you want to shadow the original completely, and have the ``ditz``
        command run this instead, create a file called ``.ditzrc`` in your home
        directory and add these lines::
        
            [config]
            command = ditz
        
        This only takes effect at installation time.  Of course, instead of
        ``ditz`` you can choose anything else more keyboard-friendly.
        
        Documentation
        =============
        
        The current documentation can be found online here__.  You can also look at
        an example of the `HTML output`_.
        
        __ https://pythonhosted.org/pyditz
        
        License
        =======
        
        PyDitz is distributed under the `GNU General Public License, v2`__.
        
        __ https://gnu.org/licenses/old-licenses/gpl-2.0-standalone.html
        
        Links
        =====
        
        If you like this, here's a few more things you might want to check out:
        
        * There's another Python project of the same name called akaihola-pyditz_.
          (I only found it after publishing mine, or I might have chosen another
          name.)  Not updated for 6 years, but it has some ideas for logging work
          that might be useful.
        
        * Pitz_ is another Ditz-alike issue tracker, also written in Python.  Its
          bug databases is not compatible with Ditz, and I didn't have much luck
          getting it to work, but it might work for you.
        
        * If you're a fan of `GNU Emacs`_, there's a ditz-mode_ written for it that
          I maintain.  It works with the original Ditz, or PyDitz.
        
        .. _Coverage: https://pypi.python.org/pypi/coverage
        .. _Ditz: http://ditz.rubyforge.org
        .. _GNU Emacs: https://www.gnu.org/software/emacs
        .. _HTML output: https://pythonhosted.org/pyditz/_static/index.html
        .. _Jinja2: http://jinja.pocoo.org
        .. _Mercurial: http://mercurial.selenic.com
        .. _Mock: https://pypi.python.org/pypi/mock
        .. _Nose: https://pypi.python.org/pypi/nose
        .. _Pitz: https://github.com/mw44118/pitz
        .. _Pygments: https://pypi.python.org/pypi/Pygments
        .. _PyYAML: https://pypi.python.org/pypi/PyYAML
        .. _Sphinx: http://sphinx.pocoo.org
        .. _akaihola-pyditz: https://github.com/akaihola/pyditz
        .. _colorama: https://pypi.python.org/pypi/colorama
        .. _ditz-mode: https://bitbucket.org/zondo/ditz-mode
        .. _flake8: https://pypi.python.org/pypi/flake8
        .. _hgtools: https://pypi.python.org/pypi/hgtools
        .. _napoleon: https://pypi.python.org/pypi/sphinxcontrib-napoleon
        .. _reStructuredText: http://docutils.sourceforge.net/docs/ref/rst/introduction.html
        .. _rst2pdf: https://pypi.python.org/pypi/rst2pdf
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)
Classifier: Natural Language :: English
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Software Development :: Bug Tracking
