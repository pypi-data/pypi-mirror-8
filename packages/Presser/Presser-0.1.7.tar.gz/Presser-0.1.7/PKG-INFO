Metadata-Version: 1.1
Name: Presser
Version: 0.1.7
Summary: Extracts data from vine, in lieu of an API
Home-page: https://github.com/ladyrassilon/presser
Author: Gemma Hentsch
Author-email: contact@halfapenguin.com
License: GNU GPL v3.0
Download-URL: https://github.com/ladyrassilon/presser/archive/
Description: ============
        Presser v0.1
        ============
        
        .. image:: https://coveralls.io/repos/ladyrassilon/presser/badge.png?branch=master 
            :target: https://coveralls.io/r/ladyrassilon/presser?branch=master
        .. image:: https://travis-ci.org/ladyrassilon/presser.svg?branch=master
            :target: https://travis-ci.org/ladyrassilon/presser
        .. image:: https://pypip.in/version/Presser/badge.svg
            :target: https://pypi.python.org/pypi/Presser/
            :alt: Latest Version
        .. image:: https://pypip.in/implementation/Presser/badge.svg
            :target: https://pypi.python.org/pypi/Presser/
            :alt: Supported Python implementations
        .. image:: https://pypip.in/status/Presser/badge.svg
            :target: https://pypi.python.org/pypi/Presser/
            :alt: Development Status
        
        
        | This is a simple library that attempts to extract the data for a vine from a given vine.co URL. Its a little rough and ready, and given that Vine can change their page design at any time, cannot be guaranteed to work.
        
        | You'll want to keep an eye out for PresserJavaScriptParseError because this will probably indicate that this is the case.
        
        | You will need Node installed, it does the evaluation of the javascript for more stable javascript data extraction. I am looking to find a viable alternative so the package will not be node dependent, but as yet, I've not found a viable alternative.
        
        However, here is the example usage::
        
            from presser.presser import Presser
            press = Presser()
            
            #For a vine id
            vine = press.get_data_for_vine_id("OBiwWuBm0Eg")
            
            #For a vine url
            vine = press.get_data_for_vine_from_url("https://vine.co/v/OBiwWuBm0Eg")
            
            vine.keys()
            vine["avatarUrl"]
            
        Warning
        ^^^^^^^
        Vine does not permit scraping, so please do not use this in an automated fashion, but it should be okay if your workflow simplifies and speeds up the workflow of a user going to an url and extracting the data manually. 
        
        | If you try to do large batches of vine urls for extraction in a short period of time, then you will probably annoy Vine. Don't do this please.
Keywords: scraping,vine
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Programming Language :: Python
Classifier: Intended Audience :: Developers
Requires: beautifulsoup4(>=4.3.2)
Requires: requests(>=2.4.0)
Requires: mock(>=1.0.1)
Requires: coverage(>=3.7.1)
Requires: nose(>=1.3.4)
Requires: PyExecJS(>=1.0.4)
Requires: responses(>=0.2.2)
