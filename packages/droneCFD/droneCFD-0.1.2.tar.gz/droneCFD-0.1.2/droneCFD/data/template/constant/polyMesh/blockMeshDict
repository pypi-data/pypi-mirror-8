/*--------------------------------------------------------------------------------*\
 _______  .______        ______   .__   __.  _______      ______  _______  _______
|       \ |   _  \      /  __  \  |  \ |  | |   ____|    /      ||   ____||       \
|  .--.  ||  |_)  |    |  |  |  | |   \|  | |  |__      |  ,----'|  |__   |  .--.  |
|  |  |  ||      /     |  |  |  | |  . `  | |   __|     |  |     |   __|  |  |  |  |
|  '--'  ||  |\  \----.|  `--'  | |  |\   | |  |____    |  `----.|  |     |  '--'  |
|_______/ | _| `._____| \______/  |__| \__| |_______|    \______||__|     |_______/

\*--------------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;

    root            "";
    case            "";
    instance        "";
    local           "";

    class           dictionary;
    object          blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


convertToMeters 1;

vertices
(
    (-1.0 -1.0  -1.0)
    ( 1.0 -1.0  -1.0)
    ( 1.0  1.0  -1.0)
    (-1.0  1.0  -1.0)
    (-1.0 -1.0   1.0)
    ( 1.0 -1.0   1.0)
    ( 1.0  1.0   1.0)
    (-1.0  1.0   1.0)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (35 15 15) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
outlet
{
//maxY
type patch;
faces
    (
        (2 6 5 1)//patch maxX
    );
   }

inlet
{
//minY
type patch;
faces
    (
        (0 4 7 3)//patch minX
    );
    }

walls
{
type wall;
faces
    (
        (0 3 2 1) //patch minZ
        (4 5 6 7)//patch maxZ
        (1 5 4 0)// minY
        (3 7 6 2)//maxY
        );
        }
);
mergePatchPairs
(
);


// ************************************************************************* //
