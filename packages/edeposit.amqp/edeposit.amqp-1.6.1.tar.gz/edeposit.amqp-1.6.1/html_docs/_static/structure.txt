@startuml
package Pika {}
package "Daemon module" as Daemon {
    class DaemonRunner <<(M, green)>> {
    }
}

class AMQPDaemon 
class FTPMonitorDaemon

AMQPDaemon -r-> FTPMonitorDaemon

package "Scritps in bin/" as Scripts {
    class "alephdaemon.py" as alephdaemon <<(S, orchid)>>
    class "calibredaemon.py" as calibredaemon <<(S, orchid)>>
    class "ftp_managerd.py" as ftp_managerd <<(S, orchid)>>
    class "ftp_monitord.py" as ftp_monitord <<(S, orchid)>>
    class "antivirusd.py" as antivirusd <<(S, orchid)>>
    class "amqp_tool.py" as amqp_tool <<(S, orchid)>>
    class "harvester.py" as harvester_sh <<(S, orchid)>>
    class "ltpd.py" as ltpd <<(S, orchid)>>
}

DaemonRunner ..> DaemonRunnerWrapper
DaemonRunnerWrapper -l-> PikaDaemon
Pika ..> PikaDaemon
Pika .r...> amqp_tool

PikaDaemon --> AMQPDaemon
AMQPDaemon --* alephdaemon
AMQPDaemon --* calibredaemon
AMQPDaemon --* ftp_managerd
AMQPDaemon --* antivirusd
AMQPDaemon --* ltpd
FTPMonitorDaemon --* ftp_monitord
amqp_tool -r-* harvester_sh

package "edeposit.amqp.ftp" as ftp {
}
package "edeposit.amqp.aleph" as aleph {
}
package "edeposit.amqp.calibre" as calibre {
}
package "edeposit.amqp.antivirus" as antivirus {
}
package "edeposit.amqp.harvester" as harvester {
}
package "edeposit.amqp.ltp" as ltp {
}

ftp_managerd -> ftp
ftp_monitord -> ftp
alephdaemon -> aleph
calibredaemon -> calibre
antivirusd -> antivirus
harvester_sh -> harvester
ltpd -> ltp
@enduml