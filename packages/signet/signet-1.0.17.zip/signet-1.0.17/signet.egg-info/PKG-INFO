Metadata-Version: 1.1
Name: signet
Version: 1.0.17
Summary: Signet provides support for building and delivering tamper resistant python to your users and customers.
Home-page: http://jamercee.github.io/signet
Author: Jim Carroll
Author-email: jim@carroll.com
License: Signet is licensed under the 3-clause BSD License
Download-URL: http://github.com/jamercee/signet
Description: Signet - Protect your users and customers from hackers
        ******************************************************
        
        FULL HTML Documentation: http://jamercee.github.io/signet/
        
        Signet provides support for building and delivering tamper resistant python to
        your users and customers.
        
        Signet creates a custom python loader which you deliver with your script. On
        each invocation, the loader will verify no tampering has ocurred before it
        runs the python script.
        
        Users have the confidence of knowing their scripts are safe and yet retain
        full access to the python source for code review and enhancement. And you know
        your users are running the right version of code.
        
        Signet is fully integrated with `distutils <https://docs.python.org/2.7/library/distutils.html>`_ to make the process of
        building and installing new python projects as simple and painless as possible.
        
        How does it work?
        =================
        
        Signet relies on the strength of cryptographic hash to reliably detect file
        modifications.  Signet builds hashes of your script and all it's dependencies.
        These hashes are incorporated into a custom python loader which will handle
        re-verifying the hashes before it will run your script.
        
        If your script or any of it's dependencies are tampered with, the loader will
        emit an error and exit. If everything matches, the loader will run your script.
        
        Example usage
        =============
        
        For example, if you had a simple script ``hello.py``::
        
            import os
            print('hello from %s' % os.name)
        
        And you deployed it with this simple ``setup.py``::
        
            from distutils.core import setup, Extension
            from signet.command.build_signet import build_signet
        
            setup(name = 'hello',
                cmdclass = {'build_signet': build_signet, },
                ext_modules = [Extension('hello', sources=['hello.py'])],
                )
        
        Build your loader::
        
            python setup.py build_signet
        
        On Windows you'll have ``hello.exe`` and on Linux you'll have ``hello``.
        
        The signet system also provides facilities for code signing::
        
            from distutils.core import setup, Extension
            from signet.command.build_signet import build_signet, sign_code
        
            setup(name = 'hello',
                cmdclass = {'build_signet': build_signet,
                            'sign_code': sign_code,
                           },
                ext_modules = [Extension('hello', sources=['hello.py'])],
                )
        
        Build your loader::
        
            python setup.py build_signet
            python setup.py sign_code --savedpassword --pfx-file {path-to-pfx}
        
        
        Installing Signet
        =================
        
        Signet is hosted on github at https://github.com/jamercee/signet
        
        Installation using git::
        
            git clone https://github.com/jamercee/signet
            cd signet
            python setup.py install
        
        Signet can also be installed with pip::
        
            pip install signet
        
        Features
        ========
        
        * Multiplatform: works under
        
          * Windows (32/64-bit)
          * Linux
          * FreeBSD
        
        * Integrated with Distutils
        * Protection from tampering (SHA1 hashed content)
        * On Windows
        
          * Provides code signing executables
          * PE executable verification
          * Automatic resource file generation
          * Customizable program icon
        
        * Customizable python loader (full c++ included)
        * Unique process name 
        
          * show ``hello`` rather than ``python hello.py``
        
        * Compatible with virtualenv
        
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Topic :: Security
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: System :: Software Distribution
