Metadata-Version: 1.1
Name: kombu-fernet-serializers
Version: 0.0.5
Summary: Symmetrically encrypted serializers for Kombu
Home-page: https://github.com/heroku/kombu-fernet-serializers
Author: David Gouldin
Author-email: dgouldin@heroku.com
License: Copyright (c) 2014 David Gouldin

MIT License

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Description: ========================
        Kombu Fernet Serializers
        ========================
        
        This library registers a set of `Kombu`_ serializers which take those built into
        Kombu and symmetrically encrypts them using `Fernet`_.
        
        The encryption key is accessed via the `KOMBU_FERNET_KEY` environment variable.
        To set the encryption key::
        
            import os
            from cryptography.fernet import Fernet
        
            key = Fernet.generate_key()
            os.environ['KOMBU_FERNET_KEY'] = key
        
        
        To try it out, start a redis server and from the `example` directory, run::
        
            pip install celery redis
            celery -A tasks worker
        
        Then from another shell::
        
            python -c "from tasks import add; add.delay(1, 2)"
        
        .. _`Kombu`: http://kombu.readthedocs.org/en/latest/
        .. _`Fernet`: http://cryptography.readthedocs.org/en/latest/fernet/
        .. _`Celery`: http://celery.readthedocs.org/en/latest/
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
