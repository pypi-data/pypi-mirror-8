[resources]

# Path where you would like the sqlite database with catalog and diagnostic
# data to be located.  This database will be created the first time you call
# anything that needs it.

database = ~/.biolite/biolite.sqlite

# Path to the default output directory for finished analyses.

#outdir = ~/analyses

# The max number of threads and memory to use when calling external programs
# through BioLite wrappers. This number should equal the number of cores on the
# node that is running the pipeline. For example, if you are running the
# pipeline on a node with 8 cores in a large cluster, then the number of
# threads should be 8. A higher number of threads will speed up any wrappers
# that can make use of more than one thread.

threads = 2
memory = 4G

# The mean and max insert size that you expect to see in your paired reads.
# This is the length of the insert that was sequenced, ie the sum of the
# lengths of the reads and the unsequenced region between them. It does NOT
# include the sequencing adapters themselves.

mean_insert_size = 300
max_insert_size = 600

# Once the mean and stddev of the insert size have been estimated, the max
# insert size will be set to (mean + stddev * max_insert_stddev):

max_insert_stddev = 2


[executables]
# Use these keys to override the path to an executable.

# Path to the java interpreter for running JAR files.
java =

# The following executables are distributed in the BioLite tools package, which
# is downloaded and installed separately from the BioLite python module:
# https://bitbucket.org/caseywdunn/biolite/downloads
coverage = bl-coverage
exclude = bl-exclude
fasta2fastq = bl-fasta2fastq
fastq2fasta = bl-fastq2fasta
filter_illumina = bl-filter-illumina
insert_stats = bl-insert-stats
interleave = bl-interleave
pair_reads = bl-pair-reads
randomize = bl-randomize
treepruning = bl-treepruning
threshold = bl-threshold

# Below are entries for the external programs that have wrappers in BioLite.
# Use just the executable name for programs in your path, or
# use full paths here for executables not in your path.

# http://www.bioinformatics.bbsrc.ac.uk/projects/fastqc/
# tested with version 0.9.2
fastqc =

# ftp://ftp.ncbi.nih.gov/blast/
# tested with version 2.2.25
blastn =
blastx =
blastp =
tblastx =
makeblastdb =
rpsblast =
dustmasker =

# http://bowtie-bio.sourceforge.net/bowtie2/index.shtml
# tested with version 2.2.0beta5
bowtie2 =
bowtie2-build =
bowtie2-align =

# http://samtools.sourceforge.net/
# tested with version 0.1.16
samtools =

# http://www.ebi.ac.uk/~zerbino/oases/
# tested with version 1.2.01
# compile with a MAXKMERLENGTH of more than 100 to support HiSeq reads
velveth =
velvetg =
oases =

# http://trinityrnaseq.sourceforge.net/
# tested with version r2012-06-08
trinity = Trinity

# http://mbb.univ-montp2.fr/MBB/uploads/macse_v0.9b1.jar
# NOTE: also download the 'macse' wrapper script using build_3rd_party.sh
macse = macse_v0.9b1.jar

# http://molevol.cmima.csic.es/castresana/Gblocks.html
Gblocks =

# https://github.com/stamatak/standard-RAxML
raxml = raxmlHPC-PTHREADS-SSE3
raxml-mpi = raxmlHPC-MPI
raxml-hybrid = raxmlHPC-HYBRID

# http://code.google.com/p/phyutility/
phyutility = phyutility.jar

# http://www.gnu.org/software/parallel/
parallel = 

# http://micans.org/mcl/
mcl =

# http://sourceforge.net/projects/transdecoder/
transdecoder = transcripts_to_best_scoring_ORFs.pl

# http://omabrowser.org/standalone/
oma =

# EOF

