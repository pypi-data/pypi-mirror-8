<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    i18n_domain="collective.media">

  <five:registerPackage package="." initialize=".initialize" />
  <include package=".browser" />
  
  <genericsetup:registerProfile
      name="default"
      title="Collective Media"
      directory="profiles/default"
      description='Extension profile for the Media product.'
      provides="Products.GenericSetup.interfaces.EXTENSION"
      />
  
  <!-- Register the import step -->
  <genericsetup:importStep
      name="collective.media"
      title="collective.media special import handlers"
      description=""
      handler="collective.media.setuphandlers.import_various" />

  <!-- Register the upgrade step -->
  <genericsetup:upgradeStep
      title="Add catalog indexes"
      description="Add the hasMedia and leadMedia indexes"
      source="1000"
      destination="1001"
      handler="collective.media.setuphandlers.add_catalog_indexes"
      profile="collective.media:default" />
  
  <!-- -*- extra stuff goes here -*- -->
  
  <adapter
      for="Products.CMFCore.interfaces.IFolderish"
      provides=".interfaces.ICanContainMedia"
      factory=".adapters.MediaHandling"
      />
  
 <adapter
      for="plone.app.collection.interfaces.ICollection"
      provides=".interfaces.ICanContainMedia"
      factory=".adapters.MediaHandling"
      />
  
  <adapter name="hasMedia" factory=".indexers.folderish_hasMedia" />
  <adapter name="leadMedia" factory=".indexers.folderish_getLeadMedia" />
  <adapter name="getLeadMediaTag" factory=".indexers.folderish_getLeadMediaTag" />
  <adapter name="getLeadImageTag" factory=".indexers.folderish_getLeadImageTag" />
  <adapter name="hasMedia" factory=".indexers.collection_hasMedia" />
  <adapter name="leadMedia" factory=".indexers.collection_getLeadMedia" />


  <class class="Products.mediaPage.content.mediapage.MediaPage">
      <implements interface=".interfaces.IMediaTypes" />
  </class>

  <class class="Products.mediaPerson.content.mediaperson.MediaPerson">
      <implements interface=".interfaces.IMediaTypes" />
    </class>
  
  <class class="Products.mediaEvent.content.mediaevent.MediaEvent">
      <implements interface=".interfaces.IMediaTypes" />
  </class>

  <class class="Products.mediaLink.content.medialink.MediaLink">
      <implements interface=".interfaces.IMediaTypes" />
  </class>

  
  <subscriber
      for="plone.app.blob.interfaces.IATBlobImage
      zope.lifecycleevent.interfaces.IObjectModifiedEvent
      "
      handler=".events.imageObjectCreated"/>

  <subscriber
      for="collective.media.interfaces.IMediaTypes
      Products.CMFCore.interfaces.IActionSucceededEvent
      "
      handler=".events.workflowSucceeded"/>

  <subscriber
        for="collective.media.interfaces.IMediaTypes
        Products.LinguaPlone.events.IObjectTranslatedEvent"
        handler=".events.mediaObjectTranslated" />

  <subscriber
        for="collective.media.interfaces.IMediaTypes
        Products.Archetypes.interfaces.IObjectInitializedEvent"
        handler=".events.mediaObjectAdded" />
  
 <subscriber
        for="Products.CMFCore.interfaces.IFolderish
        zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler="collective.media.events.reindexMedia" />
 
 <subscriber
        for="plone.app.collection.interfaces.ICollection
        zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler="collective.media.events.reindexMedia" />
  
</configure>
