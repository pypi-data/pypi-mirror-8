Metadata-Version: 1.1
Name: pyroma
Version: 1.7
Summary: Test your project's packaging friendliness
Home-page: https://bitbucket.org/regebro/pyroma
Author: Lennart Regebro
Author-email: regebro@gmail.com
License: MIT
Description: pyroma
        ======
        
        Pyroma rhymes with aroma, and is a product aimed at giving a rating of how well
        a Python project complies with the best practices of the Python packaging
        ecosystem, primarily PyPI, pip, Distribute etc, as well as a list of issues that
        could be improved.
        
        The aim of this is both to help people make a project that is nice and usable,
        but also to improve the quality of Python third-party software, making it easier
        and more enjoyable to use the vast array of available modules for Python.
        
        It's written so that there are a library with methods to call from Python, as
        well as a script, also called pyroma.
        
        It can be run on a project directory before making a release:
        
            $ pyroma .
            
        On a distribution before uploading it to the CheeseShop:
        
            $ pyroma pyroma-1.0.tar.gz
        
        Or you can give it a package name on CheeseShop:
        
            $ pyroma pyroma
        
        Giving it a name on CheeseShop is the most extensive test, as it will
        test for several things isn't otherwise tested.
        
        In all cases the output is similar::
        
            ------------------------------
            Checking .
            Found pyroma
            ------------------------------
            The packages long_description is quite short.
            ------------------------------
            Final rating: 9/10
            Cottage Cheese
            ------------------------------
        
        Tests
        -----
        
        This is the list of checks that are currently performed:
        
        * The package should have a name, a version and a Description. 
          If it does not, it will recieve a rating of 0.
          
        * The version number should be a string. A floating point number will
          work with distutils, but most other tools will fail.
          
        * The version number should comply to PEP386.
        
        * The long_description should be over a 100 characters.
        
        * Pyroma will convert your long_description to HTML using Docutils, to
          verify that it is possible. This guarantees pretty formatting of your
          description on PyPI. As long as Docutils can convert it, this passes,
          even if there are warnings or error in the conversion. These warnings
          and errors are printed to stdout so you will see them.
        
        * You should have a the following meta data fields filled in:
          classifiers, keywords, author, author_email, url and license.
          
        * You should have classifiers specifying the sypported Python versions.
        
        * If you are using setuptools or distribute you should specify zip_safe,
          as it defaults to "true" and that's probably not what you want.
          
        * If you are using setuptools or distribute you can specify a test_suite
          to run tests with 'setup.py test'. This makes it easy to run tests for
          both humans and automated tools.
        
        * If you are checking on a PyPI package, and not a local directory or
          local package, pyroma will check the number of owners the package has
          on PyPI. It should be three or more, to minimize the "Bus factor",
          the risk of the index owners suddenly going off-line for whatever reason.
          
        * If you are checking on a PyPI package, and not a local directory or
          local package, Pyroma will look for documentation for your package at
          pythonhosted.org and readthedocs.org. If it can't find it, it prints out
          a message to that effect. However, since you may have documentation
          elsewhere, this does not affect your rating.
        
        Credits
        -------
        
        The project was created by Lennart Regebro, regebro@gmail.com
        
        The name "Pyroma" was coined by Wichert Akkerman, wichert@wiggy.net
        
        Changelog
        =========
        
        1.7 (2014-10-19)
        ----------------
        
        - Package name lookup is now case insensitive. [Dmitry Vakhrushev]
        
        - Fixed yet another error in return value. [Dmitry Vakhrushev]
        
        
        1.6 (2014-04-17)
        ----------------
        
        - Fixed issue #17: Integration with zest.releaser stopped working.
        
        - Fixed issue #18: Pyroma returns the rating as an exit code, this was a 
          mistake. It now returns 0 on success, 1 on incorrect options and 2 if
          the rating is below 8.
        
        - Fixed issue #19: Implementing a custom test class counts as having tests.
        
        - 8: Philadelphia is now considered a "success" based on practical experience.
        
        
        1.5 (2013-10-18)
        ----------------
        
        - Fixed issue #13: Pyroma would fail if there was no description.
        
        - Dropping support for Python 3.1. It still works, but it is unsupported.
        
        - Added support for command line options, implementing #14 and #15.
        
        
        1.4 (2013-05-29)
        ----------------
        
        - Issue #13: Pyroma would fail when checking a package name if no source
          distribution could be found.
          
        - Added a check that the package has a source distribution on PyPI.
        
        
        1.3.1 (2013-05-29)
        ------------------
        
        - Issue #11: pyroma would fail if long_description was a non-string.
          
        - zest.releaser now only runs Pyroma on Python packages.
        
        - Because packages that use external test-runners can not get more
          that 9/10, this value is now also seens as acceptable when running
          Pyroma through zest.releaser.
          
        
        1.3 (2013-03-15)
        ----------------
        
        - Added a test to make sure the version number is a string.
        
        - Made sure errors were printed also when a fatal error was encountered.
        
        - Better log messages.
        
        - The zest.releaser hook is now done before tagging, as it's more useful there.
          Especially in conjuction with check-manifest.
          
        - Having no long_description no longer causes pyroma to fail.
        
        
        1.2 (2013-03-06)
        ----------------
        
        - Removed the running of tests. I always found it a bit iffy, and getting
          rid of it solved a lot of issues. Pyroma is now focused solely on
          packaging quality.
          
        - A package on PyPI with several versions will no longer return an error.
        
        - Now looks for documentation on pythonhosted.org or readthedocs.org.
        
        - Adds a hook for zest.releaser, so it can be run after doing the checkout,
          before uploading to PyPI.
        
        
        1.1 (2013-03-05)
        ----------------
        
        - Better handling if there is no package data, for example if setup.py doesn't
          call setup() unless you run it as the "__main__" script.
          
        - If setup.py doesn't call setup() look for a main() script and try to run it.
        
        
        1.0 (2013-03-05)
        ----------------
        
        - Support for Python 3.3
        
        - Added test for PEP 386 compliance.
        
        
        0.9.3 (2011-03-17)
        ------------------
        
        - It's now using a ProxyStub for the PyPI xmlrpclib during tests.
        
        - Removed the Dependency rating.
        
        - Added a rating that runs tests, to see if they run. This will also take
          care of checking for dependencies.
        
        
        0.9.2 (2011-03-13)
        ------------------
        
        - Commented out the dependency test, it was too unreliable.
        
        - Fixed the ReST.
        
        - Python 3 support.
        
        
        0.9.1 (2011-03-08)
        ------------------
        
        - Initial release
        
Keywords: pypi quality testing
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
