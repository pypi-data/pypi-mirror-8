Metadata-Version: 1.1
Name: natu
Version: 0.1.0-a5
Summary: Natural units in Python
Home-page: http://kdavies4.github.io/natu/
Author: Kevin Davies
Author-email: kdavies4@gmail.com
License: BSD-compatible (see LICENSE.txt)
Download-URL: https://github.com/kdavies4/natu/archive/v0.1.0-a5.zip
Description: ########
          natu
        ########
        
        **Natural units in Python**
        
        .. warning:: This project is currently in a pre-release state.  It will be
           officially released once the unit tests are complete.
        
        natu_ is a free, open-source package to represent physical quantities.  There
        are `many Python packages that deal with units and quantities
        <http://kdavies4.github.io/natu/seealso.html>`_, but natu_ is uniquely
        system-independent.  The units are derived from physical constants with
        adjustable values and dimensions.  The value of a unit is factored into a
        quantity so that the quantity is not "in" any particular unit.  This has the
        following advantages:
        
        - **Flexible**: Different unit systems, including `natural units`_ (hence the
          name "natu"), can be represented by simply adjusting the physical constants.
        - **Simple**: Unit conversion is inherent.  This results in quick computations
          and a small code base (< 1500 lines).  By default, dimensions and display
          units are tracked to catch errors and for string formatting, respectively.
          However, this can be turned off to reduce the computational overhead to nearly
          zero while still providing the core features.
        - **Scalable**: The values of the base physical constants can scaled to prevent
          exponent overflow, regardless of the units used.
        - **Intuitive**: Each unit is a fixed quantity which can be treated as a
          mathematical entity.  A variable quantity is expressed as the product of a
          number and a unit, as stated by BIPM_.
        - **Representative**: The structure of the package reflects the way modern units
          are defined: standards organizations such as NIST_ assign values to universal
          physical constants so that the values of units can be determined by physical
          experiments instead of prototypes.
        
        For example, you can do this:
        
            >>> from natu.units import degC, K
            >>> print(0*degC + 100*K)
            100.0 degC
        
        Please `see the tutorial
        <http://nbviewer.ipython.org/github/kdavies4/natu/blob/master/examples/tutorial.ipynb>`_
        for more examples and `visit the main website`_ for the full documentation.
        
        Installation
        ~~~~~~~~~~~~
        
        The easiest way to install natu_ is to use pip_::
        
            > pip install natu
        
        On Linux, it may be necessary to have root privileges::
        
            $ sudo pip install natu
        
        License terms and development
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        natu_ is published under a `BSD-compatible license
        <https://github.com/kdavies4/natu/blob/master/LICENSE.txt>`_.  Please share any
        improvements you make, preferably as a pull request to the ``master`` branch of
        the `GitHub repository`_.  There are useful development scripts in the `hooks
        folder <https://github.com/kdavies4/natu/blob/master/hooks/>`_.  If you find a
        bug, have a suggestion, or just want to leave a comment, please `open an issue
        <https://github.com/kdavies4/natu/issues/new>`_.
        
        
        .. _natu: http://kdavies4.github.io/natu/
        .. _natural units: http://en.wikipedia.org/wiki/Natural_units
        .. _Python Standard Library: https://docs.python.org/3/library/
        .. _GitHub repository: https://github.com/kdavies4/natu
        .. _NIST: http://www.nist.gov/
        .. _BIPM: http://www.bipm.org/
        .. _pip: https://pypi.python.org/pypi/pip
        .. _degree Celsius (degC): http://en.wikipedia.org/wiki/Celsius
        .. _decibel (dB): http://en.wikipedia.org/wiki/Decibel
        .. _coherent relations: http://en.wikipedia.org/wiki/Coherence_(units_of_measurement)
        .. _statcoulomb: http://en.wikipedia.org/wiki/Statcoulomb
        .. _math: https://docs.python.org/3/library/math.html
        .. _numpy: http://numpy.scipy.org/
        .. _visit the main website: http://kdavies4.github.io/natu/
        
Keywords: quantity calculus quantities unit conversion natural SI CGS Planck Hartree
Platform: any
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Education
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development :: Quality Assurance
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Microsoft :: Windows
Provides: natu
