# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, Pierre Quentel, Bendik RÃ¸nning Opstad
# This file is distributed under the same license as the PyDbLite package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyDbLite 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-15 02:46+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/api.rst:4
# 053723d9eb564a1b86c26265df47f589
msgid "API"
msgstr ""

#: ../../source/api.rst:7
# dd13abdf6a124e98829e14bdb120807d
msgid "PyDbLite.PyDbLite API"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite.Index:1
# 02eae1ba663c437683c446c2181a11be
msgid "Class used for indexing a base on a field. The instance of Index is an attribute of the Base instance"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base:1
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.__init__:1
# 011e1489f42a4a49bc7c5fdaebcadeeb
# 694ca4be818e4f5b849078e3054caaef
msgid "protocol as defined in pickle / pickle. Defaults to the highest protocol available. For maximum compatibility use protocol = 0"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.add_field:1
# 4b039aed92084070a08c6c4d726e408a
msgid "Adds a field to the database"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.commit:1
# 6f20ed5aaa59400296e5e95168347378
msgid "Write the database to a file"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:1
# cd9b1848575d4022b3db45d1228bda88
msgid "Create a new base with specified field names."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:5
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create_index:11
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:7
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:9
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.update:4
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database:6
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:7
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__init__:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.add_field:5
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:17
# 628a326dab324dbb959b93bd1f87a0de
# f62677324c28410ba3995922c0f1ab7a
# 55c7e7d4c0114dcfba64116b069f060f
# f3a27359cc324fdeaece9d7f3cc1e23b
# f7827ba85f50405f8a331ac3e7ea6bf0
# fdc7986305ba454fbc3b2c8e4cb38938
# ae0d8729cd384da2b6e5f4dfac666a25
# 02e7498751f3467893028148fc9d32ee
# 63eb91d11b224122a2147685b584549b
# 1eb39cd347954aab9674c168ab39cae8
# d7ea342bc80f4764935cb03b1989d40b
msgid "Args:"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:4
# b74eee47553742af85e8fc0d683adcd5
msgid "\\*fields (str): The field names to create."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:5
# 34072309137245fea0547b5d4fa08942
msgid "mode (str): the mode used when creating the database."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:7
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:15
# cd5a6653d048422f8585e18f1eb51c21
# aecb39ac490c40bd816acedfe8d10848
msgid "if mode = 'open' : open the existing base, ignore the fields"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:8
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:16
# 3159d67592234d63b788f330b22d06c0
# e962178302014cbcb94964450dfeb886
msgid "if mode = 'override' : erase the existing base and create a new one with the specified fields"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:11
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:9
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.exists:1
#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:11
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:12
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:19
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.delete:6
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.insert:7
# 7f37bb3c2612488bacddbd095123ad34
# c99b575da69445cba41183b8fbab8008
# ccb9bda983d24f918dddfafdb44fd5ad
# 69062886a0b34e03b9443e0ad4f4e9ff
# 8d40f05176af4b359fab0cd77d4fa8d6
# 8a446296393f453d9802164ba897dd58
# 79ffcc0e81d3497b9f103f89dfb46230
# da1e251fc2e04853815a3491ba1e4416
msgid "Returns:"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create:12
# 79c484a646bf48639f6659940fb20c45
msgid "Returns the database (self)."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create_index:1
# ca34de4c8e84416faeeba9433fe35fd0
msgid "Create an index on the specified field names"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create_index:3
# 307bf5aecd464837b5339a2df50eba54
msgid "An index on a field is a mapping between the values taken by the field and the sorted list of the ids of the records whose field is equal to this value"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create_index:7
# dca6c072a9774dbe93379e0dbc35501f
msgid "For each indexed field, an attribute of self is created, an instance of the class Index (see above). Its name it the field name, with the prefix _ to avoid name conflicts"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.create_index:12
# 05bb4c68197f4cc8a8e50c8ddde6612a
msgid "fields (list): the fields to index"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:1
# ae46194275f6400f8a3c52c22bcbc89c
msgid "Remove a single record, or the records in an iterable"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:3
# 586c779f1c2c44559d981bc1f9287417
msgid "Before starting deletion, test if all records are in the base and don't have twice the same __id__"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:7
# 3cff659359774675a83fdeefea77bdfc
msgid "remove (record or list of records): The record(s) to delete."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete:10
# 4a3dae402d364c97bb4840acf198abef
msgid "Return the number of deleted items"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.delete_index:1
# 5e68831403df47ccb7f396aff1d843e4
msgid "Delete the index on the specified fields"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.drop_field:1
# df7638075f28438a9d19dfdd68a96acd
msgid "Removes a field from the database"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.exists:2
# b7166e85086245e4b8937a423b4ae43e
msgid "bool: if the database file exists"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.fields:1
# 29807af4281349b48e0f42cb5333390e
msgid "The list of the fields (does not include the internal fields __id__ and __version__)"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.get_indices:1
# fe389ee72fea44dd9664e8439865a6d2
msgid "Returns the indices"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.get_unique_ids:1
# c4deada9768d4415be2a60ac0fed4651
msgid "Returns a set of unique values from column"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.group_by:1
# 95919340f7fe4ebb91f0cc33cf7297a8
msgid "Returns the records grouped by column"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:1
# c190a81c70d049f9bd144e3dff5c1f79
msgid "Insert one or more records in the database."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:3
# b7cd54c358264029aa68ed31731f4fa1
msgid "Parameters can be positional or keyword arguments. If positional they must be in the same order as in the create() method If some of the fields are missing the value is set to None"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:8
# 5fa56b1c98e04351869d3891184edb88
msgid "args (the values to insert, or a list of values): The record(s) to delete."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:9
# 4453f6de555b4c1197e19c718ea98268
msgid "kw (dict): The field/values to insert"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.insert:12
# 2d4c89735aa1417c86fe935e02835fbd
msgid "Returns the record identifier if inserting one item, else None."
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.name:1
# 2522a6235fb34ff693b690d709b68426
msgid "The basename of the path, stripped of its extension"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.open:1
# 050e38d3a2fa4782b1458a4b6acc6769
msgid "Open an existing database and load its content into memory"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.path:1
# 7cbf4e18a0c549809b6ffc03eaea5ce6
msgid "The path of the database in the file system"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.update:1
# 3b0967b68142424887c3a393ce3c382f
msgid "Update one record or a list of records with new keys and values and update indices"
msgstr ""

#: ../../../pydblite/pydblite.py:docstring of pydblite.pydblite._Base.update:5
# 78b430e6c2f54581bd9f6dc33a31618a
msgid "records (record or list of records): The record(s) to update."
msgstr ""

#: ../../source/api.rst:19
# b2e32c69799b4474af1354d7592f9121
msgid "PyDbLite.SQLite API"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite:1
# e2c2c9fd409146f788f23b66e5cc895c
msgid "Main differences from :mod:`pydblite.pydblite`:"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite:3
# 4908be44ccd14d49bb9071cfaad2b090
msgid "pass the connection to the :class:`SQLite db <pydblite.sqlite.Database>` as argument to :class:`Table <pydblite.sqlite.Table>`"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite:5
# 59c19185954848af8772194c39235a62
msgid "in :func:`create() <pydblite.sqlite.Table.create>` field definitions must specify a type."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite:6
# 720fd15a2e924deeb694ee3511a24e9a
msgid "no `drop_field` (not supported by SQLite)"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite:7
# 2a88aa55565f4b7b9c53831c54f4d72f
msgid "the :class:`Table <pydblite.sqlite.Table>` instance has a :attr:`cursor <pydblite.sqlite.Database.cursor>` attribute, so that raw SQL requests can be executed."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.SQLiteError:1
# a0d94e9a70f64fb4b13dc852f6ab13ed
msgid "SQLiteError"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database:1
# fc6f5dca5d82407b88f18e1adf033406
msgid "To create an in-memory database provide ':memory:' as filename"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database:4
# 7d3c6c0d34e1490a8001229ed717e7c5
msgid "filename (str): The name of the database file, or ':memory:'"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database:5
# 31f63d3be3344d71a4c1951ec86bc8ff
msgid "kw (dict): Arguments forwarded to sqlite3.connect"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database.commit:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.commit:1
# aaa545b6d0e44ada863e95f1d5c27597
# b1029aac06764aaa98ecda83110f7a39
msgid "Save any changes to the database"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database.conn:1
# 62f7f1101b1c4295a0ef44f0b3103f8b
msgid "The SQLite connection"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Database.cursor:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.cursor:1
# 4da82553d6aa4ce4af339957febdc565
# 2e30501a70564208b84cbce22764a630
msgid "The SQLite connections cursor"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table:3
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__init__:3
# 7461cf45fe67469ab7e369540818d967
# ea07457b2b3f4aff95415dc4f11e6518
msgid "table_name (str): The name of the SQLite table."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table:4
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__init__:4
# 06e9540c5327449c9fc7dc1bffcca915
# 8d56f5231b434c5dbda66ba0fbdc04df
msgid "db (:class:`Database <pydblite.sqlite.Database>`): The database."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:1
# e956e7ccae6c4111a34e20f5f2c56cde
msgid "Selection by field values."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:3
# 8f7262ed7e924a88b51f6c9be44bd7f1
msgid "db(key=value) returns the list of records where r[key] = value"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:6
# 01ed921cba154723a5ec940ca6ea71f1
msgid "args (list): A field to filter on."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:7
# 39bcedacc66041dea8da756cce6e1755
msgid "kw (dict): pairs of field and value to filter on."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:10
# f0691a0f5d2c4f85bd7c86120c7c4923
msgid "When args supplied, return a :class:`Filter <pydblite.common.Filter>` object that filters on the specified field."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__call__:12
# df3ecf819b6341df895327f5b3ae1985
msgid "When kw supplied, return all the records where field values matches the key/values in kw."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__delitem__:1
# 64141b7706d94220847562a1e731dde3
msgid "Delete by record id"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__getitem__:1
# ea7cdd4f4c564182a283b3b36ee144db
msgid "Direct access by record id."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.__iter__:1
# 0b8b7c533dd84b82be5bd35a5612668b
msgid "Iteration on the records"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.add_field:1
# cdcfae6bd9464e1c97ddb3ff524b7e39
msgid "Add a new column to the table."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.add_field:4
# 8f2c0cf35ccb4c2e8a63d3b462dc13d7
msgid "name (string): The name of the field"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.add_field:5
# 32faf4610d494351b97b3a8661f6bf96
msgid "column_type (string): The data type of the column (Defaults to TEXT)"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.add_field:6
# 269ac565b72d43e69fca79ea5cc6dfb0
msgid "default (datatype): The default value for this field (if any)"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.conv:1
# b87107fc15c140fa9a52e548d3bf6b77
msgid "When a record is returned by a SELECT, ask conversion of specified field value with the specified function."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:1
# 0de99aa13e8b4e0a84257592b8a2b1da
msgid "Create a new table."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:4
# cc35f7c2f373414face40c8ec9b3f670
msgid "fields (list of tuples): The fields names/types to create. For each field, a 2-element tuple must be provided:"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:7
# 5ea699be68a748c69ee1394c333c3074
msgid "the field name"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:8
# e7dee014bdd64f79b92a72a034ee4b43
msgid "a string with additional information like field type + other information using the SQLite syntax eg  ('name', 'TEXT NOT NULL'), ('date', 'BLOB DEFAULT CURRENT_DATE')"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:13
# 6e1edba0be414d538b781e59d1d6ca1f
msgid "mode (str): The mode used when creating the database."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:13
# aa8b98c9047c43f4816f66a62381fe35
msgid "mode is only used if a database file already exists."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.create:20
# 33b97a4fd2ba4074918f16c3e1635e58
msgid "the database (self)."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.delete:1
# bbe9d69f4cea490ab75df027d8e46823
msgid "Remove a single record, or the records in an iterable."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.delete:3
# 5c020a4ca02946a5a305ce432846608f
msgid "Before starting deletion, test if all records are in the base and don't have twice the same __id__."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.delete:7
# 742b2ba596cf41ae974ef1c584263cc8
msgid "int: the number of deleted items"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.insert:1
# cbfd9b0788a84231b8d1178067405202
msgid "Insert a record in the database."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.insert:3
# e33bb3032deb4960bd6aecdd64946229
msgid "Parameters can be positional or keyword arguments. If positional they must be in the same order as in the :func:`create` method. If some of the fields are missing the value is set to None."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.insert:8
# eeb696b732d945739259a067fc3a78d3
msgid "The record identifier"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.is_date:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.is_datetime:1
#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.is_time:1
# 3731fe716abe4c8893652a56d41b2008
# 55f6e60585a04d57a43a872e88112b92
# 2e95fa385f25416898aa615cf2d13fd0
msgid "Ask conversion of field to an instance of datetime.date"
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.open:1
# 5f1fa43007e446eaa91252403d128c35
msgid "Open an existing database."
msgstr ""

#: ../../../pydblite/sqlite.py:docstring of pydblite.sqlite.Table.update:1
# f1f56229ab2e4a5287e9c87b68b8b4fb
msgid "Update the record with new keys and values."
msgstr ""

#: ../../source/api.rst:34
# ecc318d846dd40c98a7a91ff5416623c
msgid "PyDbLite.common API"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter:1
# 7b18100ddae34b0985bfdd4626ffe303
msgid "A filter to be used to filter the results from a database query. Users should not have to use this class."
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__and__:1
# bb5badb24100466cb8d7cf6fe9773f42
msgid "Returns a new filter that combines this filter with other_filter using AND."
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__eq__:1
# b789889b3d3343a094c1e34f7f985df0
msgid "Perform EQUALS operation When input value is an iterable, but not a string, it will match for any of the values on the iterable"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__ge__:1
# 593e5aadc19347bc82165f70c7489205
msgid "Perform GREATER THAN OR EQUALS operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__gt__:1
# 36faea28425d4bb4a24e2d35c95ca339
msgid "Perform GREATER THAN operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__iter__:1
# 2afc613c6d3e4614a7ef39245107a94f
msgid "Returns in iterator over the records for this filter"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__le__:1
# 7347b0f00cd74ddfb44c01ffefcd958f
msgid "Perform LESS THAN OR EQUALS operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__len__:1
# 8682e26c6f064204aa8e9c1e2183e3b0
msgid "Returns the number of records that matches this filter"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__lt__:1
# 36c62a5366ea44039d6950bd01b518a1
msgid "Perform LESS THAN operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__ne__:1
# de6c4f671d164b249b4ac56a2972b64e
msgid "Perform NOT EQUALS operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__or__:1
# cf386162cdc84ce38ebb2761101b2246
msgid "Returns a new filter that combines this filter with other_filter using OR."
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.__str__:1
# b6fe7d45725845b9bc43aec5bdda446e
msgid "Returns a string representation of the filter"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.filter:1
# 011536c451434d97b091ac788ef4c82d
msgid "Returns the filter"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.ilike:1
# 3d535231c53d4c82aa102e03f3858ed4
msgid "Perform ILIKE operation"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.is_filtered:1
# 7a253cce74d04ac2bb2d4d1e6bc5d4fe
msgid "If the filter contains any filters"
msgstr ""

#: ../../../pydblite/common.py:docstring of pydblite.common.Filter.like:1
# f6ee3d0afd324b2aa0f99e967bd1da4b
msgid "Perform LIKE operation"
msgstr ""

