<tool id="deeptools_correctGCBias" name="correctGCBias" version="1.0.1">
  <description>uses the output from computeGCBias to generate corrected BAM files</description>
  <requirements>
    <requirement type="package" version="1.5.1_3e13687c89e951476776b15afb4bbbc3b906f761">deepTools</requirement>
    <requirement type="package" version="0.1">ucsc_tools</requirement>
    <requirement type="package" >deepTools</requirement>
  </requirements>
  <command>
    #import tempfile
    #set $temp_dir = os.path.abspath(tempfile.mkdtemp())

    #set $temp_bam_handle = tempfile.NamedTemporaryFile( dir=$temp_dir )
    #set $temp_bam_path = $temp_bam_handle.name + '.bam'
    #silent $temp_bam_handle.close()
    #silent os.system("ln -s %s %s" % (str($bamInput), $temp_bam_path))
    #silent os.system("ln -s %s %s.bai" % (str($bamInput.metadata.bam_index), $temp_bam_path))


  correctGCBias
  --bamfile '$temp_bam_path'
  --GCbiasFrequenciesFile $GCbiasFrequenciesFile
  
  #if $source.ref_source=="history":
    --genome $source.input1
  #else:
    --genome "${source.input1_2bit.fields.path}"
  #end if


  #if $effectiveGenomeSize.effectiveGenomeSize_opt == "specific":
    --effectiveGenomeSize $effectiveGenomeSize.effectiveGenomeSize
  #else:
    --effectiveGenomeSize $effectiveGenomeSize.effectiveGenomeSize_opt
  #end if


  #if $advancedOpt.showAdvancedOpt == "yes":
    #if str($advancedOpt.region.value) != '':
      --region '$advancedOpt.region'
    #end if
    
    --binSize '$advancedOpt.binSize'  
  #end if
  
  #set newoutFileName="corrected."+str($outFileFormat)
  
  --correctedFile $newoutFileName; mv $newoutFileName $outFileName

  </command>

  <inputs>

  <param name="GCbiasFrequenciesFile" type="data" format="tabular" label="Output of computeGCBias" />

  <param name="bamInput" format="bam" type="data" label="Input BAM file" help="This should be same file that was used for computeGCbias. The BAM file must be sorted."/>

  <conditional name="source">
    <param name="ref_source" type="select" label="Reference genome">
        <option value="cached">locally cached</option>
        <option value="history">in your history</option>
    </param>
    <when value="cached">
        <param name="input1_2bit" type="select" label="Using reference genome" help="If your genome of interest is not listed, contact your Galaxy team">
            <options from_data_table="deepTools_seqs" />
        </param>
    </when>
    <when value="history">
        <param name="input1" type="data" format="twobit" label="Select a reference dataset in 2bit format" />
    </when>
  </conditional>

      <conditional name="effectiveGenomeSize">
        <param name="effectiveGenomeSize_opt" type="select" label="Effective genome size"
            help="The effective genome size is the portion of the genome that is mappable. Large fractions of the genome are stretches of NNNN that should be discarded. 
                    Also, if repetitive regions were not included in the mapping of reads, the effective genome size needs to be adjusted accordingly. 
                    See Table 2 of http://www.plosone.org/article/info%3Adoi%2F10.1371%2Fjournal.pone.0030377 or http://www.nature.com/nbt/journal/v27/n1/fig_tab/nbt.1518_T1.html for several effective genome sizes.">
            <option value="2150570000">mm9</option>
            <option value="2451960000">hg19</option>
            <option value="121400000">dm3</option>
            <option value="93260000">ce10</option>
            <option value="specific">user specified</option>
        </param>
        <when value="specific">
            <param name="effectiveGenomeSize" type="integer" value="" label="Effective genome size" />
        </when>
      </conditional>

  <param name="outFileFormat" type="select" label="File format of the output">
    <option value="bam">bam</option>
    <option value="bw">bigwig</option>
    <option value="bg">bedgraph</option>
  </param>
  
  <conditional name="advancedOpt">
    <param name="showAdvancedOpt" type="select" label="Show advanced options" >
        <option value="no" selected="true">no</option>
        <option value="yes">yes</option>
      </param>
      <when value="no" />
      <when value="yes">
          <param name="region" type="text" value=""
            label="Region of the genome to limit the operation to"
            help="This is useful when testing parameters to reduce the computing time. The format is chr:start:end, for example &quot;chr10&quot; or &quot;chr10:456700:891000&quot;" />
           
           <param name="binSize" type="integer" value="50" min="1" 
             label="Bin size in bp"
             help="Size of the bins in bp for the ouput of the bigwig/bedgraph file."/>
      </when>
  </conditional>
  </inputs>
  
  <outputs>
    <data format="bam" name="outFileName">
    <change_format>
        <when input="outFileFormat" value="bw" format="bigwig" />
        <when input="outFileFormat" value="bam" format="bam" />
        <when input="outFileFormat" value="bg" format="bedgraph" />
    </change_format>
    </data>
  </outputs>
  <help>

**What it does**

This tool requires the output from computeGCBias to correct the given BAM files according to the method proposed by Benjamini and Speed (2012). Nucleic Acids Res.
The resulting BAM files can be used in any downstream analyses, but be aware that you should not filter out duplicates from here on.
-----

.. class:: infomark

If you would like to give us feedback or you run into any trouble, please send an email to deeptools@googlegroups.com

This tool is developed by the `Bioinformatics and Deep-Sequencing Unit`_ at the `Max Planck Institute for Immunobiology and Epigenetics`_.


.. _Bioinformatics and Deep-Sequencing Unit: http://www3.ie-freiburg.mpg.de/facilities/research-facilities/bioinformatics-and-deep-sequencing-unit/
.. _Max Planck Institute for Immunobiology and Epigenetics: http://www3.ie-freiburg.mpg.de


  </help>
  
</tool>
