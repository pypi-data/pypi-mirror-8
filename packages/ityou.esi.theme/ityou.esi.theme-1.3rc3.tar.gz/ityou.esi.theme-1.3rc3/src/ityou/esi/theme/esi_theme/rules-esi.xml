<rules
    xmlns="http://namespaces.plone.org/diazo"
    xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <!--    <xi:include href="standard-rules.xml" /> -->

    <rules css:if-content="#visual-portal-wrapper">
<!--
        <rules if="$mobile = 'True'">
            <rules if-content="//body[contains(@class, 'userrole-anonymous')]">
                <theme href="mobile-login.html" />
            </rules>
            <theme href="mobile.html" />
            <drop css:content="#edit-bar"/>
        </rules>

        <rules if-not="$mobile = 'True'">
--> 
		<rules>
            <rules if-content="//body[contains(@class, 'userrole-anonymous')]">
                <theme href="login.html" />
            </rules>
            <theme href="theme.html" />

            <!-- Logo -->
            <replace css:theme=".navbar-brand" css:content="#portal-logo" nocontent="ignore" />
            <!-- /Logo --> 

            <!-- Footer -->
            <replace css:theme-children="#site-footer" css:content-children="#portal-footer" nocontent="ignore" />
            <!-- /Footer -->
        </rules>


        <!-- ACTIVITY STREAM -->
        <!--<rules if-content="//*[@data-ityou-view='activity-stream']" >-->
            <!--<drop css:content-children="#content" /> -->
            <!-- <theme href="jesi.html"/>     -->
        <!--</rules>-->
        <!-- /ACTIVITY STREAM  -->

        <!-- ITYOU.ESI.VIEWLETS -->
        <replace css:content="#livesearch-container"  css:theme="#livesearch-container" />
        <drop css:content="#portal-column-content #livesearch-container" />
        <replace css:content="#new-content-container" css:theme="#new-content-container" />
        <drop css:content="#portal-column-content #new-content-container" />
        <!-- plone discussion durch ityou.astream.comments ersetzt -->
        <drop css:content="#commenting" />
        <!-- /ITYOU.ESI.VIEWLETS -->

        <replace css:content="#edit-bar" css:theme-children="#editbar-container" css:if-content="#edit-bar" />

        <!-- css wird durch bootstrap ersetzt -->
<!--        <drop content="//head/link[ contains(@href, 'reset.css') ]" /> -->
        <drop content="//head/link[ contains(@href, 'public.css') ]" />
        <!-- /css wird durch bootstrap ersetzt -->
        <merge attributes="class id" theme="/html/body" content="/html/body" />

        <!-- Parameter, im im PageTemplate übergeben werden, z.b. für jQuery/Diazo 
        die Inhalte von ESI-PARAMS werden in JESI-PARAMS übertragen 
        -->
        <replace css:theme-children="#JESI-PARAMS" css:content-children="#JESI-PARAMS"  />
        <after css:theme-children="#JESI-PARAMS" css:content-children="#ESI-PARAMS"  />
        <drop css:content="#ESI-PARAMS" />

        <!-- DAS FUNKTIONIERT !!!
        <drop content="//head/link[ contains(@href, 'jqueryui') ]" />
        - - - - das auch   - - - 
        <rules if-content="//head/link[ contains(@href, 'jqueryui') ]">
            <drop content="//head/link" />
        </rules>
        -->
        <!-- das geht nicht !!!
        <rules if-content="/html/body/......" >  
            <xsl:templates ...    
        </rules>
        -->

        <!-- control panel -->
        <xsl:template match="//img[@src[  contains(., 'plone.app.theming.gif')  ]]"> 
            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        </xsl:template>
        <!-- /control panel -->

        <!-- unnoetige Tags mit formatierungsklassen raus -->
        <strip css:content="#portal-top > div" /> 

        <drop attributes="//body/*/divYYYYYYYYYYYYYYYY[ contains(@class, 'row')  ]" />

        <!-- alle class mit 'row' (und 'arrow'????) entfernen -->
        <drop attributes="class" css:content="div.row"/>

        <prepend theme="//head" content="//head/base" nocontent="ignore" />

    <!--
        <prepend theme="//head" content="//link[ contains(@href, 'controlpanel.css')  ]" />
        <prepend theme="//head" content="//link[ contains(@href, 'public.css')  ]" />
    -->

      <prepend theme="//head" content="//head/link"
               nocontent="ignore" />
      <prepend theme="//head" content="//head/style"
               nocontent="ignore" />
      <append theme="//head" content="//head/script"
              nocontent="ignore" />
      <append theme="//head" content="//head/meta"
              nocontent="ignore" />

      <replace css:theme="title" css:content="title" nocontent="ignore" />

    <!--  <replace css:theme="#portal-top" css:content="#portal-top" nocontent="ignore" />
    -->

        <xsl:template match="//h2/text()[contains(.,'Plone')]"><xsl:copy select="." /> oxoxox</xsl:template> 
        <xsl:template replace="'Plone', 'GAGA'"></xsl:template> 

        <!-- makes images responsive -->
        <xsl:template match="img/@class">
            <xsl:attribute name="class"><xsl:value-of select="." /> img-responsive</xsl:attribute>
        </xsl:template> 
        <!-- /makes images responsive -->


        <!-- Navi -->
    <!--    <drop attributes="id" css:content="#portal-globalnav" />
    -->
        <xsl:template match="li/@class[contains(., 'selected')]">
            <xsl:attribute name="class"><xsl:value-of select="." /> active</xsl:attribute>
        </xsl:template> 
        <!-- Manipulation von Navi in jquery 
        ....
        -->
        <replace css:theme-children=".navbar-nav" css:content-children="#portal-globalnav" nocontent="ignore" />
        <!-- /Navi -->

        <!-- breadcrumbs -->
        <replace css:theme-children="#site-breadcrumbs" css:content-children="#portal-breadcrumbs" nocontent="ignore" />
        <drop css:content="#portal-breadcrumbs" />
        <!-- /breadcrumbs -->

        <!-- title -->
        <replace css:theme-children="#main-title" css:content-children="#parent-fieldname-title" nocontent="ignore" />
        <drop css:content="#parent-fieldname-title" />
        <!-- /title -->


        <!-- sidepanel -->
        <merge attributes="href title" css:theme="#sidepanel-home"      css:content="#portal-logo" />

        <merge attributes="href title" css:theme="#sidepanel-imessage"  css:content=".write-message > a" />
        <merge attributes="href title" css:theme="#sidepanel-myprofile" css:content=".my-profile > a" />

        <drop css:theme="#sidemenu > .members" css:if-not-content="#portaltab-Members" />
        <drop css:content="#portaltab-Members > ul" />
        <replace css:theme="#sidepanel-Members" css:content-children="#portaltab-Members" />
        <merge attributes="class" theme="//*[@id='sidepanel-Members']/.." css:content="#portaltab-Members" />

        <drop css:theme="#sidemenu > .events" css:if-not-content="#portaltab-events" /> 
        <drop css:content="#portaltab-events > ul" />
        <replace css:theme="#sidepanel-events" css:content-children="#portaltab-events" />
        <merge attributes="class" theme="//*[@id='sidepanel-events']/.." css:content="#portaltab-events" /> 

        <drop css:theme="#sidemenu > .mystuff" css:if-not-content="#personaltools-mystuff" /> 
        <replace css:theme="#sidepanel-mystuff" css:content-children="#personaltools-mystuff" />

        <drop css:theme="#sidemenu > .dashboard" css:if-not-content="#personaltools-dashboard" />
        <replace css:theme="#sidepanel-dashboard" css:content-children="#personaltools-dashboard" />

        <drop css:theme="#sidemenu > .control" css:if-not-content="#personaltools-plone_setup" />
        <replace css:theme="#sidepanel-control" css:content-children="#personaltools-plone_setup" />


        <rules css:if-not-content=".managePortletsFallback" >
            <drop css:theme="#sidemenu > .portlets" css:if-not-content=".managePortletsLink" /> 
            <replace css:theme="#sidepanel-portlets" content-children="(//*[@class='managePortletsLink'])[1]" />
        </rules>
        <rules css:if-not-content=".managePortletsLink" >
            <drop css:theme="#sidemenu > .portlets" css:if-not-content=".managePortletsFallback" />
            <replace css:theme="#sidepanel-portlets" content="//*[@class='managePortletsFallback']" />
        </rules>
        <drop css:content=".managePortletsLink" />
                

        <!-- /sidepanel -->


        <!-- Search -->
        <copy attributes="action" css:theme="#searchbox" css:content="#portal-searchbox form" />
        <copy attributes="name" css:theme="#searchbox .search-query" css:content="#portal-searchbox form .searchField" />

        <!-- content -->
        <!-- 
        portal-column-one:      1. Spalte
        portal-column-content:  2. Spalte
        portal-column-two:      3. Spalte (!)
        -->
        <!-- OXO -->
        <rules css:if-not-content="#portal-column-one" >
            <rules css:if-not-content="#portal-column-two" >
                <drop css:theme="#THEME-XXX" />
                <drop css:theme="#THEME-XXO" />
                <drop css:theme="#THEME-OXX" />
                <!-- <drop css:theme="#THEME-OXO" /> -->
            </rules>
        </rules>
        <!-- XXO -->
        <rules css:if-content="#portal-column-one" >
            <rules css:if-not-content="#portal-column-two" >
                <drop css:theme="#THEME-XXX" />
                <!-- <drop css:theme="#THEME-XXO" /> -->
                <drop css:theme="#THEME-OXX" />
                <drop css:theme="#THEME-OXO" />
            </rules>
        </rules>
        <!-- OXX -->
        <rules css:if-not-content="#portal-column-one" >
            <rules css:if-content="#portal-column-two" >
                <drop css:theme="#THEME-XXX" />
                <drop css:theme="#THEME-XXO" />
                <!-- <drop css:theme="#THEME-OXX" /> -->
                <drop css:theme="#THEME-OXO" />
            </rules>
        </rules>
        <!-- XXX -->
        <rules css:if-content="#portal-column-one" >
            <rules css:if-content="#portal-column-two" >
                <!-- <drop css:theme="#THEME-XXX" /> -->
                <drop css:theme="#THEME-XXO" />
                <drop css:theme="#THEME-OXX" />
                <drop css:theme="#THEME-OXO" />
            </rules>
        </rules>
        <replace css:theme-children="#portal-column-content" css:content-children="#portal-column-content"  nocontent="ignore" />
        <replace css:theme-children="#portal-column-one"     css:content-children="#portal-column-one"      nocontent="ignore" />
        <replace css:theme-children="#portal-column-two"     css:content-children="#portal-column-two"      nocontent="ignore" />
        <!-- /content -->


    <!--
      <replace css:theme="body" css:content="body" nocontent="ignore" />
    -->

   </rules>

    <!-- LIVESEARCH -->
<!--
    <xsl:template match="//div[@id='viewlet-above-content']">
        <div id="livesearch-wrapper">
            <xsl:copy-of select="//*[@id[contains(., 'livesearch-container')]]" />
        </div>
    </xsl:template>
    <xsl:template match="//div[@class='portletWrapper']/div[@id='livesearch-container']" ></xsl:template>
-->
    <!-- /LIVESEARCH -->    

    <!-- description DAS FUNKTIONIERT!!! mit select="attribute::*[not(name()='class')]" -->
    <xsl:template match="//div[@class[contains(., 'documentDescription') ]]">
        <div>
            <xsl:copy-of select="attribute::*[not(name()='class')]" />
            <xsl:attribute name="class">__funktioniert <xsl:value-of select="@class" /></xsl:attribute>
            <xsl:apply-templates />
        </div>
    </xsl:template>
    <!-- /description -->    

    <!-- tables -->
    <xsl:template match="//table[@class[contains(., 'listing')]]">
        <table>
            <xsl:copy-of select="attribute::*[not(name()='class')]" />
            <xsl:attribute name="class">table-striped table-bordered table-hover table <xsl:value-of select="@class" /></xsl:attribute>
            <xsl:apply-templates />
        </table>
    </xsl:template>
    <!-- /tables -->

    <!-- listing bar -->
    <xsl:template match="//div[@class='listingBar']">
        <div>
            <xsl:copy-of select="attribute::*[not(name()='class')]" />
            <xsl:attribute name="class"><xsl:value-of select="@class" /> pagination</xsl:attribute>
            <ul>
                <xsl:if test="span[@class='previous']/a">
                    <li>
                        <xsl:copy-of select="span[@class='previous']/a" />
                    </li>
                </xsl:if>
                <xsl:for-each select="*[not(contains(@class, 'previous')) and not(contains(@class, 'next'))]">
                    <xsl:choose>
                        <xsl:when test="child::a and not(child::text())">
                        <li>
                            <xsl:copy-of select="./a[text()]" />
                        </li>
                        </xsl:when>
                        <xsl:when test="child::a and child::text()">
                            <xsl:if test="position() = last()">
                            <li>
                                <xsl:attribute name="class">disabled</xsl:attribute>
                                <a>
                                    <xsl:attribute name="href">#</xsl:attribute>
                                    <xsl:copy-of select="text()" />
                                </a>
                            </li>
                            </xsl:if>
                            <li>
                                <xsl:copy-of select="./a[text()]" />
                            </li>
                            <xsl:if test="position() = 1">
                            <li>
                                <xsl:attribute name="class">disabled</xsl:attribute>
                                <a>
                                    <xsl:attribute name="href">#</xsl:attribute>
                                    <xsl:copy-of select="text()" />
                                </a>
                            </li>
                            </xsl:if>
                        </xsl:when>
                        <xsl:when test="name()='span' and not(child::a)">
                            <li>
                                <xsl:attribute name="class">active</xsl:attribute>
                                <a>
                                    <xsl:attribute name="href">#</xsl:attribute>
                                    <xsl:copy-of select="text()" />
                                </a>
                            </li>
                            </xsl:when>
                        <xsl:when test="@href">
                            <li>
                                <a>
                                    <xsl:attribute name="href"><xsl:value-of select="@href" /></xsl:attribute>
                                    <xsl:copy-of select="text()" />
                                </a>
                            </li>
                        </xsl:when>
                        <xsl:otherwise>
                            <li>
                                <xsl:attribute name="class">disabled</xsl:attribute>
                                <a>
                                    <xsl:attribute name="href">#</xsl:attribute>
                                    <xsl:copy-of select="text()" />
                                </a>
                            </li>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:for-each>
                <xsl:if test="span[@class='next']/a">
                    <li>
                        <xsl:copy-of select="span[@class='next']/a" />
                    </li>
                </xsl:if>
            </ul>
        </div>
    </xsl:template>
    <!-- /listing bar -->

    <!-- edit tabs -->
    <xsl:template match="//li[@id[contains(., 'contentview-folderContents')]]/a">        
        <a>
            <xsl:copy-of select="attribute::*" />
            <i class="fa fa-list" ></i>
            <div class="text"><xsl:copy-of select="./text()" /></div>
        </a>
    </xsl:template>
    <xsl:template match="//li[@id[contains(., 'contentview-view')]]/a">        
        <a>
            <xsl:copy-of select="attribute::*" />
            <i class="fa fa-eye" ></i>
            <div class="text"><xsl:copy-of select="./text()" /></div>
        </a>
    </xsl:template>

    <xsl:template match="//li[@id[contains(., 'contentview-edit')]]/a">
        <a>
            <xsl:copy-of select="attribute::*" />
            <i class="fa fa-edit" ></i>
            <div class="text"><xsl:copy-of select="./text()" /></div>
        </a>
    </xsl:template>
    <xsl:template match="//li[@id[contains(., 'contentview-local_roles')]]/a">
        <a>
            <xsl:copy-of select="attribute::*" />
            <i class="fa fa-shield" ></i>
            <div class="text"><xsl:copy-of select="./text()" /></div>
        </a>
    </xsl:template>
    <xsl:template match="//li[@id[contains(., 'contentview-transform')]]/a">
        <a>
            <xsl:copy-of select="attribute::*" />
            <i class="fa fa-picture-o" ></i>
            <div class="text"><xsl:copy-of select="./text()" /></div>
        </a>
    </xsl:template>



    <xsl:template match="//dl[@id[contains(., 'plone-contentmenu-factories')]]/dt/a">
        <a>
            <xsl:copy-of select="attribute::*" />
            <i class="fa fa-plus-square" ></i>
        </a>
    </xsl:template>

    <xsl:template match="//dl[@id[contains(., 'plone-contentmenu-display')]]/dt/a">
        <a>
            <xsl:copy-of select="attribute::*" />
            <i class="fa fa-dot-circle-o" ></i>
        </a>
    </xsl:template>
    <xsl:template match="//dl[@id[contains(., 'plone-contentmenu-actions')]]/dt/a">
        <a>
            <xsl:copy-of select="attribute::*" />
            <i class="fa fa-clipboard" ></i>
        </a>
    </xsl:template>


    <xsl:template match="//a/span/text()[contains(.,'Status')]"><!-- status --></xsl:template> 

<!--
    <xsl:template match="//dl[@id[contains(., 'plone-contentmenu-workflow')]]/dt/a">
        <a>
            <xsl:copy-of select="attribute::*" />
            <i class="fa fa-bullseye" ></i>
        </a>
    </xsl:template>
-->
    <!-- /edit tabs -->


    <!-- form buttons -->
    <xsl:template match="//input[@type[contains(., 'submit') or contains(., 'button')]]">
        <input>
            <xsl:copy-of select="attribute::*[not(name()='class')]" />
            <xsl:attribute name="class"><xsl:value-of select="@class" /> btn btn-default btn-sm
                <xsl:if test="@name[contains(., 'delete') or contains(., 'Remove')]">btn-danger</xsl:if>
                <xsl:if test="@name[contains(., 'save') or contains(., 'Save') or contains(., 'RenameAll')]">btn-primary</xsl:if>
            </xsl:attribute>
        </input>
    </xsl:template>
    <!-- /form buttons -->    


</rules>

