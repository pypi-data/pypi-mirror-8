Manuel utilisateur
==================

:Author: Sylvain Thénault
:Organization: Logilab
:Version: $Revision: 1.7 $
:Date: $Date: 2005-03-29 14:24:04 $
:Abstract:
    Logilab documentation's tools user manual.


py2dbk
------

Description
```````````
Transform a Python_ module into a Docbook_ document to get it nicely
formated (and usually to include it from another Docbook document). 

Synopsis
````````
::

    USAGE: py2dbk [OPTIONS] <input.py>...

    OPTIONS:
      -h / --help
	   display this help message and exit

      -r / --root "rootstring"
	   insert "rootstring" as root

      -f / --format <OUTPUT_FORMAT>
	   set output format. Default to docbook.
	   Available formats are docbook, extended-docbook.

      -s / --stdout
	   write results to standard output

Example
```````
::

    py2dbk --format extended-docbook myfile.py

This example should produce a **myfile.xml** file containing the Python
source code from *myfile.py* formatted as a XML Docbook document. The
extended-docbook format will use special roles that should be handled
by specifics FO (PDF) or CSS (HTML) stylesheets.



xml2dbk
-------

Description
```````````
Transform any XML file into a Docbook_ or HTML document to get it nicely
formated (and usually to include it from another Docbook document).

Synopsis
````````
::

    USAGE: xml2dbk [OPTIONS] <input.xml>...

    OPTIONS:
      -h / --help
	   display this help message and exit

      -o / --output <OUTPUT_FILE>
	   write results in file <OUTPUT_FILE>.
      -s / --stdout
	   write results to standard output.
      -e / --encoding iso-8859-1
	   specify encoding to use in outputs.

      -n / --no-head
	   do not insert output headers.

      -f / --format <OUTPUT_FORMAT>
	   set output format. Default to docbook.
	   Available formats are docbook, extended-docbook, html.

Example
```````
::

    xml2dbk --format extended-docbook myfile.xml

This example should produce a **myfile_dcbk.xml** file containing the
original XML document from *myfile.xml* formatted as a XML Docbook
document. The extended-docbook format will use special roles that
should be handled by specifics FO (PDF) or CSS (HTML) stylesheets.



mkdoc
-----

Description
```````````
Transform ReST_ (Restructured Text) or Docbook_ files to html ou
pdf. You will need some external stylesheets not included in this
package to get the Docbook_ to HTML or PDF transformation done.

Available format depends on the installed transformation. FIXME: write
doc about this...

Synopsis
````````
::

    USAGE: mkdoc [OPTIONS] <input file>...

    OPTIONS:
      -h / --help
	   display this help message and exit

      -f / --format <OUTPUT_FORMAT>
	   set output format. Default to html.
	   Available formats are docbook, html, multi_html, pdf, pdf_ao, pdf_iup, pdf_manual, pdf_psyc, site_html.

      -n / --noverif
	   doesn't verify XML correctness.
      -k / --keep-tmp
	   doesn't remove temporary directory where transforms are done.

      -p / --parameter <NAME>:<VALUE>
	   sets the <NAME> stylesheet parameter to <VALUE>. You may set this option
	   multiple times. Parameters are given to the xslt processor.

Example
```````
::

    mkdoc --format pdf myfile.rst unautrefichier.xml

This example should produce **myfile.pdf** and **anotherfile.pdf**
files containing each original document (one in ReST and the other in
Docbook) formatted as a PDF file.


.. _ReST: http://docutils.sourceforge.net/rst.html
.. _Docbook: http://www.docbook.org
.. _Python: http://www.python.org