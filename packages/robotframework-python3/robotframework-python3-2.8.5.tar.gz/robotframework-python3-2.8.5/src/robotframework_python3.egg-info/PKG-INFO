Metadata-Version: 1.1
Name: robotframework-python3
Version: 2.8.5
Summary: Python 3 compatible generic test automation framework
Home-page: https://bitbucket.org/userzimmermann/robotframework-python3
Author: Stefan Zimmermann
Author-email: zimmermann.code@gmail.com
License: Apache License 2.0
Download-URL: https://pypi.python.org/pypi/robotframework-python3
Description: Robot Framework with Python 3.3+ compatibility
        ==============================================
        
        https://bitbucket.org/userzimmermann/robotframework-python3
        
        - Forked from https://robotframework.googlecode.com
        - Compatible with **Python 2.7**
        
        Please report any issues to:
        
        https://bitbucket.org/userzimmermann/robotframework-python3/issues
        
        You can look at this URL for a complete code diff:
        
        https://bitbucket.org/userzimmermann/robotframework-python3/compare/master..robot#diff
        
        
        Installation
        ------------
        
        ::
        
            python setup.py install
        
        Or with `pip <http://www.pip-installer.org>`_::
        
            pip install .
        
        Or from `PyPI <https://pypi.python.org/pypi/robotframework-python3>`_::
        
            pip install robotframework-python3
        
        Requirements
        ............
        
        * `six <https://pypi.python.org/pypi/six>`_
        
        
        Differences in Python 3
        -----------------------
        
        Python 3 makes a clear distinction between *str* for textual data
        and *bytes* for binary data.
        This affects the Standard Test Libraries and their Keywords:
        
        - *str* arguments don't work where *bytes* are expected,
          like writing to binary file streams or comparing with other *bytes*.
        - *bytes* don't work where *str* is expected,
          like writing to text mode streams or comparing with another *str*.
        - Reading from binary streams always returns *bytes*.
        - Reading from text streams always returns *str*.
        
        You can use the following keywords to explicitly create *bytes*:
        
        - **BuiltIn.Convert To Bytes**
        - **String.Encode String To Bytes**
        
        I extended **Process.Start Process** with a *binary_mode* argument.
        By default the process streams are opened in text mode.
        You can change this with::
        
            binary_mode=True
        
        **Collections.Get Dictionary Keys** normally sorts the keys.
        I disabled key sorting in Python 3,
        because most builtin types are not comparable to each other.
        This further affects **Get Dictionary Values** and **Get Dictionary Items**.
        I still need to find a better solution... Maybe imitate Python 2 sorting?
        Any suggestions? :)
        
        
        -- **Stefan Zimmermann**
        
        
        Robot Framework
        ===============
        
        Robot Framework is a generic test automation framework for acceptance
        testing and acceptance test-driven development (ATDD). It has
        easy-to-use tabular test data syntax and utilizes the keyword-driven
        testing approach. Its testing capabilities can be extended by test
        libraries implemented either with Python or Java, and users can create
        new keywords from existing ones using the same syntax that is used for
        creating test cases.
Keywords: robotframework testing testautomation atdd bdd python3
Platform: any
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Topic :: Software Development :: Testing
