(function(){RBMozUI={},$(document).ready(function(){function t(t){$("#error-info").text(t),e.attr("haserror","true")}var e=$("#error-container");$("#error-close").click(function(t){e.attr("haserror",!1)}),RBMozUI.Reviewer=RB.BaseResource.extend({defaults:{username:""},initialize:function(e){var t=e.person;t.hasOwnProperty("username")?this.set("username",t.username):this.set("username",t.title)}}),RBMozUI.ReviewerList=Backbone.Collection.extend({model:RBMozUI.Reviewer}),RBMozUI.Commit=Backbone.Model.extend({defaults:{loaded:!1},requestOrDraft:function(){return this.reviewRequest.draft.id!==undefined?this.reviewRequest.draft:this.reviewRequest},hasDraft:function(){return this.reviewRequest.draft.id!==undefined},initialize:function(e){this.reviewers=new RBMozUI.ReviewerList,this.reviewRequest=new RB.ReviewRequest({id:e.reviewRequestID}),this.commitID=e.commitID,this.commitNum=e.commitNum,this.editor=new RB.ReviewRequestEditor({reviewRequest:this.reviewRequest})},ready:function(e,t){this.reviewRequest.draft.ready({ready:function(){e(),this.resetReviewers(),this.set("loaded",!0)},error:function(e){t(e)}},this)},resetReviewers:function(){var e=this.requestOrDraft().get("targetPeople"),t=_.map(e,function(e){return new RBMozUI.Reviewer({person:e})});this.reviewers.reset(t)},removeReviewer:function(e){var t=this.reviewers.pluck("username").filter(function(t){return t!=e}).join(","),n=this;this.editor.setDraftField("targetPeople",t,{jsonFieldName:"target_people",success:function(){console.log("Successfully removed reviewer "+e),n.resetReviewers()},error:function(e){console.error(e.errorText)}})},addReviewer:function(e){var n=this.reviewers.pluck("username");n.push(e);var r=n.join(","),i=this;this.editor.setDraftField("targetPeople",r,{jsonFieldName:"target_people",success:function(){console.log("Successfully added reviewer "+e),i.resetReviewers()},error:function(e){t(e.errorText)}})}}),RBMozUI.CommitsList=Backbone.Collection.extend({model:RB.ReviewRequest});var n=new RBMozUI.CommitsList;RBMozUI.CommitView=Backbone.View.extend({tagName:"li",className:"commit-list-item",events:{"click .remove":"removeReviewer","submit .reviewer-form":"onReviewerSubmit"},loadingTemplate:_.template($("#loading-template").html()),commitTemplate:_.template($("#commit-template").html()),reviewerTemplate:_.template($("#reviewer-template").html()),initialize:function(e){this.listenTo(this.model,"change",this.render),this.listenTo(this.model.reviewRequest,"change",this.render),this.listenTo(this.model.reviewRequest.draft,"change",this.render),this.listenTo(this.model.reviewers,"reset",this.reviewersChanged),this.model.ready(function(){console.log("Successfully loaded Commit with ID"+this.model.commitID)}.bind(this),this.handleError.bind(this))},handleError:function(e){t(e)},computeState:function(){return this.model.reviewRequest.get("public")?this.model.hasDraft()?"unsaved-changes":"published":"needs-publishing"},reviewersChanged:function(){this.render(),this.$el.find("input.reviewer-input").focus()},render:function(){var e=this.$el.find("input.reviewer-input");e&&e.blur();if(!this.model.get("loaded"))return this.$el.html(this.loadingTemplate({commitID:this.model.commitID})),this;var t=this.model.requestOrDraft(),n=SITE_ROOT+"r/"+this.model.reviewRequest.id;return this.$el.html(this.commitTemplate({reviewerTemplate:this.reviewerTemplate,commitLink:n,commitNum:this.model.commitNum,summary:t.get("summary"),description:t.get("description"),hasReviewers:t.get("targetPeople").length>0,reviewers:this.model.reviewers,commitID:this.model.commitID,state:this.computeState()})),this.buildReviewerAutocomplete(this.$el.find("input.reviewer-input")),this},buildReviewerAutocomplete:function(e){e.length||t("Couldn't find reviewer input for commit "+this.model.commitID);var n=this.model,r=this.model.reviewRequest,i=$(e[0]),s={fieldName:"users",nameKey:"username",descKey:"fullname",extraParams:{fullname:1},cmp:function(e,t,n){var r=t.data.username,i=n.data.username,s=t.data.fullname,o=t.data.fullname;return r.indexOf(e)===0?i.indexOf(e)===0?r.localeCompare(i):-1:i.indexOf(e)===0?1:s.localeCompare(o)}};i.rbautocomplete({formatItem:function(e){var t=e[s.nameKey];return s.descKey&&e[s.descKey]&&(t+=" <span>("+_.escape(e[s.descKey])+")</span>"),t},matchCase:!1,multiple:!1,parse:function(e){var t=e[s.fieldName],n=t.length,r=[],i,o;for(o=0;o<n;o++)i=t[o],r.push({data:i,value:i[s.nameKey],result:i[s.nameKey]});return r},result:function(e,t,r){console.log("Adding reviewer: "+r),n.addReviewer(r)},url:SITE_ROOT+"api/"+(s.resourceName||s.fieldName)+"/",extraParams:s.extraParams,cmp:s.cmp,width:350,error:function(e){var n;try{n=$.parseJSON(e.responseText).err.msg}catch(r){n="HTTP "+e.status+" "+e.statusText}t(n)}}).on("autocompleteshow",function(){var e=$(".ui-autocomplete-results:not(:has(.ui-autocomplete-footer))");e.length>0&&$("<div/>").addClass("ui-autocomplete-footer").text(gettext("Press Tab to auto-complete.")).appendTo(e)})},removeReviewer:function(e){var t=e.target.dataset.username;console.log("Removing reviewer with id: "+t),this.model.removeReviewer(t)},onReviewerSubmit:function(e){e.preventDefault();var t=this.$el.find(".reviewer-input").first().val();console.log("Adding reviewer with id: "+t),this.model.addReviewer(t)}}),RBMozUI.CommitsView=Backbone.View.extend({initialize:function(e){this.listenTo(n,"add",this.add),this.model=new RB.ReviewRequest({id:e.squashedID}),$("#publish").click(this.publish.bind(this));var t=e.commits,r=t.map(function(e,t){return new RBMozUI.Commit({reviewRequestID:e[1],commitNum:t,commitID:e[0]})});n.add(r)},add:function(e){var t=new RBMozUI.CommitView({model:e});$("#commit-list").append(t.render().el)},publish:function(){$("#publish").prop("disabled",!0),this.model.draft.ready({ready:function(){var e=new RB.ReviewRequestEditor({reviewRequest:this.model}),r=_.unique(_.union.apply(this,n.map(function(e){return e.reviewers.pluck("username")}))).join(",");console.log("Setting reviewers on squashed request to: "+r),e.setDraftField("targetPeople",r,{jsonFieldName:"target_people",success:function(){e.setDraftField("public",!0,{jsonFieldName:"public",success:function(){console.log("Successfully published - reloading page..."),$("#publish").prop("disabled",!1),location.reload()},error:function(e){$("#publish").prop("disabled",!1),t(e)}})},error:function(e){t("Failed to set reviewers on squashed review: "+e.errorText)}})}},this)}})})}).call(this);