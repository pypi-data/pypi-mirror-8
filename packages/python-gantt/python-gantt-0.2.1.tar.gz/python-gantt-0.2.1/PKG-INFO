Metadata-Version: 1.1
Name: python-gantt
Version: 0.2.1
Summary: This is a python class to create gantt chart using SVG.
Home-page: http://xael.org/norman/python/python-gantt/
Author: Alexandre Norman
Author-email: norman@xael.org
License: gpl-3.0.txt
Description: Python-Gantt
        ============
        
        | Python-Gantt make possible to easily draw gantt charts from Python.
        | Output format is SVG.
        
        Installation
        ------------
        
        Requirements
        ~~~~~~~~~~~~
        
        This projects needs the following libraries:
        
        -  svgwrite see https://bitbucket.org/mozman/svgwrite/
        
        Additionnal requirements
        ~~~~~~~~~~~~~~~~~~~~~~~~
        
        For using org2gantt script, the following libraries is needed:
        
        -  clize, see https://github.com/epsy/clize
        
        Installation
        ~~~~~~~~~~~~
        
        ::
        
            python setup.py install
        
        Example
        -------
        
        ::
        
            #!/usr/bin/env python3
            # -*- coding: utf-8-unix -*-
        
            import datetime
            import gantt
        
            # Add vacations for everyone
            gantt.add_vacations(datetime.date(2014, 12, 25))
            gantt.add_vacations(datetime.date(2015, 1, 1))
            gantt.add_vacations(datetime.date(2015, 1, 13))
        
            # Create two ressources
            rANO = gantt.Ressource('ANO')
            rJLS = gantt.Ressource('JLS')
        
            # Add vacations for one lucky ressource
            rANO.add_vacations(
                dfrom=datetime.date(2014, 12, 29), 
                dto=datetime.date(2015, 1, 4) 
                )
            rANO.add_vacations(
                dfrom=datetime.date(2015, 1, 6), 
                dto=datetime.date(2015, 1, 8) 
                )
        
            # Test if this ressource is  avalaible for some dates
            print(rANO.is_available(datetime.date(2015, 1, 5)))
            print(rANO.is_available(datetime.date(2015, 1, 8)))
            print(rANO.is_available(datetime.date(2015, 1, 6)))
            print(rANO.is_available(datetime.date(2015, 1, 2)))
            print(rANO.is_available(datetime.date(2015, 1, 1)))
        
        
            # Create some tasks
            t1 = gantt.Task(name='tache1', start=datetime.date(2014, 12, 25), duration=4, percent_done=44, ressources=[rANO], color="#FF8080")
            t2 = gantt.Task(name='tache2', start=datetime.date(2014, 12, 28), duration=6, ressources=[rJLS])
            t7 = gantt.Task(name='tache7', start=datetime.date(2014, 12, 28), duration=5, percent_done=50)
            t3 = gantt.Task(name='tache3', start=datetime.date(2014, 12, 25), duration=4, depends_of=[t1, t7, t2], ressources=[rJLS])
            t4 = gantt.Task(name='tache4', start=datetime.date(2015, 01, 01), duration=4, depends_of=t1, ressources=[rJLS])
            t5 = gantt.Task(name='tache5', start=datetime.date(2014, 12, 23), duration=3)
            t6 = gantt.Task(name='tache6', start=datetime.date(2014, 12, 25), duration=4, depends_of=t7, ressources=[rANO])
            t8 = gantt.Task(name='tache8', start=datetime.date(2014, 12, 25), duration=4, depends_of=t7, ressources=[rANO, rJLS])
        
        
            # Create a project
            p1 = gantt.Project(name='Projet 1')
        
            # Add tasks to this project
            p1.add_task(t1)
            p1.add_task(t7)
            p1.add_task(t2)
            p1.add_task(t3)
            p1.add_task(t5)
            p1.add_task(t8)
        
        
        
            # Create another project
            p2 = gantt.Project(name='Projet 2', color='#FFFF40')
        
            # Add tasks to this project
            p2.add_task(t2)
            p2.add_task(t4)
        
        
            # Create another project
            p = gantt.Project(name='Gantt')
            # wich contains the first two projects
            # and a single task
            p.add_task(p1)
            p.add_task(p2)
            p.add_task(t6)
        
        
        
        
            ##########################$ MAKE DRAW ###############
            p.make_svg_for_tasks(filename='test_full.svg', today=datetime.date(2014, 12, 31), start=datetime.date(2014,8, 22), end=datetime.date(2015, 01, 14))
            p.make_svg_for_tasks(filename='test_full2.svg', today=datetime.date(2014, 12, 31))
            p.make_svg_for_tasks(filename='test.svg', today=datetime.date(2014, 12, 31), start=datetime.date(2015, 01, 3), end=datetime.date(2015, 01, 06))
            p1.make_svg_for_tasks(filename='test_p1.svg', today=datetime.date(2014, 12, 31))
            p2.make_svg_for_tasks(filename='test_p2.svg', today=datetime.date(2014, 12, 31))
            p.make_svg_for_ressources(filename='test_ressources.svg', today=datetime.date(2014, 12, 31), ressources=[rANO, rJLS])
            ##########################$ /MAKE DRAW ###############
        
        Licence
        -------
        
        GPL v3 or any later version
        
        Author
        ------
        
        Alexandre Norman (norman at xael.org)
        
          -------------- --------------------------- ----------------------------------------------------------------------- --------------------------------------------------------------------------------------------------------------------------------------------
          c3ba6b24cca6   2015-01-05 21:06:48 +0100   A: cleanup, org2gantt separation                                        .hgignore Makefile Orgnode.py clize.py example.org org2gantt.py org2gantt/Orgnode.py org2gantt/example.org org2gantt/org2gantt.py setup.py
          729aa36d1a3c   2015-01-05 19:43:38 +0100   A: Put a variable on python executable                                  Makefile
          c3afc6e1e68f   2015-01-04 23:29:47 +0100   A: cleanup                                                              Makefile gantt/gantt.py org2gantt.py
          1885b967b99c   2015-01-04 23:11:30 +0100   A: updating changelog rule un Makefile                                  Makefile
          20e9fdd94869   2015-01-04 22:57:36 +0100   A: correcting Makefile                                                  Makefile gantt/gantt.py
          1a68a345eead   2015-01-04 22:54:45 +0100   A: adding CHANGELOG rule to Makefile                                    .hgignore Makefile
          48d74142c8b1   2015-01-04 22:44:44 +0100   A: cleanup                                                              
          cfb0f2860cef   2015-01-04 21:32:33 +0000   norman: README.md edited online with Bitbucket                          README.md
          bd4dbac168b7   2015-01-04 21:23:08 +0000   norman: README.md edited online with Bitbucket                          README.md
          f90379de5035   2015-01-04 22:43:56 +0100   A: cleanup                                                              example.py gantt/_~init~__.py setup.py
          59ceb3f8a604   2015-01-04 22:20:28 +0100   A: cleanup                                                              Makefile gantt/gantt.py
          d8738885046e   2015-01-04 22:16:42 +0100   A: module cleanup                                                       .hgignore MANIFEST.in Makefile gantt/gantt.py gpl-3.0.txt org2gantt.py setup.py
          28c1b91c4dc1   2015-01-04 22:11:58 +0100   A: Python 3 support                                                     Orgnode.py
          e393e242ce0a   2015-01-04 20:24:37 +0100   A: project organisation                                                 MANIFEST.in Makefile gantt.py gantt/_~init~__.py gantt/gantt.py setup.py
          a8c94d0f669c   2015-01-04 20:02:17 +0100   A: cleanup repository                                                   .hgignore Orgnode.py TEST.org
          dfc8a26b43b7   2015-01-04 19:55:48 +0100   A: adding hgignore                                                      .hgignore
          1ef48dbd6168   2015-01-04 19:22:05 +0100   A: improving design for ressources                                      gantt.py
          c7510613ac4f   2015-01-04 18:53:12 +0100   A: bug correction on overlapping tasks                                  gantt.py
          fd10bcc30d96   2014-12-30 21:01:09 +0100   xael: ajout README                                                      README.org TEST.org example.org gantt.py org2gantt.py
          282fa533cb5f   2014-12-30 16:02:48 +0100   xael: seems working                                                     TEST.org gantt.py org2gantt.py
          6201961be461   2014-12-30 13:15:31 +0100   xael: bug seems resolved                                                gantt.py
          175c75ad64a5   2014-12-30 12:02:00 +0100   xael: bug sur le calcul de debut des taches si stop et duration fixes   TEST.org gantt.py org2gantt.py
          dd14c4a33b34   2014-12-29 23:10:02 +0100   xael: conversion de orgmode vers gantt                                  Orgnode.py TEST.org clize.py gantt.py org2gantt.py
          c5d2a0e281a7   2014-12-27 23:28:23 +0100   xael: polishing                                                         example.py gantt.py
          a90222384d92   2014-12-27 22:42:23 +0100   xael: code documentation, little refactoring of the code                example.py gantt.py
          2320512fbeb0   2014-12-27 22:05:03 +0100   xael: gestion des conflits de tache pour une ressource                  example.py gantt.py
          738fe2006c37   2014-12-27 21:52:59 +0100   xael: gestion des conflits de tache pour une ressource                  example.py gantt.py
          41a4edfdd39c   2014-12-27 20:32:17 +0100   xael: fonctinnel                                                        example.py gantt.py
          5bd33d17994b   2014-12-27 20:30:38 +0100   xael: fonctinnel                                                        example.py gantt.py
          472deec80fed   2014-12-27 20:21:59 +0100   xael: fonctinnel                                                        gantt.py
          f9dd11b7d74e   2014-12-27 20:19:36 +0100   xael: fonctinnel                                                        example.py gantt.py
          bb25992bf335   2014-12-26 19:29:25 +0100   A: adding cache capabilities                                            example.py gantt.py
          b00bf801ac6b   2014-12-26 19:13:04 +0100   A: mise à jour                                                          example.py gantt.py
          8547d1c4c382   2014-12-26 00:39:09 +0100   A: python gantt                                                         gantt.py
          -------------- --------------------------- ----------------------------------------------------------------------- --------------------------------------------------------------------------------------------------------------------------------------------
        
        
        
Keywords: gantt,graphics,scheduling,project management
Platform: Operating System :: OS Independent
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Operating System :: OS Independent
Classifier: Topic :: Multimedia :: Graphics :: Editors :: Vector-Based
Classifier: Topic :: Office/Business :: Scheduling
Classifier: Topic :: Scientific/Engineering :: Visualization
Requires: svgwrite (>=1.1.6)
Requires: clize (>=2.0)
